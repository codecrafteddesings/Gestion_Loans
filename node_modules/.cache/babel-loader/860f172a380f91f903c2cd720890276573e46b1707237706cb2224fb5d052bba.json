{"ast":null,"code":"var _jsxFileName = \"D:\\\\Usuario\\\\wilme\\\\Escritorio\\\\Gestion_Loans_Clean\\\\loan-app-ui\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [loans, setLoans] = useState([]);\n  const [clients, setClients] = useState([]);\n  const [recentPayments, setRecentPayments] = useState([]);\n  const [editLoan, setEditLoan] = useState(null);\n  useEffect(() => {\n    fetchLoans();\n    fetchClients();\n    fetchRecentPayments();\n  }, []);\n  const fetchLoans = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/loans');\n      setLoans(response.data);\n    } catch (error) {\n      console.error('Error fetching loans:', error);\n    }\n  };\n  const fetchClients = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/clients');\n      setClients(response.data);\n    } catch (error) {\n      console.error('Error fetching clients:', error);\n    }\n  };\n  const fetchRecentPayments = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/payments');\n      setRecentPayments(response.data);\n    } catch (error) {\n      console.error('Error fetching recent payments:', error);\n    }\n  };\n  const handleDeleteClient = async clientId => {\n    if (window.confirm('¿Estás seguro de que deseas eliminar este cliente?')) {\n      try {\n        await axios.delete(`http://localhost:5000/api/clients/${clientId}`);\n        fetchClients(); // Recargar la lista de clientes después de eliminar\n      } catch (error) {\n        console.error('Error deleting client:', error);\n      }\n    }\n  };\n  const handleEditLoan = loan => {\n    setEditLoan(loan);\n  };\n  const handleDeleteLoan = async loanId => {\n    if (window.confirm('¿Estás seguro de que deseas eliminar este préstamo?')) {\n      try {\n        await axios.delete(`http://localhost:5000/api/loans/${loanId}`);\n        fetchLoans(); // Recargar la lista de préstamos después de eliminar\n      } catch (error) {\n        console.error('Error deleting loan:', error);\n      }\n    }\n  };\n  const handleUpdateLoan = async e => {\n    e.preventDefault();\n    try {\n      await axios.put(`http://localhost:5000/api/loans/${editLoan._id}`, editLoan);\n      setEditLoan(null); // Limpiar el estado de edición después de actualizar\n      fetchLoans(); // Recargar la lista de préstamos después de actualizar\n    } catch (error) {\n      console.error('Error updating loan:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Clientes totales\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card bg-info text-white\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"card-title\",\n          children: \"Clientes totales\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: clients.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Total de Pr\\xE9stamos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card bg-success text-white\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"card-title\",\n          children: \"Total de Pr\\xE9stamos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: loans.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Pr\\xE9stamos en Mora\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card bg-danger text-white\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"card-title\",\n          children: \"Pr\\xE9stamos en Mora\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: loans.filter(loan => loan.status === 'mora').length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Pagos Recientes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-striped\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Cliente\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Monto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Fecha\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: recentPayments.map(payment => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: payment.clientId.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: payment.amount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: new Date(payment.date).toLocaleDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this)]\n        }, payment._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Buscar Cliente\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Buscar por nombre o c\\xE9dula\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Buscar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Resultados de la B\\xFAsqueda\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-striped\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Nombre\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Correo Electr\\xF3nico\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Tel\\xE9fono\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"C\\xE9dula\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Direcci\\xF3n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Acciones\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: clients.map(client => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: client.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: client.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: client.phone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: client.cedula\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: client.address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-warning mr-2\",\n              onClick: () => handleEditClient(client),\n              children: \"Editar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-danger\",\n              onClick: () => handleDeleteClient(client._id),\n              children: \"Eliminar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this)]\n        }, client._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Pr\\xE9stamos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-info mb-2\",\n      onClick: fetchLoans,\n      children: \"Cargar Pr\\xE9stamos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-striped\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Cliente\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Monto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Tasa de Inter\\xE9s\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Plazo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Frecuencia\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Estado\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Fecha de Vencimiento\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Acciones\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: loans.map(loan => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: loan.clientId.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: loan.amount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: loan.interestRate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: loan.term\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: loan.frequency\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: loan.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: new Date(loan.dueDate).toLocaleDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-warning mr-2\",\n              onClick: () => handleEditLoan(loan),\n              children: \"Editar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-danger\",\n              onClick: () => handleDeleteLoan(loan._id),\n              children: \"Eliminar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 15\n          }, this)]\n        }, loan._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), editLoan && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Editar Pr\\xE9stamo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleUpdateLoan,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Monto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            className: \"form-control\",\n            value: editLoan.amount,\n            onChange: e => setEditLoan({\n              ...editLoan,\n              amount: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Tasa de Inter\\xE9s\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            className: \"form-control\",\n            value: editLoan.interestRate,\n            onChange: e => setEditLoan({\n              ...editLoan,\n              interestRate: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Plazo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            className: \"form-control\",\n            value: editLoan.term,\n            onChange: e => setEditLoan({\n              ...editLoan,\n              term: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Frecuencia\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-control\",\n            value: editLoan.frequency,\n            onChange: e => setEditLoan({\n              ...editLoan,\n              frequency: e.target.value\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"daily\",\n              children: \"Diario\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"weekly\",\n              children: \"Semanal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"quincenal\",\n              children: \"Quincenal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"monthly\",\n              children: \"Mensual\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Estado\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            value: editLoan.status,\n            onChange: e => setEditLoan({\n              ...editLoan,\n              status: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Fecha de Vencimiento\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            className: \"form-control\",\n            value: new Date(editLoan.dueDate).toISOString().substr(0, 10),\n            onChange: e => setEditLoan({\n              ...editLoan,\n              dueDate: new Date(e.target.value)\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          children: \"Actualizar Pr\\xE9stamo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"d0cclufVAPkgLuEBxEkIK5tVr6M=\");\n_c = Dashboard;\nexport default Dashboard;\n\n/*import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nconst Dashboard = () => {\r\n  const [summary, setSummary] = useState({});\r\n  const [recentPayments, setRecentPayments] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [editClient, setEditClient] = useState(null);\r\n  const [clientForm, setClientForm] = useState({ name: '', email: '', phone: '', idNumber: '', address: '' });\r\n  const [loans, setLoans] = useState([]);\r\n  const [editLoan, setEditLoan] = useState(null);\r\n  const [loanForm, setLoanForm] = useState({ clientId: '', amount: '', interestRate: '', term: '', frequency: '', status: '', dueDate: '' });\r\n\r\n  useEffect(() => {\r\n    const fetchSummary = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/api/reports/summary\");\r\n        setSummary(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching summary:\", error);\r\n      }\r\n    };\r\n\r\n    const fetchRecentPayments = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/api/reports/recent-payments\");\r\n        setRecentPayments(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching recent payments:\", error);\r\n      }\r\n    };\r\n\r\n    fetchSummary();\r\n    fetchRecentPayments();\r\n    fetchLoans();\r\n  }, []);\r\n\r\n  const fetchLoans = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5000/api/loans\");\r\n      const loansWithClientNames = await Promise.all(\r\n        response.data.map(async loan => {\r\n          const clientResponse = await axios.get(`http://localhost:5000/api/clientes/${loan.clientId}`);\r\n          return { ...loan, clientName: clientResponse.data.name };\r\n        })\r\n      );\r\n      setLoans(loansWithClientNames);\r\n    } catch (error) {\r\n      console.error(\"Error fetching loans:\", error);\r\n    }\r\n  };\r\n\r\n  const handleSearch = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.get(`http://localhost:5000/api/clientes/search?query=${searchQuery}`);\r\n      setSearchResults(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching search results:\", error);\r\n    }\r\n  };\r\n\r\n  const handleEdit = (client) => {\r\n    setEditClient(client._id);\r\n    setClientForm({ name: client.name, email: client.email, phone: client.phone, idNumber: client.idNumber, address: client.address });\r\n  };\r\n\r\n  const handleUpdate = async () => {\r\n    try {\r\n      await axios.put(`http://localhost:5000/api/clientes/update/${editClient}`, clientForm);\r\n      setEditClient(null);\r\n      setClientForm({ name: '', email: '', phone: '', idNumber: '', address: '' });\r\n      handleSearch({ preventDefault: () => { } });\r\n    } catch (error) {\r\n      console.error(\"Error updating client:\", error);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (clientId) => {\r\n    if (window.confirm(\"¿Estás seguro de que deseas eliminar este cliente?\")) {\r\n      try {\r\n        await axios.delete(`http://localhost:5000/api/clientes/delete/${clientId}`);\r\n        handleSearch({ preventDefault: () => { } });\r\n      } catch (error) {\r\n        console.error(\"Error deleting client:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleEditLoan = (loan) => {\r\n    setEditLoan(loan._id);\r\n    setLoanForm({\r\n      clientId: loan.clientId,\r\n      amount: loan.amount,\r\n      interestRate: loan.interestRate,\r\n      term: loan.term,\r\n      frequency: loan.frequency,\r\n      status: loan.status,\r\n      dueDate: new Date(loan.dueDate).toISOString().split('T')[0],\r\n    });\r\n  };\r\n\r\n  const handleUpdateLoan = async () => {\r\n    try {\r\n      await axios.put(`http://localhost:5000/api/loans/${editLoan}`, loanForm);\r\n      setEditLoan(null);\r\n      setLoanForm({ clientId: '', amount: '', interestRate: '', term: '', frequency: '', status: '', dueDate: '' });\r\n      fetchLoans();\r\n    } catch (error) {\r\n      console.error(\"Error updating loan:\", error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteLoan = async (loanId) => {\r\n    if (window.confirm(\"¿Estás seguro de que deseas eliminar este préstamo?\")) {\r\n      try {\r\n        await axios.delete(`http://localhost:5000/api/loans/${loanId}`);\r\n        fetchLoans();\r\n      } catch (error) {\r\n        console.error(\"Error deleting loan:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <div className=\"jumbotron text-center\">\r\n        <h1 className=\"display-4\">Dashboard</h1>\r\n        <p className=\"lead\">Resumen de Préstamos y Pagos</p>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card text-white bg-primary mb-3\">\r\n            <div className=\"card-header\">Clientes totales</div>\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title\">{summary.totalClientes || 0}</h5>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card text-white bg-success mb-3\">\r\n            <div className=\"card-header\">Total de Préstamos</div>\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title\">{summary.totalPrestamos || 0}</h5>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card text-white bg-danger mb-3\">\r\n            <div className=\"card-header\">Préstamos en Mora</div>\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title\">{summary.totalMora || 0}</h5>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <h2>Pagos Recientes</h2>\r\n      <table className=\"table table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th>Cliente</th>\r\n            <th>Monto</th>\r\n            <th>Fecha</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {recentPayments.map((payment) => (\r\n            <tr key={payment._id}>\r\n              <td>{payment.client ? payment.client.name : \"Cliente no encontrado\"}</td>\r\n              <td>{payment.amount}</td>\r\n              <td>{payment.date ? new Date(payment.date).toLocaleDateString() : \"Fecha inválida\"}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <h2>Buscar Cliente</h2>\r\n      <form onSubmit={handleSearch}>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Buscar por nombre o cédula\"\r\n            value={searchQuery}\r\n            onChange={(e) => setSearchQuery(e.target.value)}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">Buscar</button>\r\n      </form>\r\n      <h2>Resultados de la Búsqueda</h2>\r\n      <table className=\"table table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th>Nombre</th>\r\n            <th>Correo Electrónico</th>\r\n            <th>Teléfono</th>\r\n            <th>Cédula</th>\r\n            <th>Dirección</th>\r\n            <th>Acciones</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {searchResults.map((cliente) => (\r\n            <tr key={cliente._id}>\r\n              <td>{cliente.name}</td>\r\n              <td>{cliente.email}</td>\r\n              <td>{cliente.phone}</td>\r\n              <td>{cliente.idNumber}</td>\r\n              <td>{cliente.address}</td>\r\n              <td>\r\n                <button className=\"btn btn-warning mr-2\" onClick={() => handleEdit(cliente)}>Editar</button>\r\n                <button className=\"btn btn-danger\" onClick={() => handleDelete(cliente._id)}>Eliminar</button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      {editClient && (\r\n        <div className=\"mt-5\">\r\n          <h2>Editar Cliente</h2>\r\n          <form onSubmit={(e) => { e.preventDefault(); handleUpdate(); }}>\r\n            <div className=\"form-group\">\r\n              <label>Nombre</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={clientForm.name}\r\n                onChange={(e) => setClientForm({ ...clientForm, name: e.target.value })}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Correo Electrónico</label>\r\n              <input\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                value={clientForm.email}\r\n                onChange={(e) => setClientForm({ ...clientForm, email: e.target.value })}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Teléfono</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={clientForm.phone}\r\n                onChange={(e) => setClientForm({ ...clientForm, phone: e.target.value })}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Cédula</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={clientForm.idNumber}\r\n                onChange={(e) => setClientForm({ ...clientForm, idNumber: e.target.value })}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Dirección</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={clientForm.address}\r\n                onChange={(e) => setClientForm({ ...clientForm, address: e.target.value })}\r\n              />\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-success\">Actualizar</button>\r\n            <button type=\"button\" className=\"btn btn-secondary ml-2\" onClick={() => setEditClient(null)}>Cancelar</button>\r\n          </form>\r\n        </div>\r\n      )}\r\n      <h2>Préstamos</h2>\r\n      <button className=\"btn btn-info mb-2\" onClick={fetchLoans}>Cargar Préstamos</button>\r\n      <table className=\"table table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th>Cliente</th>\r\n            <th>Monto</th>\r\n            <th>Tasa de Interés</th>\r\n            <th>Plazo</th>\r\n            <th>Frecuencia</th>\r\n            <th>Estado</th>\r\n            <th>Fecha de Vencimiento</th>\r\n            <th>Acciones</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {loans.map((loan) => (\r\n            <tr key={loan._id}>\r\n              <td>{loan.clientName}</td>\r\n              <td>{loan.amount}</td>\r\n              <td>{loan.interestRate}</td>\r\n              <td>{loan.term}</td>\r\n              <td>{loan.frequency}</td>\r\n              <td>{loan.status}</td>\r\n              <td>{new Date(loan.dueDate).toLocaleDateString()}</td>\r\n              <td>\r\n                <button className=\"btn btn-warning mr-2\" onClick={() => handleEditLoan(loan)}>Editar</button>\r\n                <button className=\"btn btn-danger\" onClick={() => handleDeleteLoan(loan._id)}>Eliminar</button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      {editLoan && (\r\n        <div className=\"mt-5\">\r\n          <h2>Editar Préstamo</h2>\r\n          <form onSubmit={(e) => { e.preventDefault(); handleUpdateLoan(); }}>\r\n            <div className=\"form-group\">\r\n              <label>ID del Cliente</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={loanForm.clientId}\r\n                onChange={(e) => setLoanForm({ ...loanForm, clientId: e.target.value })}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Monto</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                value={loanForm.amount}\r\n                onChange={(e) => setLoanForm({ ...loanForm, amount: e.target.value })}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Tasa de Interés</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                value={loanForm.interestRate}\r\n                onChange={(e) => setLoanForm({ ...loanForm, interestRate: e.target.value })}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Plazo</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                value={loanForm.term}\r\n                onChange={(e) => setLoanForm({ ...loanForm, term: e.target.value })}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Frecuencia</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={loanForm.frequency}\r\n                onChange={(e) => setLoanForm({ ...loanForm, frequency: e.target.value })}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Estado</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={loanForm.status}\r\n                onChange={(e) => setLoanForm({ ...loanForm, status: e.target.value })}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Fecha de Vencimiento</label>\r\n              <input\r\n                type=\"date\"\r\n                className=\"form-control\"\r\n                value={loanForm.dueDate}\r\n                onChange={(e) => setLoanForm({ ...loanForm, dueDate: e.target.value })}\r\n              />\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-success\">Actualizar</button>\r\n            <button type=\"button\" className=\"btn btn-secondary ml-2\" onClick={() => setEditLoan(null)}>Cancelar</button>\r\n          </form>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n*/\n\n/*import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nconst Dashboard = () => {\r\n  const [summary, setSummary] = useState({});\r\n  const [recentPayments, setRecentPayments] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [editClient, setEditClient] = useState(null);\r\n  const [clientForm, setClientForm] = useState({ name: '', email: '', phone: '', idNumber: '', address: '' });\r\n\r\n  const [loans, setLoans] = useState([]);\r\n  const [editLoan, setEditLoan] = useState(null);\r\n  const [loanForm, setLoanForm] = useState({ clientId: '', amount: '', interestRate: '', term: '', frequency: '', status: '', dueDate: '' });\r\n\r\n  useEffect(() => {\r\n    const fetchSummary = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/api/reports/summary\");\r\n        setSummary(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching summary:\", error);\r\n      }\r\n    };\r\n\r\n    const fetchRecentPayments = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/api/reports/recent-payments\");\r\n        setRecentPayments(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching recent payments:\", error);\r\n      }\r\n    };\r\n\r\n    fetchSummary();\r\n    fetchRecentPayments();\r\n    fetchLoans();\r\n  }, []);\r\n\r\n  const fetchLoans = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5000/api/loans\");\r\n      const loansWithClientNames = await Promise.all(\r\n        response.data.map(async loan => {\r\n          const clientResponse = await axios.get(`http://localhost:5000/api/clientes/${loan.clientId}`);\r\n          return { ...loan, clientName: clientResponse.data.name };\r\n        })\r\n      );\r\n      setLoans(loansWithClientNames);\r\n    } catch (error) {\r\n      console.error(\"Error fetching loans:\", error);\r\n    }\r\n  };\r\n\r\n  const handleSearch = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.get(`http://localhost:5000/api/clientes/search?query=${searchQuery}`);\r\n      setSearchResults(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching search results:\", error);\r\n    }\r\n  };\r\n\r\n  const handleEdit = (client) => {\r\n    setEditClient(client._id);\r\n    setClientForm({ name: client.name, email: client.email, phone: client.phone, idNumber: client.idNumber, address: client.address });\r\n  };\r\n\r\n  const handleUpdate = async () => {\r\n    try {\r\n      await axios.put(`http://localhost:5000/api/clientes/update/${editClient}`, clientForm);\r\n      setEditClient(null);\r\n      setClientForm({ name: '', email: '', phone: '', idNumber: '', address: '' });\r\n      handleSearch({ preventDefault: () => { } });\r\n    } catch (error) {\r\n      console.error(\"Error updating client:\", error);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (clientId) => {\r\n    if (window.confirm(\"¿Estás seguro de que deseas eliminar este cliente?\")) {\r\n      try {\r\n        await axios.delete(`http://localhost:5000/api/clientes/delete/${clientId}`);\r\n        handleSearch({ preventDefault: () => { } });\r\n      } catch (error) {\r\n        console.error(\"Error deleting client:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleEditLoan = (loan) => {\r\n    setEditLoan(loan._id);\r\n    setLoanForm({\r\n      clientId: loan.clientId,\r\n      amount: loan.amount,\r\n      interestRate: loan.interestRate,\r\n      term: loan.term,\r\n      frequency: loan.frequency,\r\n      status: loan.status,\r\n      dueDate: new Date(loan.dueDate).toISOString().split('T')[0],\r\n    });\r\n  };\r\n\r\n  const handleUpdateLoan = async () => {\r\n    try {\r\n      await axios.put(`http://localhost:5000/api/loans/${editLoan}`, loanForm);\r\n      setEditLoan(null);\r\n      setLoanForm({ clientId: '', amount: '', interestRate: '', term: '', frequency: '', status: '', dueDate: '' });\r\n      fetchLoans();\r\n    } catch (error) {\r\n      console.error(\"Error updating loan:\", error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteLoan = async (loanId) => {\r\n    if (window.confirm(\"¿Estás seguro de que deseas eliminar este préstamo?\")) {\r\n      try {\r\n        await axios.delete(`http://localhost:5000/api/loans/${loanId}`);\r\n        fetchLoans();\r\n      } catch (error) {\r\n        console.error(\"Error deleting loan:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <div className=\"jumbotron text-center\">\r\n        <h1 className=\"display-4\">Dashboard</h1>\r\n        <p className=\"lead\">Resumen de Préstamos y Pagos</p>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card text-white bg-primary mb-3\">\r\n            <div className=\"card-header\">Clientes totales</div>\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title\">{summary.totalClientes || 0}</h5>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card text-white bg-success mb-3\">\r\n            <div className=\"card-header\">Total de Préstamos</div>\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title\">{summary.totalPrestamos || 0}</h5>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card text-white bg-danger mb-3\">\r\n            <div className=\"card-header\">Préstamos en Mora</div>\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title\">{summary.totalMora || 0}</h5>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <h2>Pagos Recientes</h2>\r\n      <table className=\"table table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th>Cliente</th>\r\n            <th>Monto</th>\r\n            <th>Fecha</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {recentPayments.map((payment) => (\r\n            <tr key={payment._id}>\r\n              <td>{payment.client ? payment.client.name : \"Cliente no encontrado\"}</td>\r\n              <td>{payment.amount}</td>\r\n              <td>{payment.date ? new Date(payment.date).toLocaleDateString() : \"Fecha inválida\"}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <h2>Buscar Cliente</h2>\r\n      <form onSubmit={handleSearch}>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Buscar por nombre o cédula\"\r\n            value={searchQuery}\r\n            onChange={(e) => setSearchQuery(e.target.value)}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">Buscar</button>\r\n      </form>\r\n      <h2>Resultados de la Búsqueda</h2>\r\n      <table className=\"table table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th>Nombre</th>\r\n            <th>Correo Electrónico</th>\r\n            <th>Teléfono</th>\r\n            <th>Cédula</th>\r\n            <th>Dirección</th>\r\n            <th>Acciones</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {searchResults.map((cliente) => (\r\n            <tr key={cliente._id}>\r\n              <td>{cliente.name}</td>\r\n              <td>{cliente.email}</td>\r\n              <td>{cliente.phone}</td>\r\n              <td>{cliente.idNumber}</td>\r\n              <td>{cliente.address}</td>\r\n              <td>\r\n                <button className=\"btn btn-warning mr-2\" onClick={() => handleEdit(cliente)}>Editar</button>\r\n                <button className=\"btn btn-danger\" onClick={() => handleDelete(cliente._id)}>Eliminar</button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      {editClient && (\r\n        <div className=\"mt-5\">\r\n          <h2>Editar Cliente</h2>\r\n          <form onSubmit={(e) => { e.preventDefault(); handleUpdate(); }}>\r\n            <div className=\"form-group\">\r\n              <label>Nombre</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={clientForm.name}\r\n                onChange={(e) => setClientForm({ ...clientForm, name: e.target.value })} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Correo Electrónico</label>\r\n              <input\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                value={clientForm.email}\r\n                onChange={(e) => setClientForm({ ...clientForm, email: e.target.value })} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Teléfono</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={clientForm.phone}\r\n                onChange={(e) => setClientForm({ ...clientForm, phone: e.target.value })} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Cédula</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={clientForm.idNumber}\r\n                onChange={(e) => setClientForm({ ...clientForm, idNumber: e.target.value })} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Dirección</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={clientForm.address}\r\n                onChange={(e) => setClientForm({ ...clientForm, address: e.target.value })} />\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-success\">Actualizar</button>\r\n            <button type=\"button\" className=\"btn btn-secondary ml-2\" onClick={() => setEditClient(null)}>Cancelar</button>\r\n          </form>\r\n        </div>\r\n      )}\r\n      <h2>Préstamos</h2>\r\n      <button className=\"btn btn-info mb-2\" onClick={fetchLoans}>Cargar Préstamos</button>\r\n      <table className=\"table table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th>Cliente</th>\r\n            <th>Monto</th>\r\n            <th>Tasa de Interés</th>\r\n            <th>Plazo</th>\r\n            <th>Frecuencia</th>\r\n            <th>Estado</th>\r\n            <th>Fecha de Vencimiento</th>\r\n            <th>Acciones</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {loans.map((loan) => (\r\n            <tr key={loan._id}>\r\n              <td>{loan.clientName}</td>\r\n              <td>{loan.amount}</td>\r\n              <td>{loan.interestRate}</td>\r\n              <td>{loan.term}</td>\r\n              <td>{loan.frequency}</td>\r\n              <td>{loan.status}</td>\r\n              <td>{new Date(loan.dueDate).toLocaleDateString()}</td>\r\n              <td>\r\n                <button className=\"btn btn-warning mr-2\" onClick={() => handleEditLoan(loan)}>Editar</button>\r\n                <button className=\"btn btn-danger\" onClick={() => handleDeleteLoan(loan._id)}>Eliminar</button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      {editLoan && (\r\n        <div className=\"mt-5\">\r\n          <h2>Editar Préstamo</h2>\r\n          <form onSubmit={(e) => { e.preventDefault(); handleUpdateLoan(); }}>\r\n            <div className=\"form-group\">\r\n              <label>ID del Cliente</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={loanForm.clientId}\r\n                onChange={(e) => setLoanForm({ ...loanForm, clientId: e.target.value })} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Monto</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                value={loanForm.amount}\r\n                onChange={(e) => setLoanForm({ ...loanForm, amount: e.target.value })} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Tasa de Interés</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                value={loanForm.interestRate}\r\n                onChange={(e) => setLoanForm({ ...loanForm, interestRate: e.target.value })} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Plazo</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                value={loanForm.term}\r\n                onChange={(e) => setLoanForm({ ...loanForm, term: e.target.value })} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Frecuencia</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={loanForm.frequency}\r\n                onChange={(e) => setLoanForm({ ...loanForm, frequency: e.target.value })} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Estado</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={loanForm.status}\r\n                onChange={(e) => setLoanForm({ ...loanForm, status: e.target.value })} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Fecha de Vencimiento</label>\r\n              <input\r\n                type=\"date\"\r\n                className=\"form-control\"\r\n                value={loanForm.dueDate}\r\n                onChange={(e) => setLoanForm({ ...loanForm, dueDate: e.target.value })} />\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-success\">Actualizar</button>\r\n            <button type=\"button\" className=\"btn btn-secondary ml-2\" onClick={() => setEditLoan(null)}>Cancelar</button>\r\n          </form>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard; \r\n*/\n//**************************************************************************************\n\n/*\r\n// Dashboard.js\r\nimport axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nconst Dashboard = () => {\r\n  const [summary, setSummary] = useState({});\r\n  const [recentPayments, setRecentPayments] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [editClient, setEditClient] = useState(null);\r\n  const [clientForm, setClientForm] = useState({ name: '', email: '', phone: '', idNumber: '', address: '' });\r\n\r\n  const [loans, setLoans] = useState([]);\r\n  const [editLoan, setEditLoan] = useState(null);\r\n  const [loanForm, setLoanForm] = useState({ clientId: '', amount: '', interestRate: '', term: '', frequency: '', status: '', dueDate: '' });\r\n\r\n  useEffect(() => {\r\n    const fetchSummary = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/api/reports/summary\");\r\n        setSummary(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching summary:\", error);\r\n      }\r\n    };\r\n\r\n    const fetchRecentPayments = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/api/reports/recent-payments\");\r\n        setRecentPayments(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching recent payments:\", error);\r\n      }\r\n    };\r\n\r\n    fetchSummary();\r\n    fetchRecentPayments();\r\n  }, []);\r\n\r\n  const handleSearch = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.get(`http://localhost:5000/api/clientes/search?query=${searchQuery}`);\r\n      setSearchResults(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching search results:\", error);\r\n    }\r\n  };\r\n\r\n  const handleEdit = (client) => {\r\n    setEditClient(client._id);\r\n    setClientForm({ name: client.name, email: client.email, phone: client.phone, idNumber: client.idNumber, address: client.address });\r\n  };\r\n\r\n  const handleUpdate = async () => {\r\n    try {\r\n      await axios.put(`http://localhost:5000/api/clientes/update/${editClient}`, clientForm);\r\n      setEditClient(null);\r\n      setClientForm({ name: '', email: '', phone: '', idNumber: '', address: '' });\r\n      handleSearch({ preventDefault: () => { } });\r\n    } catch (error) {\r\n      console.error(\"Error updating client:\", error);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (clientId) => {\r\n    if (window.confirm(\"¿Estás seguro de que deseas eliminar este cliente?\")) {\r\n      try {\r\n        await axios.delete(`http://localhost:5000/api/clientes/delete/${clientId}`);\r\n        handleSearch({ preventDefault: () => { } });\r\n      } catch (error) {\r\n        console.error(\"Error deleting client:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const fetchLoans = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5000/api/loans\");\r\n      setLoans(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching loans:\", error);\r\n    }\r\n  };\r\n\r\n  const handleEditLoan = (loan) => {\r\n    setEditLoan(loan._id);\r\n    setLoanForm({\r\n      clientId: loan.clientId,\r\n      amount: loan.amount,\r\n      interestRate: loan.interestRate,\r\n      term: loan.term,\r\n      frequency: loan.frequency,\r\n      status: loan.status,\r\n      dueDate: new Date(loan.dueDate).toISOString().split('T')[0],\r\n    });\r\n  };\r\n\r\n  const handleUpdateLoan = async () => {\r\n    try {\r\n      await axios.put(`http://localhost:5000/api/loans/update/${editLoan}`, loanForm);\r\n      setEditLoan(null);\r\n      setLoanForm({ clientId: '', amount: '', interestRate: '', term: '', frequency: '', status: '', dueDate: '' });\r\n      fetchLoans();\r\n    } catch (error) {\r\n      console.error(\"Error updating loan:\", error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteLoan = async (loanId) => {\r\n    if (window.confirm(\"¿Estás seguro de que deseas eliminar este préstamo?\")) {\r\n      try {\r\n        await axios.delete(`http://localhost:5000/api/loans/delete/${loanId}`);\r\n        fetchLoans();\r\n      } catch (error) {\r\n        console.error(\"Error deleting loan:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <div className=\"jumbotron text-center\">\r\n        <h1 className=\"display-4\">Dashboard</h1>\r\n        <p className=\"lead\">Resumen de Préstamos y Pagos</p>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card text-white bg-primary mb-3\">\r\n            <div className=\"card-header\">Clientes totales</div>\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title\">{summary.totalClientes || 0}</h5>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card text-white bg-success mb-3\">\r\n            <div className=\"card-header\">Total de Préstamos</div>\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title\">{summary.totalPrestamos || 0}</h5>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card text-white bg-danger mb-3\">\r\n            <div className=\"card-header\">Préstamos en Mora</div>\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title\">{summary.totalMora || 0}</h5>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <h2>Pagos Recientes</h2>\r\n      <table className=\"table table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th>Cliente</th>\r\n            <th>Monto</th>\r\n            <th>Fecha</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {recentPayments.map((payment) => (\r\n            <tr key={payment._id}>\r\n              <td>{payment.client ? payment.client.name : \"Cliente no encontrado\"}</td>\r\n              <td>{payment.amount}</td>\r\n              <td>{payment.date ? new Date(payment.date).toLocaleDateString() : \"Fecha inválida\"}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <h2>Buscar Cliente</h2>\r\n      <form onSubmit={handleSearch}>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Buscar por nombre o cédula\"\r\n            value={searchQuery}\r\n            onChange={(e) => setSearchQuery(e.target.value)}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">Buscar</button>\r\n      </form>\r\n      <h2>Resultados de la Búsqueda</h2>\r\n      <table className=\"table table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th>Nombre</th>\r\n            <th>Correo Electrónico</th>\r\n            <th>Teléfono</th>\r\n            <th>Cédula</th>\r\n            <th>Dirección</th>\r\n            <th>Acciones</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {searchResults.map((cliente) => (\r\n            <tr key={cliente._id}>\r\n              <td>{cliente.name}</td>\r\n              <td>{cliente.email}</td>\r\n              <td>{cliente.phone}</td>\r\n              <td>{cliente.idNumber}</td>\r\n              <td>{cliente.address}</td>\r\n              <td>\r\n                <button className=\"btn btn-warning mr-2\" onClick={() => handleEdit(cliente)}>Editar</button>\r\n                <button className=\"btn btn-danger\" onClick={() => handleDelete(cliente._id)}>Eliminar</button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      {editClient && (\r\n        <div className=\"mt-5\">\r\n          <h2>Editar Cliente</h2>\r\n          <form onSubmit={(e) => { e.preventDefault(); handleUpdate(); }}>\r\n            <div className=\"form-group\">\r\n              <label>Nombre</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={clientForm.name}\r\n                onChange={(e) => setClientForm({ ...clientForm, name: e.target.value })}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Correo Electrónico</label>\r\n              <input\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                value={clientForm.email}\r\n                onChange={(e) => setClientForm({ ...clientForm, email: e.target.value })}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Teléfono</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={clientForm.phone}\r\n                onChange={(e) => setClientForm({ ...clientForm, phone: e.target.value })}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Cédula</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={clientForm.idNumber}\r\n                onChange={(e) => setClientForm({ ...clientForm, idNumber: e.target.value })}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Dirección</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={clientForm.address}\r\n                onChange={(e) => setClientForm({ ...clientForm, address: e.target.value })}\r\n              />\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-success\">Actualizar</button>\r\n            <button type=\"button\" className=\"btn btn-secondary ml-2\" onClick={() => setEditClient(null)}>Cancelar</button>\r\n          </form>\r\n        </div>\r\n      )}\r\n      <h2>Préstamos</h2>\r\n      <button className=\"btn btn-info mb-2\" onClick={fetchLoans}>Cargar Préstamos</button>\r\n      <table className=\"table table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th>Cliente</th>\r\n            <th>Monto</th>\r\n            <th>Tasa de Interés</th>\r\n            <th>Plazo</th>\r\n            <th>Frecuencia</th>\r\n            <th>Estado</th>\r\n            <th>Fecha de Vencimiento</th>\r\n            <th>Acciones</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {loans.map((loan) => (\r\n            <tr key={loan._id}>\r\n              <td>{loan.clientId}</td>\r\n              <td>{loan.amount}</td>\r\n              <td>{loan.interestRate}</td>\r\n              <td>{loan.term}</td>\r\n              <td>{loan.frequency}</td>\r\n              <td>{loan.status}</td>\r\n              <td>{new Date(loan.dueDate).toLocaleDateString()}</td>\r\n              <td>\r\n                <button className=\"btn btn-warning mr-2\" onClick={() => handleEditLoan(loan)}>Editar</button>\r\n                <button className=\"btn btn-danger\" onClick={() => handleDeleteLoan(loan._id)}>Eliminar</button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      {editLoan && (\r\n        <div className=\"mt-5\">\r\n          <h2>Editar Préstamo</h2>\r\n          <form onSubmit={(e) => { e.preventDefault(); handleUpdateLoan(); }}>\r\n            <div className=\"form-group\">\r\n              <label>ID del Cliente</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={loanForm.clientId}\r\n                onChange={(e) => setLoanForm({ ...loanForm, clientId: e.target.value })}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Monto</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                value={loanForm.amount}\r\n                onChange={(e) => setLoanForm({ ...loanForm, amount: e.target.value })}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Tasa de Interés</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                value={loanForm.interestRate}\r\n                onChange={(e) => setLoanForm({ ...loanForm, interestRate: e.target.value })}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Plazo</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                value={loanForm.term}\r\n                onChange={(e) => setLoanForm({ ...loanForm, term: e.target.value })}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Frecuencia</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={loanForm.frequency}\r\n                onChange={(e) => setLoanForm({ ...loanForm, frequency: e.target.value })}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Estado</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={loanForm.status}\r\n                onChange={(e) => setLoanForm({ ...loanForm, status: e.target.value })}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Fecha de Vencimiento</label>\r\n              <input\r\n                type=\"date\"\r\n                className=\"form-control\"\r\n                value={loanForm.dueDate}\r\n                onChange={(e) => setLoanForm({ ...loanForm, dueDate: e.target.value })}\r\n              />\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-success\">Actualizar</button>\r\n            <button type=\"button\" className=\"btn btn-secondary ml-2\" onClick={() => setEditLoan(null)}>Cancelar</button>\r\n          </form>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n*/\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Dashboard","_s","loans","setLoans","clients","setClients","recentPayments","setRecentPayments","editLoan","setEditLoan","fetchLoans","fetchClients","fetchRecentPayments","response","get","data","error","console","handleDeleteClient","clientId","window","confirm","delete","handleEditLoan","loan","handleDeleteLoan","loanId","handleUpdateLoan","e","preventDefault","put","_id","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","filter","status","map","payment","name","amount","Date","date","toLocaleDateString","type","placeholder","client","email","phone","cedula","address","onClick","handleEditClient","interestRate","term","frequency","dueDate","onSubmit","value","onChange","target","toISOString","substr","_c","$RefreshReg$"],"sources":["D:/Usuario/wilme/Escritorio/Gestion_Loans_Clean/loan-app-ui/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Dashboard = () => {\r\n  const [loans, setLoans] = useState([]);\r\n  const [clients, setClients] = useState([]);\r\n  const [recentPayments, setRecentPayments] = useState([]);\r\n  const [editLoan, setEditLoan] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchLoans();\r\n    fetchClients();\r\n    fetchRecentPayments();\r\n  }, []);\r\n\r\n  const fetchLoans = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/api/loans');\r\n      setLoans(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching loans:', error);\r\n    }\r\n  };\r\n\r\n  const fetchClients = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/api/clients');\r\n      setClients(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching clients:', error);\r\n    }\r\n  };\r\n\r\n  const fetchRecentPayments = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/api/payments');\r\n      setRecentPayments(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching recent payments:', error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteClient = async (clientId) => {\r\n    if (window.confirm('¿Estás seguro de que deseas eliminar este cliente?')) {\r\n      try {\r\n        await axios.delete(`http://localhost:5000/api/clients/${clientId}`);\r\n        fetchClients(); // Recargar la lista de clientes después de eliminar\r\n      } catch (error) {\r\n        console.error('Error deleting client:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleEditLoan = (loan) => {\r\n    setEditLoan(loan);\r\n  };\r\n\r\n  const handleDeleteLoan = async (loanId) => {\r\n    if (window.confirm('¿Estás seguro de que deseas eliminar este préstamo?')) {\r\n      try {\r\n        await axios.delete(`http://localhost:5000/api/loans/${loanId}`);\r\n        fetchLoans(); // Recargar la lista de préstamos después de eliminar\r\n      } catch (error) {\r\n        console.error('Error deleting loan:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleUpdateLoan = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await axios.put(`http://localhost:5000/api/loans/${editLoan._id}`, editLoan);\r\n      setEditLoan(null); // Limpiar el estado de edición después de actualizar\r\n      fetchLoans(); // Recargar la lista de préstamos después de actualizar\r\n    } catch (error) {\r\n      console.error('Error updating loan:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Dashboard</h2>\r\n      <h3>Clientes totales</h3>\r\n      <div className=\"card bg-info text-white\">\r\n        <div className=\"card-body\">\r\n          <h4 className=\"card-title\">Clientes totales</h4>\r\n          <p className=\"card-text\">{clients.length}</p>\r\n        </div>\r\n      </div>\r\n      <h3>Total de Préstamos</h3>\r\n      <div className=\"card bg-success text-white\">\r\n        <div className=\"card-body\">\r\n          <h4 className=\"card-title\">Total de Préstamos</h4>\r\n          <p className=\"card-text\">{loans.length}</p>\r\n        </div>\r\n      </div>\r\n      <h3>Préstamos en Mora</h3>\r\n      <div className=\"card bg-danger text-white\">\r\n        <div className=\"card-body\">\r\n          <h4 className=\"card-title\">Préstamos en Mora</h4>\r\n          <p className=\"card-text\">{loans.filter(loan => loan.status === 'mora').length}</p>\r\n        </div>\r\n      </div>\r\n      <h2>Pagos Recientes</h2>\r\n      <table className=\"table table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th>Cliente</th>\r\n            <th>Monto</th>\r\n            <th>Fecha</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {recentPayments.map((payment) => (\r\n            <tr key={payment._id}>\r\n              <td>{payment.clientId.name}</td>\r\n              <td>{payment.amount}</td>\r\n              <td>{new Date(payment.date).toLocaleDateString()}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <h2>Buscar Cliente</h2>\r\n      <input type=\"text\" placeholder=\"Buscar por nombre o cédula\" />\r\n      <button>Buscar</button>\r\n      <h2>Resultados de la Búsqueda</h2>\r\n      <table className=\"table table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th>Nombre</th>\r\n            <th>Correo Electrónico</th>\r\n            <th>Teléfono</th>\r\n            <th>Cédula</th>\r\n            <th>Dirección</th>\r\n            <th>Acciones</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {clients.map((client) => (\r\n            <tr key={client._id}>\r\n              <td>{client.name}</td>\r\n              <td>{client.email}</td>\r\n              <td>{client.phone}</td>\r\n              <td>{client.cedula}</td>\r\n              <td>{client.address}</td>\r\n              <td>\r\n                <button className=\"btn btn-warning mr-2\" onClick={() => handleEditClient(client)}>Editar</button>\r\n                <button className=\"btn btn-danger\" onClick={() => handleDeleteClient(client._id)}>Eliminar</button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <h2>Préstamos</h2>\r\n      <button className=\"btn btn-info mb-2\" onClick={fetchLoans}>Cargar Préstamos</button>\r\n      <table className=\"table table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th>Cliente</th>\r\n            <th>Monto</th>\r\n            <th>Tasa de Interés</th>\r\n            <th>Plazo</th>\r\n            <th>Frecuencia</th>\r\n            <th>Estado</th>\r\n            <th>Fecha de Vencimiento</th>\r\n            <th>Acciones</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {loans.map((loan) => (\r\n            <tr key={loan._id}>\r\n              <td>{loan.clientId.name}</td>\r\n              <td>{loan.amount}</td>\r\n              <td>{loan.interestRate}</td>\r\n              <td>{loan.term}</td>\r\n              <td>{loan.frequency}</td>\r\n              <td>{loan.status}</td>\r\n              <td>{new Date(loan.dueDate).toLocaleDateString()}</td>\r\n              <td>\r\n                <button className=\"btn btn-warning mr-2\" onClick={() => handleEditLoan(loan)}>Editar</button>\r\n                <button className=\"btn btn-danger\" onClick={() => handleDeleteLoan(loan._id)}>Eliminar</button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      {editLoan && (\r\n        <div>\r\n          <h2>Editar Préstamo</h2>\r\n          <form onSubmit={handleUpdateLoan}>\r\n            <div className=\"form-group\">\r\n              <label>Monto</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                value={editLoan.amount}\r\n                onChange={(e) => setEditLoan({ ...editLoan, amount: e.target.value })} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Tasa de Interés</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                value={editLoan.interestRate}\r\n                onChange={(e) => setEditLoan({ ...editLoan, interestRate: e.target.value })} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Plazo</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                value={editLoan.term}\r\n                onChange={(e) => setEditLoan({ ...editLoan, term: e.target.value })} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Frecuencia</label>\r\n              <select\r\n                className=\"form-control\"\r\n                value={editLoan.frequency}\r\n                onChange={(e) => setEditLoan({ ...editLoan, frequency: e.target.value })}>\r\n                <option value=\"daily\">Diario</option>\r\n                <option value=\"weekly\">Semanal</option>\r\n                <option value=\"quincenal\">Quincenal</option>\r\n                <option value=\"monthly\">Mensual</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Estado</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={editLoan.status}\r\n                onChange={(e) => setEditLoan({ ...editLoan, status: e.target.value })} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Fecha de Vencimiento</label>\r\n              <input\r\n                type=\"date\"\r\n                className=\"form-control\"\r\n                value={new Date(editLoan.dueDate).toISOString().substr(0, 10)}\r\n                onChange={(e) => setEditLoan({ ...editLoan, dueDate: new Date(e.target.value) })} />\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-primary\">Actualizar Préstamo</button>\r\n          </form>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n\r\n\r\n\r\n\r\n/*import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nconst Dashboard = () => {\r\n  const [summary, setSummary] = useState({});\r\n  const [recentPayments, setRecentPayments] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [editClient, setEditClient] = useState(null);\r\n  const [clientForm, setClientForm] = useState({ name: '', email: '', phone: '', idNumber: '', address: '' });\r\n  const [loans, setLoans] = useState([]);\r\n  const [editLoan, setEditLoan] = useState(null);\r\n  const [loanForm, setLoanForm] = useState({ clientId: '', amount: '', interestRate: '', term: '', frequency: '', status: '', dueDate: '' });\r\n\r\n  useEffect(() => {\r\n    const fetchSummary = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/api/reports/summary\");\r\n        setSummary(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching summary:\", error);\r\n      }\r\n    };\r\n\r\n    const fetchRecentPayments = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/api/reports/recent-payments\");\r\n        setRecentPayments(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching recent payments:\", error);\r\n      }\r\n    };\r\n\r\n    fetchSummary();\r\n    fetchRecentPayments();\r\n    fetchLoans();\r\n  }, []);\r\n\r\n  const fetchLoans = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5000/api/loans\");\r\n      const loansWithClientNames = await Promise.all(\r\n        response.data.map(async loan => {\r\n          const clientResponse = await axios.get(`http://localhost:5000/api/clientes/${loan.clientId}`);\r\n          return { ...loan, clientName: clientResponse.data.name };\r\n        })\r\n      );\r\n      setLoans(loansWithClientNames);\r\n    } catch (error) {\r\n      console.error(\"Error fetching loans:\", error);\r\n    }\r\n  };\r\n\r\n  const handleSearch = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.get(`http://localhost:5000/api/clientes/search?query=${searchQuery}`);\r\n      setSearchResults(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching search results:\", error);\r\n    }\r\n  };\r\n\r\n  const handleEdit = (client) => {\r\n    setEditClient(client._id);\r\n    setClientForm({ name: client.name, email: client.email, phone: client.phone, idNumber: client.idNumber, address: client.address });\r\n  };\r\n\r\n  const handleUpdate = async () => {\r\n    try {\r\n      await axios.put(`http://localhost:5000/api/clientes/update/${editClient}`, clientForm);\r\n      setEditClient(null);\r\n      setClientForm({ name: '', email: '', phone: '', idNumber: '', address: '' });\r\n      handleSearch({ preventDefault: () => { } });\r\n    } catch (error) {\r\n      console.error(\"Error updating client:\", error);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (clientId) => {\r\n    if (window.confirm(\"¿Estás seguro de que deseas eliminar este cliente?\")) {\r\n      try {\r\n        await axios.delete(`http://localhost:5000/api/clientes/delete/${clientId}`);\r\n        handleSearch({ preventDefault: () => { } });\r\n      } catch (error) {\r\n        console.error(\"Error deleting client:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleEditLoan = (loan) => {\r\n    setEditLoan(loan._id);\r\n    setLoanForm({\r\n      clientId: loan.clientId,\r\n      amount: loan.amount,\r\n      interestRate: loan.interestRate,\r\n      term: loan.term,\r\n      frequency: loan.frequency,\r\n      status: loan.status,\r\n      dueDate: new Date(loan.dueDate).toISOString().split('T')[0],\r\n    });\r\n  };\r\n\r\n  const handleUpdateLoan = async () => {\r\n    try {\r\n      await axios.put(`http://localhost:5000/api/loans/${editLoan}`, loanForm);\r\n      setEditLoan(null);\r\n      setLoanForm({ clientId: '', amount: '', interestRate: '', term: '', frequency: '', status: '', dueDate: '' });\r\n      fetchLoans();\r\n    } catch (error) {\r\n      console.error(\"Error updating loan:\", error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteLoan = async (loanId) => {\r\n    if (window.confirm(\"¿Estás seguro de que deseas eliminar este préstamo?\")) {\r\n      try {\r\n        await axios.delete(`http://localhost:5000/api/loans/${loanId}`);\r\n        fetchLoans();\r\n      } catch (error) {\r\n        console.error(\"Error deleting loan:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <div className=\"jumbotron text-center\">\r\n        <h1 className=\"display-4\">Dashboard</h1>\r\n        <p className=\"lead\">Resumen de Préstamos y Pagos</p>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card text-white bg-primary mb-3\">\r\n            <div className=\"card-header\">Clientes totales</div>\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title\">{summary.totalClientes || 0}</h5>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card text-white bg-success mb-3\">\r\n            <div className=\"card-header\">Total de Préstamos</div>\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title\">{summary.totalPrestamos || 0}</h5>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card text-white bg-danger mb-3\">\r\n            <div className=\"card-header\">Préstamos en Mora</div>\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title\">{summary.totalMora || 0}</h5>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <h2>Pagos Recientes</h2>\r\n      <table className=\"table table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th>Cliente</th>\r\n            <th>Monto</th>\r\n            <th>Fecha</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {recentPayments.map((payment) => (\r\n            <tr key={payment._id}>\r\n              <td>{payment.client ? payment.client.name : \"Cliente no encontrado\"}</td>\r\n              <td>{payment.amount}</td>\r\n              <td>{payment.date ? new Date(payment.date).toLocaleDateString() : \"Fecha inválida\"}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <h2>Buscar Cliente</h2>\r\n      <form onSubmit={handleSearch}>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Buscar por nombre o cédula\"\r\n            value={searchQuery}\r\n            onChange={(e) => setSearchQuery(e.target.value)}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">Buscar</button>\r\n      </form>\r\n      <h2>Resultados de la Búsqueda</h2>\r\n      <table className=\"table table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th>Nombre</th>\r\n            <th>Correo Electrónico</th>\r\n            <th>Teléfono</th>\r\n            <th>Cédula</th>\r\n            <th>Dirección</th>\r\n            <th>Acciones</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {searchResults.map((cliente) => (\r\n            <tr key={cliente._id}>\r\n              <td>{cliente.name}</td>\r\n              <td>{cliente.email}</td>\r\n              <td>{cliente.phone}</td>\r\n              <td>{cliente.idNumber}</td>\r\n              <td>{cliente.address}</td>\r\n              <td>\r\n                <button className=\"btn btn-warning mr-2\" onClick={() => handleEdit(cliente)}>Editar</button>\r\n                <button className=\"btn btn-danger\" onClick={() => handleDelete(cliente._id)}>Eliminar</button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      {editClient && (\r\n        <div className=\"mt-5\">\r\n          <h2>Editar Cliente</h2>\r\n          <form onSubmit={(e) => { e.preventDefault(); handleUpdate(); }}>\r\n            <div className=\"form-group\">\r\n              <label>Nombre</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={clientForm.name}\r\n                onChange={(e) => setClientForm({ ...clientForm, name: e.target.value })}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Correo Electrónico</label>\r\n              <input\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                value={clientForm.email}\r\n                onChange={(e) => setClientForm({ ...clientForm, email: e.target.value })}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Teléfono</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={clientForm.phone}\r\n                onChange={(e) => setClientForm({ ...clientForm, phone: e.target.value })}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Cédula</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={clientForm.idNumber}\r\n                onChange={(e) => setClientForm({ ...clientForm, idNumber: e.target.value })}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Dirección</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={clientForm.address}\r\n                onChange={(e) => setClientForm({ ...clientForm, address: e.target.value })}\r\n              />\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-success\">Actualizar</button>\r\n            <button type=\"button\" className=\"btn btn-secondary ml-2\" onClick={() => setEditClient(null)}>Cancelar</button>\r\n          </form>\r\n        </div>\r\n      )}\r\n      <h2>Préstamos</h2>\r\n      <button className=\"btn btn-info mb-2\" onClick={fetchLoans}>Cargar Préstamos</button>\r\n      <table className=\"table table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th>Cliente</th>\r\n            <th>Monto</th>\r\n            <th>Tasa de Interés</th>\r\n            <th>Plazo</th>\r\n            <th>Frecuencia</th>\r\n            <th>Estado</th>\r\n            <th>Fecha de Vencimiento</th>\r\n            <th>Acciones</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {loans.map((loan) => (\r\n            <tr key={loan._id}>\r\n              <td>{loan.clientName}</td>\r\n              <td>{loan.amount}</td>\r\n              <td>{loan.interestRate}</td>\r\n              <td>{loan.term}</td>\r\n              <td>{loan.frequency}</td>\r\n              <td>{loan.status}</td>\r\n              <td>{new Date(loan.dueDate).toLocaleDateString()}</td>\r\n              <td>\r\n                <button className=\"btn btn-warning mr-2\" onClick={() => handleEditLoan(loan)}>Editar</button>\r\n                <button className=\"btn btn-danger\" onClick={() => handleDeleteLoan(loan._id)}>Eliminar</button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      {editLoan && (\r\n        <div className=\"mt-5\">\r\n          <h2>Editar Préstamo</h2>\r\n          <form onSubmit={(e) => { e.preventDefault(); handleUpdateLoan(); }}>\r\n            <div className=\"form-group\">\r\n              <label>ID del Cliente</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={loanForm.clientId}\r\n                onChange={(e) => setLoanForm({ ...loanForm, clientId: e.target.value })}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Monto</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                value={loanForm.amount}\r\n                onChange={(e) => setLoanForm({ ...loanForm, amount: e.target.value })}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Tasa de Interés</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                value={loanForm.interestRate}\r\n                onChange={(e) => setLoanForm({ ...loanForm, interestRate: e.target.value })}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Plazo</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                value={loanForm.term}\r\n                onChange={(e) => setLoanForm({ ...loanForm, term: e.target.value })}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Frecuencia</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={loanForm.frequency}\r\n                onChange={(e) => setLoanForm({ ...loanForm, frequency: e.target.value })}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Estado</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={loanForm.status}\r\n                onChange={(e) => setLoanForm({ ...loanForm, status: e.target.value })}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Fecha de Vencimiento</label>\r\n              <input\r\n                type=\"date\"\r\n                className=\"form-control\"\r\n                value={loanForm.dueDate}\r\n                onChange={(e) => setLoanForm({ ...loanForm, dueDate: e.target.value })}\r\n              />\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-success\">Actualizar</button>\r\n            <button type=\"button\" className=\"btn btn-secondary ml-2\" onClick={() => setEditLoan(null)}>Cancelar</button>\r\n          </form>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n*/\r\n\r\n/*import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nconst Dashboard = () => {\r\n  const [summary, setSummary] = useState({});\r\n  const [recentPayments, setRecentPayments] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [editClient, setEditClient] = useState(null);\r\n  const [clientForm, setClientForm] = useState({ name: '', email: '', phone: '', idNumber: '', address: '' });\r\n\r\n  const [loans, setLoans] = useState([]);\r\n  const [editLoan, setEditLoan] = useState(null);\r\n  const [loanForm, setLoanForm] = useState({ clientId: '', amount: '', interestRate: '', term: '', frequency: '', status: '', dueDate: '' });\r\n\r\n  useEffect(() => {\r\n    const fetchSummary = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/api/reports/summary\");\r\n        setSummary(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching summary:\", error);\r\n      }\r\n    };\r\n\r\n    const fetchRecentPayments = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/api/reports/recent-payments\");\r\n        setRecentPayments(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching recent payments:\", error);\r\n      }\r\n    };\r\n\r\n    fetchSummary();\r\n    fetchRecentPayments();\r\n    fetchLoans();\r\n  }, []);\r\n\r\n  const fetchLoans = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5000/api/loans\");\r\n      const loansWithClientNames = await Promise.all(\r\n        response.data.map(async loan => {\r\n          const clientResponse = await axios.get(`http://localhost:5000/api/clientes/${loan.clientId}`);\r\n          return { ...loan, clientName: clientResponse.data.name };\r\n        })\r\n      );\r\n      setLoans(loansWithClientNames);\r\n    } catch (error) {\r\n      console.error(\"Error fetching loans:\", error);\r\n    }\r\n  };\r\n\r\n  const handleSearch = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.get(`http://localhost:5000/api/clientes/search?query=${searchQuery}`);\r\n      setSearchResults(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching search results:\", error);\r\n    }\r\n  };\r\n\r\n  const handleEdit = (client) => {\r\n    setEditClient(client._id);\r\n    setClientForm({ name: client.name, email: client.email, phone: client.phone, idNumber: client.idNumber, address: client.address });\r\n  };\r\n\r\n  const handleUpdate = async () => {\r\n    try {\r\n      await axios.put(`http://localhost:5000/api/clientes/update/${editClient}`, clientForm);\r\n      setEditClient(null);\r\n      setClientForm({ name: '', email: '', phone: '', idNumber: '', address: '' });\r\n      handleSearch({ preventDefault: () => { } });\r\n    } catch (error) {\r\n      console.error(\"Error updating client:\", error);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (clientId) => {\r\n    if (window.confirm(\"¿Estás seguro de que deseas eliminar este cliente?\")) {\r\n      try {\r\n        await axios.delete(`http://localhost:5000/api/clientes/delete/${clientId}`);\r\n        handleSearch({ preventDefault: () => { } });\r\n      } catch (error) {\r\n        console.error(\"Error deleting client:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleEditLoan = (loan) => {\r\n    setEditLoan(loan._id);\r\n    setLoanForm({\r\n      clientId: loan.clientId,\r\n      amount: loan.amount,\r\n      interestRate: loan.interestRate,\r\n      term: loan.term,\r\n      frequency: loan.frequency,\r\n      status: loan.status,\r\n      dueDate: new Date(loan.dueDate).toISOString().split('T')[0],\r\n    });\r\n  };\r\n\r\n  const handleUpdateLoan = async () => {\r\n    try {\r\n      await axios.put(`http://localhost:5000/api/loans/${editLoan}`, loanForm);\r\n      setEditLoan(null);\r\n      setLoanForm({ clientId: '', amount: '', interestRate: '', term: '', frequency: '', status: '', dueDate: '' });\r\n      fetchLoans();\r\n    } catch (error) {\r\n      console.error(\"Error updating loan:\", error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteLoan = async (loanId) => {\r\n    if (window.confirm(\"¿Estás seguro de que deseas eliminar este préstamo?\")) {\r\n      try {\r\n        await axios.delete(`http://localhost:5000/api/loans/${loanId}`);\r\n        fetchLoans();\r\n      } catch (error) {\r\n        console.error(\"Error deleting loan:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <div className=\"jumbotron text-center\">\r\n        <h1 className=\"display-4\">Dashboard</h1>\r\n        <p className=\"lead\">Resumen de Préstamos y Pagos</p>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card text-white bg-primary mb-3\">\r\n            <div className=\"card-header\">Clientes totales</div>\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title\">{summary.totalClientes || 0}</h5>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card text-white bg-success mb-3\">\r\n            <div className=\"card-header\">Total de Préstamos</div>\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title\">{summary.totalPrestamos || 0}</h5>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card text-white bg-danger mb-3\">\r\n            <div className=\"card-header\">Préstamos en Mora</div>\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title\">{summary.totalMora || 0}</h5>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <h2>Pagos Recientes</h2>\r\n      <table className=\"table table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th>Cliente</th>\r\n            <th>Monto</th>\r\n            <th>Fecha</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {recentPayments.map((payment) => (\r\n            <tr key={payment._id}>\r\n              <td>{payment.client ? payment.client.name : \"Cliente no encontrado\"}</td>\r\n              <td>{payment.amount}</td>\r\n              <td>{payment.date ? new Date(payment.date).toLocaleDateString() : \"Fecha inválida\"}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <h2>Buscar Cliente</h2>\r\n      <form onSubmit={handleSearch}>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Buscar por nombre o cédula\"\r\n            value={searchQuery}\r\n            onChange={(e) => setSearchQuery(e.target.value)}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">Buscar</button>\r\n      </form>\r\n      <h2>Resultados de la Búsqueda</h2>\r\n      <table className=\"table table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th>Nombre</th>\r\n            <th>Correo Electrónico</th>\r\n            <th>Teléfono</th>\r\n            <th>Cédula</th>\r\n            <th>Dirección</th>\r\n            <th>Acciones</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {searchResults.map((cliente) => (\r\n            <tr key={cliente._id}>\r\n              <td>{cliente.name}</td>\r\n              <td>{cliente.email}</td>\r\n              <td>{cliente.phone}</td>\r\n              <td>{cliente.idNumber}</td>\r\n              <td>{cliente.address}</td>\r\n              <td>\r\n                <button className=\"btn btn-warning mr-2\" onClick={() => handleEdit(cliente)}>Editar</button>\r\n                <button className=\"btn btn-danger\" onClick={() => handleDelete(cliente._id)}>Eliminar</button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      {editClient && (\r\n        <div className=\"mt-5\">\r\n          <h2>Editar Cliente</h2>\r\n          <form onSubmit={(e) => { e.preventDefault(); handleUpdate(); }}>\r\n            <div className=\"form-group\">\r\n              <label>Nombre</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={clientForm.name}\r\n                onChange={(e) => setClientForm({ ...clientForm, name: e.target.value })} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Correo Electrónico</label>\r\n              <input\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                value={clientForm.email}\r\n                onChange={(e) => setClientForm({ ...clientForm, email: e.target.value })} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Teléfono</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={clientForm.phone}\r\n                onChange={(e) => setClientForm({ ...clientForm, phone: e.target.value })} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Cédula</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={clientForm.idNumber}\r\n                onChange={(e) => setClientForm({ ...clientForm, idNumber: e.target.value })} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Dirección</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={clientForm.address}\r\n                onChange={(e) => setClientForm({ ...clientForm, address: e.target.value })} />\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-success\">Actualizar</button>\r\n            <button type=\"button\" className=\"btn btn-secondary ml-2\" onClick={() => setEditClient(null)}>Cancelar</button>\r\n          </form>\r\n        </div>\r\n      )}\r\n      <h2>Préstamos</h2>\r\n      <button className=\"btn btn-info mb-2\" onClick={fetchLoans}>Cargar Préstamos</button>\r\n      <table className=\"table table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th>Cliente</th>\r\n            <th>Monto</th>\r\n            <th>Tasa de Interés</th>\r\n            <th>Plazo</th>\r\n            <th>Frecuencia</th>\r\n            <th>Estado</th>\r\n            <th>Fecha de Vencimiento</th>\r\n            <th>Acciones</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {loans.map((loan) => (\r\n            <tr key={loan._id}>\r\n              <td>{loan.clientName}</td>\r\n              <td>{loan.amount}</td>\r\n              <td>{loan.interestRate}</td>\r\n              <td>{loan.term}</td>\r\n              <td>{loan.frequency}</td>\r\n              <td>{loan.status}</td>\r\n              <td>{new Date(loan.dueDate).toLocaleDateString()}</td>\r\n              <td>\r\n                <button className=\"btn btn-warning mr-2\" onClick={() => handleEditLoan(loan)}>Editar</button>\r\n                <button className=\"btn btn-danger\" onClick={() => handleDeleteLoan(loan._id)}>Eliminar</button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      {editLoan && (\r\n        <div className=\"mt-5\">\r\n          <h2>Editar Préstamo</h2>\r\n          <form onSubmit={(e) => { e.preventDefault(); handleUpdateLoan(); }}>\r\n            <div className=\"form-group\">\r\n              <label>ID del Cliente</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={loanForm.clientId}\r\n                onChange={(e) => setLoanForm({ ...loanForm, clientId: e.target.value })} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Monto</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                value={loanForm.amount}\r\n                onChange={(e) => setLoanForm({ ...loanForm, amount: e.target.value })} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Tasa de Interés</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                value={loanForm.interestRate}\r\n                onChange={(e) => setLoanForm({ ...loanForm, interestRate: e.target.value })} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Plazo</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                value={loanForm.term}\r\n                onChange={(e) => setLoanForm({ ...loanForm, term: e.target.value })} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Frecuencia</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={loanForm.frequency}\r\n                onChange={(e) => setLoanForm({ ...loanForm, frequency: e.target.value })} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Estado</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={loanForm.status}\r\n                onChange={(e) => setLoanForm({ ...loanForm, status: e.target.value })} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Fecha de Vencimiento</label>\r\n              <input\r\n                type=\"date\"\r\n                className=\"form-control\"\r\n                value={loanForm.dueDate}\r\n                onChange={(e) => setLoanForm({ ...loanForm, dueDate: e.target.value })} />\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-success\">Actualizar</button>\r\n            <button type=\"button\" className=\"btn btn-secondary ml-2\" onClick={() => setEditLoan(null)}>Cancelar</button>\r\n          </form>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard; \r\n*/\r\n//**************************************************************************************\r\n\r\n/*\r\n// Dashboard.js\r\nimport axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nconst Dashboard = () => {\r\n  const [summary, setSummary] = useState({});\r\n  const [recentPayments, setRecentPayments] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [editClient, setEditClient] = useState(null);\r\n  const [clientForm, setClientForm] = useState({ name: '', email: '', phone: '', idNumber: '', address: '' });\r\n\r\n  const [loans, setLoans] = useState([]);\r\n  const [editLoan, setEditLoan] = useState(null);\r\n  const [loanForm, setLoanForm] = useState({ clientId: '', amount: '', interestRate: '', term: '', frequency: '', status: '', dueDate: '' });\r\n\r\n  useEffect(() => {\r\n    const fetchSummary = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/api/reports/summary\");\r\n        setSummary(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching summary:\", error);\r\n      }\r\n    };\r\n\r\n    const fetchRecentPayments = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/api/reports/recent-payments\");\r\n        setRecentPayments(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching recent payments:\", error);\r\n      }\r\n    };\r\n\r\n    fetchSummary();\r\n    fetchRecentPayments();\r\n  }, []);\r\n\r\n  const handleSearch = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.get(`http://localhost:5000/api/clientes/search?query=${searchQuery}`);\r\n      setSearchResults(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching search results:\", error);\r\n    }\r\n  };\r\n\r\n  const handleEdit = (client) => {\r\n    setEditClient(client._id);\r\n    setClientForm({ name: client.name, email: client.email, phone: client.phone, idNumber: client.idNumber, address: client.address });\r\n  };\r\n\r\n  const handleUpdate = async () => {\r\n    try {\r\n      await axios.put(`http://localhost:5000/api/clientes/update/${editClient}`, clientForm);\r\n      setEditClient(null);\r\n      setClientForm({ name: '', email: '', phone: '', idNumber: '', address: '' });\r\n      handleSearch({ preventDefault: () => { } });\r\n    } catch (error) {\r\n      console.error(\"Error updating client:\", error);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (clientId) => {\r\n    if (window.confirm(\"¿Estás seguro de que deseas eliminar este cliente?\")) {\r\n      try {\r\n        await axios.delete(`http://localhost:5000/api/clientes/delete/${clientId}`);\r\n        handleSearch({ preventDefault: () => { } });\r\n      } catch (error) {\r\n        console.error(\"Error deleting client:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const fetchLoans = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5000/api/loans\");\r\n      setLoans(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching loans:\", error);\r\n    }\r\n  };\r\n\r\n  const handleEditLoan = (loan) => {\r\n    setEditLoan(loan._id);\r\n    setLoanForm({\r\n      clientId: loan.clientId,\r\n      amount: loan.amount,\r\n      interestRate: loan.interestRate,\r\n      term: loan.term,\r\n      frequency: loan.frequency,\r\n      status: loan.status,\r\n      dueDate: new Date(loan.dueDate).toISOString().split('T')[0],\r\n    });\r\n  };\r\n\r\n  const handleUpdateLoan = async () => {\r\n    try {\r\n      await axios.put(`http://localhost:5000/api/loans/update/${editLoan}`, loanForm);\r\n      setEditLoan(null);\r\n      setLoanForm({ clientId: '', amount: '', interestRate: '', term: '', frequency: '', status: '', dueDate: '' });\r\n      fetchLoans();\r\n    } catch (error) {\r\n      console.error(\"Error updating loan:\", error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteLoan = async (loanId) => {\r\n    if (window.confirm(\"¿Estás seguro de que deseas eliminar este préstamo?\")) {\r\n      try {\r\n        await axios.delete(`http://localhost:5000/api/loans/delete/${loanId}`);\r\n        fetchLoans();\r\n      } catch (error) {\r\n        console.error(\"Error deleting loan:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <div className=\"jumbotron text-center\">\r\n        <h1 className=\"display-4\">Dashboard</h1>\r\n        <p className=\"lead\">Resumen de Préstamos y Pagos</p>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card text-white bg-primary mb-3\">\r\n            <div className=\"card-header\">Clientes totales</div>\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title\">{summary.totalClientes || 0}</h5>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card text-white bg-success mb-3\">\r\n            <div className=\"card-header\">Total de Préstamos</div>\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title\">{summary.totalPrestamos || 0}</h5>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card text-white bg-danger mb-3\">\r\n            <div className=\"card-header\">Préstamos en Mora</div>\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title\">{summary.totalMora || 0}</h5>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <h2>Pagos Recientes</h2>\r\n      <table className=\"table table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th>Cliente</th>\r\n            <th>Monto</th>\r\n            <th>Fecha</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {recentPayments.map((payment) => (\r\n            <tr key={payment._id}>\r\n              <td>{payment.client ? payment.client.name : \"Cliente no encontrado\"}</td>\r\n              <td>{payment.amount}</td>\r\n              <td>{payment.date ? new Date(payment.date).toLocaleDateString() : \"Fecha inválida\"}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <h2>Buscar Cliente</h2>\r\n      <form onSubmit={handleSearch}>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Buscar por nombre o cédula\"\r\n            value={searchQuery}\r\n            onChange={(e) => setSearchQuery(e.target.value)}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">Buscar</button>\r\n      </form>\r\n      <h2>Resultados de la Búsqueda</h2>\r\n      <table className=\"table table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th>Nombre</th>\r\n            <th>Correo Electrónico</th>\r\n            <th>Teléfono</th>\r\n            <th>Cédula</th>\r\n            <th>Dirección</th>\r\n            <th>Acciones</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {searchResults.map((cliente) => (\r\n            <tr key={cliente._id}>\r\n              <td>{cliente.name}</td>\r\n              <td>{cliente.email}</td>\r\n              <td>{cliente.phone}</td>\r\n              <td>{cliente.idNumber}</td>\r\n              <td>{cliente.address}</td>\r\n              <td>\r\n                <button className=\"btn btn-warning mr-2\" onClick={() => handleEdit(cliente)}>Editar</button>\r\n                <button className=\"btn btn-danger\" onClick={() => handleDelete(cliente._id)}>Eliminar</button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      {editClient && (\r\n        <div className=\"mt-5\">\r\n          <h2>Editar Cliente</h2>\r\n          <form onSubmit={(e) => { e.preventDefault(); handleUpdate(); }}>\r\n            <div className=\"form-group\">\r\n              <label>Nombre</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={clientForm.name}\r\n                onChange={(e) => setClientForm({ ...clientForm, name: e.target.value })}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Correo Electrónico</label>\r\n              <input\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                value={clientForm.email}\r\n                onChange={(e) => setClientForm({ ...clientForm, email: e.target.value })}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Teléfono</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={clientForm.phone}\r\n                onChange={(e) => setClientForm({ ...clientForm, phone: e.target.value })}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Cédula</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={clientForm.idNumber}\r\n                onChange={(e) => setClientForm({ ...clientForm, idNumber: e.target.value })}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Dirección</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={clientForm.address}\r\n                onChange={(e) => setClientForm({ ...clientForm, address: e.target.value })}\r\n              />\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-success\">Actualizar</button>\r\n            <button type=\"button\" className=\"btn btn-secondary ml-2\" onClick={() => setEditClient(null)}>Cancelar</button>\r\n          </form>\r\n        </div>\r\n      )}\r\n      <h2>Préstamos</h2>\r\n      <button className=\"btn btn-info mb-2\" onClick={fetchLoans}>Cargar Préstamos</button>\r\n      <table className=\"table table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th>Cliente</th>\r\n            <th>Monto</th>\r\n            <th>Tasa de Interés</th>\r\n            <th>Plazo</th>\r\n            <th>Frecuencia</th>\r\n            <th>Estado</th>\r\n            <th>Fecha de Vencimiento</th>\r\n            <th>Acciones</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {loans.map((loan) => (\r\n            <tr key={loan._id}>\r\n              <td>{loan.clientId}</td>\r\n              <td>{loan.amount}</td>\r\n              <td>{loan.interestRate}</td>\r\n              <td>{loan.term}</td>\r\n              <td>{loan.frequency}</td>\r\n              <td>{loan.status}</td>\r\n              <td>{new Date(loan.dueDate).toLocaleDateString()}</td>\r\n              <td>\r\n                <button className=\"btn btn-warning mr-2\" onClick={() => handleEditLoan(loan)}>Editar</button>\r\n                <button className=\"btn btn-danger\" onClick={() => handleDeleteLoan(loan._id)}>Eliminar</button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      {editLoan && (\r\n        <div className=\"mt-5\">\r\n          <h2>Editar Préstamo</h2>\r\n          <form onSubmit={(e) => { e.preventDefault(); handleUpdateLoan(); }}>\r\n            <div className=\"form-group\">\r\n              <label>ID del Cliente</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={loanForm.clientId}\r\n                onChange={(e) => setLoanForm({ ...loanForm, clientId: e.target.value })}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Monto</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                value={loanForm.amount}\r\n                onChange={(e) => setLoanForm({ ...loanForm, amount: e.target.value })}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Tasa de Interés</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                value={loanForm.interestRate}\r\n                onChange={(e) => setLoanForm({ ...loanForm, interestRate: e.target.value })}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Plazo</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                value={loanForm.term}\r\n                onChange={(e) => setLoanForm({ ...loanForm, term: e.target.value })}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Frecuencia</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={loanForm.frequency}\r\n                onChange={(e) => setLoanForm({ ...loanForm, frequency: e.target.value })}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Estado</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={loanForm.status}\r\n                onChange={(e) => setLoanForm({ ...loanForm, status: e.target.value })}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Fecha de Vencimiento</label>\r\n              <input\r\n                type=\"date\"\r\n                className=\"form-control\"\r\n                value={loanForm.dueDate}\r\n                onChange={(e) => setLoanForm({ ...loanForm, dueDate: e.target.value })}\r\n              />\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-success\">Actualizar</button>\r\n            <button type=\"button\" className=\"btn btn-secondary ml-2\" onClick={() => setEditLoan(null)}>Cancelar</button>\r\n          </form>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n*/"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}