{"ast":null,"code":"var _jsxFileName = \"D:\\\\Usuario\\\\wilme\\\\Escritorio\\\\Nueva carpeta\\\\loan-app-ui\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Button, Container, TextField, Typography } from '@mui/material';\nimport sendNotification from '../services/notificationService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [message, setMessage] = useState('');\n  const handleSendNotification = async () => {\n    try {\n      const response = await sendNotification(message);\n      alert(`Notification sent: ${response.status}`);\n    } catch (error) {\n      alert('Failed to send notification');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Notification Message\",\n      variant: \"outlined\",\n      fullWidth: true,\n      margin: \"normal\",\n      value: message,\n      onChange: e => setMessage(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleSendNotification,\n      children: \"Send Notification\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"l8KXAebGu4sZHsyCIQX7P8si41w=\");\n_c = Dashboard;\nexport default Dashboard;\n\n/*import React from 'react';\r\nimport { Button } from '@mui/material';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Dashboard = () => {\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <div>\r\n      <h1>Dashboard</h1>\r\n      <Button variant=\"contained\" color=\"primary\" onClick={() => navigate('/register')}>\r\n        Go to Register\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;*/\n\n/*import React from 'react';\r\nimport { Container, Row, Col, Card, Button } from 'react-bootstrap';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Dashboard = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const navigateToUsers = () => {\r\n    navigate('/users');\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Row className=\"my-4\">\r\n        <Col>\r\n          <Card>\r\n            <Card.Body>\r\n              <Card.Title>Gestión de Préstamos</Card.Title>\r\n              <Card.Text>\r\n                Aquí puedes gestionar todos los préstamos.\r\n              </Card.Text>\r\n              <Button variant=\"primary\">Ir a Préstamos</Button>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        <Col>\r\n          <Card>\r\n            <Card.Body>\r\n              <Card.Title>Gestión de Usuarios</Card.Title>\r\n              <Card.Text>\r\n                Aquí puedes gestionar todos los usuarios.\r\n              </Card.Text>\r\n              <Button variant=\"primary\" onClick={navigateToUsers}>Ir a Usuarios</Button>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n*/\n\n/*import React from 'react';\r\nimport { Container, Row, Col, Card, Button } from 'react-bootstrap';\r\n\r\nconst Dashboard = () => {\r\n  return (\r\n    <Container>\r\n      <Row className=\"my-4\">\r\n        <Col>\r\n          <Card>\r\n            <Card.Body>\r\n              <Card.Title>Gestión de Préstamos</Card.Title>\r\n              <Card.Text>\r\n                Aquí puedes gestionar todos los préstamos.\r\n              </Card.Text>\r\n              <Button variant=\"primary\">Ir a Préstamos</Button>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        <Col>\r\n          <Card>\r\n            <Card.Body>\r\n              <Card.Title>Gestión de Usuarios</Card.Title>\r\n              <Card.Text>\r\n                Aquí puedes gestionar todos los usuarios.\r\n              </Card.Text>\r\n              <Button variant=\"primary\">Ir a Usuarios</Button>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Dashboard; */\n\n// src/components/Dashboard.js\n/*import React, { useState, useEffect, useCallback } from 'react';\r\nimport { Chart } from 'chart.js';\r\n\r\nconst Dashboard = () => {\r\n    const [loans, setLoans] = useState([]);\r\n    const [payments, setPayments] = useState([]);\r\n    const [statistics, setStatistics] = useState({});\r\n    const [token, setToken] = useState('');\r\n\r\n    const fetchData = useCallback(async () => {\r\n        const headers = { 'x-auth-token': token };\r\n\r\n        try {\r\n            const responseLoans = await fetch('/api/reports/loans', { headers });\r\n            const loansData = await responseLoans.json();\r\n            setLoans(loansData);\r\n\r\n            const responsePayments = await fetch('/api/reports/payments', { headers });\r\n            const paymentsData = await responsePayments.json();\r\n            setPayments(paymentsData);\r\n\r\n            const responseStatistics = await fetch('/api/reports/statistics', { headers });\r\n            const statisticsData = await responseStatistics.json();\r\n            setStatistics(statisticsData);\r\n\r\n            createCharts(loansData, paymentsData);\r\n        } catch (error) {\r\n            console.error('Error fetching data:', error);\r\n        }\r\n    }, [token]);\r\n\r\n    useEffect(() => {\r\n        if (token) {\r\n            fetchData();\r\n        }\r\n    }, [token, fetchData]);\r\n\r\n    const createCharts = (loansData, paymentsData) => {\r\n        const loansChartCtx = document.getElementById('loansChart').getContext('2d');\r\n        const paymentsChartCtx = document.getElementById('paymentsChart').getContext('2d');\r\n\r\n        new Chart(loansChartCtx, {\r\n            type: 'bar',\r\n            data: {\r\n                labels: loansData.map(loan => loan.borrower.name),\r\n                datasets: [{\r\n                    label: 'Loan Amount',\r\n                    data: loansData.map(loan => loan.amount),\r\n                    backgroundColor: 'rgba(75, 192, 192, 0.2)',\r\n                    borderColor: 'rgba(75, 192, 192, 1)',\r\n                    borderWidth: 1\r\n                }]\r\n            },\r\n            options: {\r\n                scales: {\r\n                    y: {\r\n                        beginAtZero: true\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        new Chart(paymentsChartCtx, {\r\n            type: 'line',\r\n            data: {\r\n                labels: paymentsData.map(payment => new Date(payment.paymentDate).toLocaleDateString()),\r\n                datasets: [{\r\n                    label: 'Payment Amount',\r\n                    data: paymentsData.map(payment => payment.amount),\r\n                    backgroundColor: 'rgba(153, 102, 255, 0.2)',\r\n                    borderColor: 'rgba(153, 102, 255, 1)',\r\n                    borderWidth: 1\r\n                }]\r\n            },\r\n            options: {\r\n                scales: {\r\n                    y: {\r\n                        beginAtZero: true\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1>Dashboard</h1>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Enter JWT Token\"\r\n                value={token}\r\n                onChange={(e) => setToken(e.target.value)}\r\n                style={{ width: '300px', padding: '10px' }}\r\n            />\r\n            <button onClick={fetchData}>Fetch Data</button>\r\n            <canvas id=\"loansChart\" width=\"400\" height=\"200\"></canvas>\r\n            <canvas id=\"paymentsChart\" width=\"400\" height=\"200\"></canvas>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dashboard;*/\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","Button","Container","TextField","Typography","sendNotification","jsxDEV","_jsxDEV","Dashboard","_s","message","setMessage","handleSendNotification","response","alert","status","error","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","label","fullWidth","margin","value","onChange","e","target","color","onClick","_c","$RefreshReg$"],"sources":["D:/Usuario/wilme/Escritorio/Nueva carpeta/loan-app-ui/src/components/Dashboard.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Button, Container, TextField, Typography } from '@mui/material';\r\nimport sendNotification from '../services/notificationService';\r\n\r\nconst Dashboard = () => {\r\n  const [message, setMessage] = useState('');\r\n\r\n  const handleSendNotification = async () => {\r\n    try {\r\n      const response = await sendNotification(message);\r\n      alert(`Notification sent: ${response.status}`);\r\n    } catch (error) {\r\n      alert('Failed to send notification');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Typography variant=\"h4\">Dashboard</Typography>\r\n      <TextField\r\n        label=\"Notification Message\"\r\n        variant=\"outlined\"\r\n        fullWidth\r\n        margin=\"normal\"\r\n        value={message}\r\n        onChange={(e) => setMessage(e.target.value)}\r\n      />\r\n      <Button variant=\"contained\" color=\"primary\" onClick={handleSendNotification}>\r\n        Send Notification\r\n      </Button>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n\r\n\r\n/*import React from 'react';\r\nimport { Button } from '@mui/material';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Dashboard = () => {\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <div>\r\n      <h1>Dashboard</h1>\r\n      <Button variant=\"contained\" color=\"primary\" onClick={() => navigate('/register')}>\r\n        Go to Register\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;*/\r\n\r\n\r\n\r\n/*import React from 'react';\r\nimport { Container, Row, Col, Card, Button } from 'react-bootstrap';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Dashboard = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const navigateToUsers = () => {\r\n    navigate('/users');\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Row className=\"my-4\">\r\n        <Col>\r\n          <Card>\r\n            <Card.Body>\r\n              <Card.Title>Gestión de Préstamos</Card.Title>\r\n              <Card.Text>\r\n                Aquí puedes gestionar todos los préstamos.\r\n              </Card.Text>\r\n              <Button variant=\"primary\">Ir a Préstamos</Button>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        <Col>\r\n          <Card>\r\n            <Card.Body>\r\n              <Card.Title>Gestión de Usuarios</Card.Title>\r\n              <Card.Text>\r\n                Aquí puedes gestionar todos los usuarios.\r\n              </Card.Text>\r\n              <Button variant=\"primary\" onClick={navigateToUsers}>Ir a Usuarios</Button>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n*/\r\n\r\n\r\n/*import React from 'react';\r\nimport { Container, Row, Col, Card, Button } from 'react-bootstrap';\r\n\r\nconst Dashboard = () => {\r\n  return (\r\n    <Container>\r\n      <Row className=\"my-4\">\r\n        <Col>\r\n          <Card>\r\n            <Card.Body>\r\n              <Card.Title>Gestión de Préstamos</Card.Title>\r\n              <Card.Text>\r\n                Aquí puedes gestionar todos los préstamos.\r\n              </Card.Text>\r\n              <Button variant=\"primary\">Ir a Préstamos</Button>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        <Col>\r\n          <Card>\r\n            <Card.Body>\r\n              <Card.Title>Gestión de Usuarios</Card.Title>\r\n              <Card.Text>\r\n                Aquí puedes gestionar todos los usuarios.\r\n              </Card.Text>\r\n              <Button variant=\"primary\">Ir a Usuarios</Button>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Dashboard; */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// src/components/Dashboard.js\r\n/*import React, { useState, useEffect, useCallback } from 'react';\r\nimport { Chart } from 'chart.js';\r\n\r\nconst Dashboard = () => {\r\n    const [loans, setLoans] = useState([]);\r\n    const [payments, setPayments] = useState([]);\r\n    const [statistics, setStatistics] = useState({});\r\n    const [token, setToken] = useState('');\r\n\r\n    const fetchData = useCallback(async () => {\r\n        const headers = { 'x-auth-token': token };\r\n\r\n        try {\r\n            const responseLoans = await fetch('/api/reports/loans', { headers });\r\n            const loansData = await responseLoans.json();\r\n            setLoans(loansData);\r\n\r\n            const responsePayments = await fetch('/api/reports/payments', { headers });\r\n            const paymentsData = await responsePayments.json();\r\n            setPayments(paymentsData);\r\n\r\n            const responseStatistics = await fetch('/api/reports/statistics', { headers });\r\n            const statisticsData = await responseStatistics.json();\r\n            setStatistics(statisticsData);\r\n\r\n            createCharts(loansData, paymentsData);\r\n        } catch (error) {\r\n            console.error('Error fetching data:', error);\r\n        }\r\n    }, [token]);\r\n\r\n    useEffect(() => {\r\n        if (token) {\r\n            fetchData();\r\n        }\r\n    }, [token, fetchData]);\r\n\r\n    const createCharts = (loansData, paymentsData) => {\r\n        const loansChartCtx = document.getElementById('loansChart').getContext('2d');\r\n        const paymentsChartCtx = document.getElementById('paymentsChart').getContext('2d');\r\n\r\n        new Chart(loansChartCtx, {\r\n            type: 'bar',\r\n            data: {\r\n                labels: loansData.map(loan => loan.borrower.name),\r\n                datasets: [{\r\n                    label: 'Loan Amount',\r\n                    data: loansData.map(loan => loan.amount),\r\n                    backgroundColor: 'rgba(75, 192, 192, 0.2)',\r\n                    borderColor: 'rgba(75, 192, 192, 1)',\r\n                    borderWidth: 1\r\n                }]\r\n            },\r\n            options: {\r\n                scales: {\r\n                    y: {\r\n                        beginAtZero: true\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        new Chart(paymentsChartCtx, {\r\n            type: 'line',\r\n            data: {\r\n                labels: paymentsData.map(payment => new Date(payment.paymentDate).toLocaleDateString()),\r\n                datasets: [{\r\n                    label: 'Payment Amount',\r\n                    data: paymentsData.map(payment => payment.amount),\r\n                    backgroundColor: 'rgba(153, 102, 255, 0.2)',\r\n                    borderColor: 'rgba(153, 102, 255, 1)',\r\n                    borderWidth: 1\r\n                }]\r\n            },\r\n            options: {\r\n                scales: {\r\n                    y: {\r\n                        beginAtZero: true\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1>Dashboard</h1>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Enter JWT Token\"\r\n                value={token}\r\n                onChange={(e) => setToken(e.target.value)}\r\n                style={{ width: '300px', padding: '10px' }}\r\n            />\r\n            <button onClick={fetchData}>Fetch Data</button>\r\n            <canvas id=\"loansChart\" width=\"400\" height=\"200\"></canvas>\r\n            <canvas id=\"paymentsChart\" width=\"400\" height=\"200\"></canvas>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dashboard;*/\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,EAAEC,SAAS,EAAEC,SAAS,EAAEC,UAAU,QAAQ,eAAe;AACxE,OAAOC,gBAAgB,MAAM,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/D,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMY,sBAAsB,GAAG,MAAAA,CAAA,KAAY;IACzC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMR,gBAAgB,CAACK,OAAO,CAAC;MAChDI,KAAK,CAAC,sBAAsBD,QAAQ,CAACE,MAAM,EAAE,CAAC;IAChD,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdF,KAAK,CAAC,6BAA6B,CAAC;IACtC;EACF,CAAC;EAED,oBACEP,OAAA,CAACL,SAAS;IAAAe,QAAA,gBACRV,OAAA,CAACH,UAAU;MAACc,OAAO,EAAC,IAAI;MAAAD,QAAA,EAAC;IAAS;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eAC/Cf,OAAA,CAACJ,SAAS;MACRoB,KAAK,EAAC,sBAAsB;MAC5BL,OAAO,EAAC,UAAU;MAClBM,SAAS;MACTC,MAAM,EAAC,QAAQ;MACfC,KAAK,EAAEhB,OAAQ;MACfiB,QAAQ,EAAGC,CAAC,IAAKjB,UAAU,CAACiB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC,eACFf,OAAA,CAACN,MAAM;MAACiB,OAAO,EAAC,WAAW;MAACY,KAAK,EAAC,SAAS;MAACC,OAAO,EAAEnB,sBAAuB;MAAAK,QAAA,EAAC;IAE7E;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEhB,CAAC;AAACb,EAAA,CA5BID,SAAS;AAAAwB,EAAA,GAATxB,SAAS;AA8Bf,eAAeA,SAAS;;AAGxrGA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}