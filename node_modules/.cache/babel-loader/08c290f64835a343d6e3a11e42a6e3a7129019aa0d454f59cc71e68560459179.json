{"ast":null,"code":"var _jsxFileName = \"D:\\\\Usuario\\\\wilme\\\\Escritorio\\\\Gestion_Loans_Clean\\\\loan-app-ui\\\\src\\\\components\\\\Payments.js\",\n  _s = $RefreshSig$();\n/*import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nconst Payments = () => {\r\n  const [form, setForm] = useState({\r\n    loanId: \"\",\r\n    amount: \"\",\r\n  });\r\n  const [loans, setLoans] = useState([]);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const fetchLoans = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:5000/api/loans`);\r\n        setLoans(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching loans:\", error);\r\n      }\r\n    };\r\n\r\n    fetchLoans();\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    setForm({\r\n      ...form,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await axios.post(`http://localhost:5000/api/payments`, form);\r\n      setMessage(\"Pago registrado con éxito.\");\r\n    } catch (error) {\r\n      setMessage(\"Error al registrar el pago.\");\r\n    }\r\n  };\r\n\r\n  const getClientName = (loan) => {\r\n    if (loan && loan.clientId) {\r\n      const { name, email } = loan.clientId;\r\n      return `${name} (${email})`;\r\n    }\r\n    return \"Indefinido (no definido)\";\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <div className=\"jumbotron text-center\">\r\n        <h1 className=\"display-4\">Registro de Pagos</h1>\r\n        <p className=\"lead\">Complete el formulario para registrar un pago</p>\r\n      </div>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"loanId\" className=\"form-label\">\r\n            Préstamo\r\n          </label>\r\n          <select\r\n            className=\"form-control\"\r\n            id=\"loanId\"\r\n            name=\"loanId\"\r\n            value={form.loanId}\r\n            onChange={handleChange}\r\n            required\r\n          >\r\n            <option value=\"\">Seleccione un préstamo</option>\r\n            {loans.map((loan) => (\r\n              <option key={loan._id} value={loan._id}>\r\n                {getClientName(loan)} - Monto: {loan.amount}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        {form.loanId && (\r\n          <div className=\"mb-3\">\r\n            <label>Cliente</label>\r\n            <p>\r\n              {getClientName(loans.find((loan) => loan._id === form.loanId))}\r\n            </p>\r\n          </div>\r\n        )}\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"amount\" className=\"form-label\">\r\n            Monto\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control\"\r\n            id=\"amount\"\r\n            name=\"amount\"\r\n            value={form.amount}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Registrar Pago\r\n        </button>\r\n        {message && <p>{message}</p>}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Payments;\r\n*/\n\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoanPayments = ({\n  loanId\n}) => {\n  _s();\n  const [payments, setPayments] = useState([]);\n  const [remainingAmount, setRemainingAmount] = useState(0);\n  useEffect(() => {\n    const fetchPayments = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5000/api/payments/loan/${loanId}`);\n        setPayments(response.data);\n        const loanResponse = await axios.get(`http://localhost:5000/api/loans/${loanId}`);\n        const loan = loanResponse.data;\n        const totalPaid = response.data.reduce((total, payment) => total + payment.amount, 0);\n        setRemainingAmount(loan.amount - totalPaid);\n      } catch (error) {\n        console.error('Error fetching payments:', error);\n      }\n    };\n    fetchPayments();\n  }, [loanId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"jumbotron text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"display-4\",\n        children: \"Pagos del Pr\\xE9stamo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"lead\",\n        children: \"Visualiza los pagos realizados y las cuotas restantes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Pagos Realizados:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: payments.map(payment => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Fecha: \", new Date(payment.date).toLocaleDateString(), \", Monto: \", payment.amount]\n        }, payment._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Cuotas Restantes:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Monto Restante: \", remainingAmount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 9\n  }, this);\n};\n_s(LoanPayments, \"098mKqu33WzC9BzINJOyHctsv9M=\");\n_c = LoanPayments;\nexport default LoanPayments;\nvar _c;\n$RefreshReg$(_c, \"LoanPayments\");","map":{"version":3,"names":["axios","React","useState","useEffect","jsxDEV","_jsxDEV","LoanPayments","loanId","_s","payments","setPayments","remainingAmount","setRemainingAmount","fetchPayments","response","get","data","loanResponse","loan","totalPaid","reduce","total","payment","amount","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","Date","date","toLocaleDateString","_id","_c","$RefreshReg$"],"sources":["D:/Usuario/wilme/Escritorio/Gestion_Loans_Clean/loan-app-ui/src/components/Payments.js"],"sourcesContent":["/*import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nconst Payments = () => {\r\n  const [form, setForm] = useState({\r\n    loanId: \"\",\r\n    amount: \"\",\r\n  });\r\n  const [loans, setLoans] = useState([]);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const fetchLoans = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:5000/api/loans`);\r\n        setLoans(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching loans:\", error);\r\n      }\r\n    };\r\n\r\n    fetchLoans();\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    setForm({\r\n      ...form,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await axios.post(`http://localhost:5000/api/payments`, form);\r\n      setMessage(\"Pago registrado con éxito.\");\r\n    } catch (error) {\r\n      setMessage(\"Error al registrar el pago.\");\r\n    }\r\n  };\r\n\r\n  const getClientName = (loan) => {\r\n    if (loan && loan.clientId) {\r\n      const { name, email } = loan.clientId;\r\n      return `${name} (${email})`;\r\n    }\r\n    return \"Indefinido (no definido)\";\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <div className=\"jumbotron text-center\">\r\n        <h1 className=\"display-4\">Registro de Pagos</h1>\r\n        <p className=\"lead\">Complete el formulario para registrar un pago</p>\r\n      </div>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"loanId\" className=\"form-label\">\r\n            Préstamo\r\n          </label>\r\n          <select\r\n            className=\"form-control\"\r\n            id=\"loanId\"\r\n            name=\"loanId\"\r\n            value={form.loanId}\r\n            onChange={handleChange}\r\n            required\r\n          >\r\n            <option value=\"\">Seleccione un préstamo</option>\r\n            {loans.map((loan) => (\r\n              <option key={loan._id} value={loan._id}>\r\n                {getClientName(loan)} - Monto: {loan.amount}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        {form.loanId && (\r\n          <div className=\"mb-3\">\r\n            <label>Cliente</label>\r\n            <p>\r\n              {getClientName(loans.find((loan) => loan._id === form.loanId))}\r\n            </p>\r\n          </div>\r\n        )}\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"amount\" className=\"form-label\">\r\n            Monto\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control\"\r\n            id=\"amount\"\r\n            name=\"amount\"\r\n            value={form.amount}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Registrar Pago\r\n        </button>\r\n        {message && <p>{message}</p>}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Payments;\r\n*/\r\n\r\nimport axios from 'axios';\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nconst LoanPayments = ({ loanId }) => {\r\n    const [payments, setPayments] = useState([]);\r\n    const [remainingAmount, setRemainingAmount] = useState(0);\r\n\r\n    useEffect(() => {\r\n        const fetchPayments = async () => {\r\n            try {\r\n                const response = await axios.get(`http://localhost:5000/api/payments/loan/${loanId}`);\r\n                setPayments(response.data);\r\n\r\n                const loanResponse = await axios.get(`http://localhost:5000/api/loans/${loanId}`);\r\n                const loan = loanResponse.data;\r\n                const totalPaid = response.data.reduce((total, payment) => total + payment.amount, 0);\r\n                setRemainingAmount(loan.amount - totalPaid);\r\n            } catch (error) {\r\n                console.error('Error fetching payments:', error);\r\n            }\r\n        };\r\n\r\n        fetchPayments();\r\n    }, [loanId]);\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <div className=\"jumbotron text-center\">\r\n                <h1 className=\"display-4\">Pagos del Préstamo</h1>\r\n                <p className=\"lead\">Visualiza los pagos realizados y las cuotas restantes</p>\r\n            </div>\r\n            <div>\r\n                <h3>Pagos Realizados:</h3>\r\n                <ul>\r\n                    {payments.map(payment => (\r\n                        <li key={payment._id}>\r\n                            Fecha: {new Date(payment.date).toLocaleDateString()}, Monto: {payment.amount}\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n                <h3>Cuotas Restantes:</h3>\r\n                <p>Monto Restante: {remainingAmount}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoanPayments;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EACjC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,eAAe,EAAEC,kBAAkB,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EAEzDC,SAAS,CAAC,MAAM;IACZ,MAAMU,aAAa,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAC,2CAA2CR,MAAM,EAAE,CAAC;QACrFG,WAAW,CAACI,QAAQ,CAACE,IAAI,CAAC;QAE1B,MAAMC,YAAY,GAAG,MAAMjB,KAAK,CAACe,GAAG,CAAC,mCAAmCR,MAAM,EAAE,CAAC;QACjF,MAAMW,IAAI,GAAGD,YAAY,CAACD,IAAI;QAC9B,MAAMG,SAAS,GAAGL,QAAQ,CAACE,IAAI,CAACI,MAAM,CAAC,CAACC,KAAK,EAAEC,OAAO,KAAKD,KAAK,GAAGC,OAAO,CAACC,MAAM,EAAE,CAAC,CAAC;QACrFX,kBAAkB,CAACM,IAAI,CAACK,MAAM,GAAGJ,SAAS,CAAC;MAC/C,CAAC,CAAC,OAAOK,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MACpD;IACJ,CAAC;IAEDX,aAAa,CAAC,CAAC;EACnB,CAAC,EAAE,CAACN,MAAM,CAAC,CAAC;EAEZ,oBACIF,OAAA;IAAKqB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC3BtB,OAAA;MAAKqB,SAAS,EAAC,uBAAuB;MAAAC,QAAA,gBAClCtB,OAAA;QAAIqB,SAAS,EAAC,WAAW;QAAAC,QAAA,EAAC;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjD1B,OAAA;QAAGqB,SAAS,EAAC,MAAM;QAAAC,QAAA,EAAC;MAAqD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5E,CAAC,eACN1B,OAAA;MAAAsB,QAAA,gBACItB,OAAA;QAAAsB,QAAA,EAAI;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1B1B,OAAA;QAAAsB,QAAA,EACKlB,QAAQ,CAACuB,GAAG,CAACV,OAAO,iBACjBjB,OAAA;UAAAsB,QAAA,GAAsB,SACX,EAAC,IAAIM,IAAI,CAACX,OAAO,CAACY,IAAI,CAAC,CAACC,kBAAkB,CAAC,CAAC,EAAC,WAAS,EAACb,OAAO,CAACC,MAAM;QAAA,GADvED,OAAO,CAACc,GAAG;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEhB,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eACL1B,OAAA;QAAAsB,QAAA,EAAI;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1B1B,OAAA;QAAAsB,QAAA,GAAG,kBAAgB,EAAChB,eAAe;MAAA;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACvB,EAAA,CA1CIF,YAAY;AAAA+B,EAAA,GAAZ/B,YAAY;AA4ClB,eAAeA,YAAY;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}