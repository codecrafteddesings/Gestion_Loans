{"ast":null,"code":"var _jsxFileName = \"D:\\\\Usuario\\\\wilme\\\\Escritorio\\\\Nueva carpeta\\\\loan-app\\\\loan-app-ui\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Container, Row, Col, Card, Button } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const history = useHistory();\n  const navigateToUsers = () => {\n    history.push('/users');\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"my-4\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: \"Gesti\\xF3n de Pr\\xE9stamos\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: \"Aqu\\xED puedes gestionar todos los pr\\xE9stamos.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              children: \"Ir a Pr\\xE9stamos\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: \"Gesti\\xF3n de Usuarios\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: \"Aqu\\xED puedes gestionar todos los usuarios.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              onClick: navigateToUsers,\n              children: \"Ir a Usuarios\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n_c = Dashboard;\nexport default Dashboard;\n\n/*import React from 'react';\r\nimport { Container, Row, Col, Card, Button } from 'react-bootstrap';\r\n\r\nconst Dashboard = () => {\r\n  return (\r\n    <Container>\r\n      <Row className=\"my-4\">\r\n        <Col>\r\n          <Card>\r\n            <Card.Body>\r\n              <Card.Title>Gestión de Préstamos</Card.Title>\r\n              <Card.Text>\r\n                Aquí puedes gestionar todos los préstamos.\r\n              </Card.Text>\r\n              <Button variant=\"primary\">Ir a Préstamos</Button>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        <Col>\r\n          <Card>\r\n            <Card.Body>\r\n              <Card.Title>Gestión de Usuarios</Card.Title>\r\n              <Card.Text>\r\n                Aquí puedes gestionar todos los usuarios.\r\n              </Card.Text>\r\n              <Button variant=\"primary\">Ir a Usuarios</Button>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Dashboard; */\n\n// src/components/Dashboard.js\n/*import React, { useState, useEffect, useCallback } from 'react';\r\nimport { Chart } from 'chart.js';\r\n\r\nconst Dashboard = () => {\r\n    const [loans, setLoans] = useState([]);\r\n    const [payments, setPayments] = useState([]);\r\n    const [statistics, setStatistics] = useState({});\r\n    const [token, setToken] = useState('');\r\n\r\n    const fetchData = useCallback(async () => {\r\n        const headers = { 'x-auth-token': token };\r\n\r\n        try {\r\n            const responseLoans = await fetch('/api/reports/loans', { headers });\r\n            const loansData = await responseLoans.json();\r\n            setLoans(loansData);\r\n\r\n            const responsePayments = await fetch('/api/reports/payments', { headers });\r\n            const paymentsData = await responsePayments.json();\r\n            setPayments(paymentsData);\r\n\r\n            const responseStatistics = await fetch('/api/reports/statistics', { headers });\r\n            const statisticsData = await responseStatistics.json();\r\n            setStatistics(statisticsData);\r\n\r\n            createCharts(loansData, paymentsData);\r\n        } catch (error) {\r\n            console.error('Error fetching data:', error);\r\n        }\r\n    }, [token]);\r\n\r\n    useEffect(() => {\r\n        if (token) {\r\n            fetchData();\r\n        }\r\n    }, [token, fetchData]);\r\n\r\n    const createCharts = (loansData, paymentsData) => {\r\n        const loansChartCtx = document.getElementById('loansChart').getContext('2d');\r\n        const paymentsChartCtx = document.getElementById('paymentsChart').getContext('2d');\r\n\r\n        new Chart(loansChartCtx, {\r\n            type: 'bar',\r\n            data: {\r\n                labels: loansData.map(loan => loan.borrower.name),\r\n                datasets: [{\r\n                    label: 'Loan Amount',\r\n                    data: loansData.map(loan => loan.amount),\r\n                    backgroundColor: 'rgba(75, 192, 192, 0.2)',\r\n                    borderColor: 'rgba(75, 192, 192, 1)',\r\n                    borderWidth: 1\r\n                }]\r\n            },\r\n            options: {\r\n                scales: {\r\n                    y: {\r\n                        beginAtZero: true\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        new Chart(paymentsChartCtx, {\r\n            type: 'line',\r\n            data: {\r\n                labels: paymentsData.map(payment => new Date(payment.paymentDate).toLocaleDateString()),\r\n                datasets: [{\r\n                    label: 'Payment Amount',\r\n                    data: paymentsData.map(payment => payment.amount),\r\n                    backgroundColor: 'rgba(153, 102, 255, 0.2)',\r\n                    borderColor: 'rgba(153, 102, 255, 1)',\r\n                    borderWidth: 1\r\n                }]\r\n            },\r\n            options: {\r\n                scales: {\r\n                    y: {\r\n                        beginAtZero: true\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1>Dashboard</h1>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Enter JWT Token\"\r\n                value={token}\r\n                onChange={(e) => setToken(e.target.value)}\r\n                style={{ width: '300px', padding: '10px' }}\r\n            />\r\n            <button onClick={fetchData}>Fetch Data</button>\r\n            <canvas id=\"loansChart\" width=\"400\" height=\"200\"></canvas>\r\n            <canvas id=\"paymentsChart\" width=\"400\" height=\"200\"></canvas>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dashboard;*/\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","Container","Row","Col","Card","Button","useHistory","jsxDEV","_jsxDEV","Dashboard","_s","history","navigateToUsers","push","children","className","Body","Title","fileName","_jsxFileName","lineNumber","columnNumber","Text","variant","onClick","_c","$RefreshReg$"],"sources":["D:/Usuario/wilme/Escritorio/Nueva carpeta/loan-app/loan-app-ui/src/components/Dashboard.js"],"sourcesContent":["import React from 'react';\r\nimport { Container, Row, Col, Card, Button } from 'react-bootstrap';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Dashboard = () => {\r\n  const history = useHistory();\r\n\r\n  const navigateToUsers = () => {\r\n    history.push('/users');\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Row className=\"my-4\">\r\n        <Col>\r\n          <Card>\r\n            <Card.Body>\r\n              <Card.Title>Gestión de Préstamos</Card.Title>\r\n              <Card.Text>\r\n                Aquí puedes gestionar todos los préstamos.\r\n              </Card.Text>\r\n              <Button variant=\"primary\">Ir a Préstamos</Button>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        <Col>\r\n          <Card>\r\n            <Card.Body>\r\n              <Card.Title>Gestión de Usuarios</Card.Title>\r\n              <Card.Text>\r\n                Aquí puedes gestionar todos los usuarios.\r\n              </Card.Text>\r\n              <Button variant=\"primary\" onClick={navigateToUsers}>Ir a Usuarios</Button>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n\r\n\r\n\r\n/*import React from 'react';\r\nimport { Container, Row, Col, Card, Button } from 'react-bootstrap';\r\n\r\nconst Dashboard = () => {\r\n  return (\r\n    <Container>\r\n      <Row className=\"my-4\">\r\n        <Col>\r\n          <Card>\r\n            <Card.Body>\r\n              <Card.Title>Gestión de Préstamos</Card.Title>\r\n              <Card.Text>\r\n                Aquí puedes gestionar todos los préstamos.\r\n              </Card.Text>\r\n              <Button variant=\"primary\">Ir a Préstamos</Button>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        <Col>\r\n          <Card>\r\n            <Card.Body>\r\n              <Card.Title>Gestión de Usuarios</Card.Title>\r\n              <Card.Text>\r\n                Aquí puedes gestionar todos los usuarios.\r\n              </Card.Text>\r\n              <Button variant=\"primary\">Ir a Usuarios</Button>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Dashboard; */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// src/components/Dashboard.js\r\n/*import React, { useState, useEffect, useCallback } from 'react';\r\nimport { Chart } from 'chart.js';\r\n\r\nconst Dashboard = () => {\r\n    const [loans, setLoans] = useState([]);\r\n    const [payments, setPayments] = useState([]);\r\n    const [statistics, setStatistics] = useState({});\r\n    const [token, setToken] = useState('');\r\n\r\n    const fetchData = useCallback(async () => {\r\n        const headers = { 'x-auth-token': token };\r\n\r\n        try {\r\n            const responseLoans = await fetch('/api/reports/loans', { headers });\r\n            const loansData = await responseLoans.json();\r\n            setLoans(loansData);\r\n\r\n            const responsePayments = await fetch('/api/reports/payments', { headers });\r\n            const paymentsData = await responsePayments.json();\r\n            setPayments(paymentsData);\r\n\r\n            const responseStatistics = await fetch('/api/reports/statistics', { headers });\r\n            const statisticsData = await responseStatistics.json();\r\n            setStatistics(statisticsData);\r\n\r\n            createCharts(loansData, paymentsData);\r\n        } catch (error) {\r\n            console.error('Error fetching data:', error);\r\n        }\r\n    }, [token]);\r\n\r\n    useEffect(() => {\r\n        if (token) {\r\n            fetchData();\r\n        }\r\n    }, [token, fetchData]);\r\n\r\n    const createCharts = (loansData, paymentsData) => {\r\n        const loansChartCtx = document.getElementById('loansChart').getContext('2d');\r\n        const paymentsChartCtx = document.getElementById('paymentsChart').getContext('2d');\r\n\r\n        new Chart(loansChartCtx, {\r\n            type: 'bar',\r\n            data: {\r\n                labels: loansData.map(loan => loan.borrower.name),\r\n                datasets: [{\r\n                    label: 'Loan Amount',\r\n                    data: loansData.map(loan => loan.amount),\r\n                    backgroundColor: 'rgba(75, 192, 192, 0.2)',\r\n                    borderColor: 'rgba(75, 192, 192, 1)',\r\n                    borderWidth: 1\r\n                }]\r\n            },\r\n            options: {\r\n                scales: {\r\n                    y: {\r\n                        beginAtZero: true\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        new Chart(paymentsChartCtx, {\r\n            type: 'line',\r\n            data: {\r\n                labels: paymentsData.map(payment => new Date(payment.paymentDate).toLocaleDateString()),\r\n                datasets: [{\r\n                    label: 'Payment Amount',\r\n                    data: paymentsData.map(payment => payment.amount),\r\n                    backgroundColor: 'rgba(153, 102, 255, 0.2)',\r\n                    borderColor: 'rgba(153, 102, 255, 1)',\r\n                    borderWidth: 1\r\n                }]\r\n            },\r\n            options: {\r\n                scales: {\r\n                    y: {\r\n                        beginAtZero: true\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1>Dashboard</h1>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Enter JWT Token\"\r\n                value={token}\r\n                onChange={(e) => setToken(e.target.value)}\r\n                style={{ width: '300px', padding: '10px' }}\r\n            />\r\n            <button onClick={fetchData}>Fetch Data</button>\r\n            <canvas id=\"loansChart\" width=\"400\" height=\"200\"></canvas>\r\n            <canvas id=\"paymentsChart\" width=\"400\" height=\"200\"></canvas>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dashboard;*/\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,GAAG,EAAEC,GAAG,EAAEC,IAAI,EAAEC,MAAM,QAAQ,iBAAiB;AACnE,SAASC,UAAU,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAMC,OAAO,GAAGL,UAAU,CAAC,CAAC;EAE5B,MAAMM,eAAe,GAAGA,CAAA,KAAM;IAC5BD,OAAO,CAACE,IAAI,CAAC,QAAQ,CAAC;EACxB,CAAC;EAED,oBACEL,OAAA,CAACP,SAAS;IAAAa,QAAA,eACRN,OAAA,CAACN,GAAG;MAACa,SAAS,EAAC,MAAM;MAAAD,QAAA,gBACnBN,OAAA,CAACL,GAAG;QAAAW,QAAA,eACFN,OAAA,CAACJ,IAAI;UAAAU,QAAA,eACHN,OAAA,CAACJ,IAAI,CAACY,IAAI;YAAAF,QAAA,gBACRN,OAAA,CAACJ,IAAI,CAACa,KAAK;cAAAH,QAAA,EAAC;YAAoB;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eAC7Cb,OAAA,CAACJ,IAAI,CAACkB,IAAI;cAAAR,QAAA,EAAC;YAEX;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAW,CAAC,eACZb,OAAA,CAACH,MAAM;cAACkB,OAAO,EAAC,SAAS;cAAAT,QAAA,EAAC;YAAc;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eACNb,OAAA,CAACL,GAAG;QAAAW,QAAA,eACFN,OAAA,CAACJ,IAAI;UAAAU,QAAA,eACHN,OAAA,CAACJ,IAAI,CAACY,IAAI;YAAAF,QAAA,gBACRN,OAAA,CAACJ,IAAI,CAACa,KAAK;cAAAH,QAAA,EAAC;YAAmB;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eAC5Cb,OAAA,CAACJ,IAAI,CAACkB,IAAI;cAAAR,QAAA,EAAC;YAEX;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAW,CAAC,eACZb,OAAA,CAACH,MAAM;cAACkB,OAAO,EAAC,SAAS;cAACC,OAAO,EAAEZ,eAAgB;cAAAE,QAAA,EAAC;YAAa;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEhB,CAAC;AAACX,EAAA,CAnCID,SAAS;EAAA,QACGH,UAAU;AAAA;AAAAmB,EAAA,GADtBhB,SAAS;AAqCf,eAAeA,SAAS;;AAIxrGA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}