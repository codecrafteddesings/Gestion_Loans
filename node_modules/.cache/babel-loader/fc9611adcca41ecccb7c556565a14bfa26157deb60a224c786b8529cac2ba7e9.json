{"ast":null,"code":"var _jsxFileName = \"D:\\\\Usuario\\\\wilme\\\\Escritorio\\\\Gestion_Loans_Clean\\\\loan-app-ui\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [clients, setClients] = useState([]);\n  const [loans, setLoans] = useState([]);\n  const [recentPayments, setRecentPayments] = useState([]);\n  const [editClient, setEditClient] = useState(null);\n  const [editLoan, setEditLoan] = useState(null);\n  useEffect(() => {\n    fetchClients();\n    fetchLoans();\n    fetchRecentPayments();\n  }, []);\n  const fetchClients = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/clients');\n      setClients(response.data);\n    } catch (error) {\n      console.error(\"Error fetching clients:\", error);\n    }\n  };\n  const fetchLoans = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/loans');\n      setLoans(response.data);\n    } catch (error) {\n      console.error(\"Error fetching loans:\", error);\n    }\n  };\n  const fetchRecentPayments = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/payments/recent');\n      setRecentPayments(response.data);\n    } catch (error) {\n      console.error(\"Error fetching recent payments:\", error);\n    }\n  };\n  const handleEditClient = client => {\n    setEditClient(client);\n  };\n  const handleEditLoan = loan => {\n    setEditLoan(loan);\n  };\n  const handleDeleteLoan = async loanId => {\n    if (window.confirm(\"¿Estás seguro de que deseas eliminar este préstamo?\")) {\n      try {\n        await axios.delete(`http://localhost:5000/api/loans/${loanId}`);\n        fetchLoans();\n      } catch (error) {\n        console.error(\"Error deleting loan:\", error);\n      }\n    }\n  };\n  const handleUpdateClient = async () => {\n    try {\n      await axios.put(`http://localhost:5000/api/clients/${editClient._id}`, editClient);\n      fetchClients();\n      setEditClient(null);\n    } catch (error) {\n      console.error(\"Error updating client:\", error);\n    }\n  };\n  const handleUpdateLoan = async () => {\n    try {\n      await axios.put(`http://localhost:5000/api/loans/${editLoan._id}`, editLoan);\n      fetchLoans();\n      setEditLoan(null);\n    } catch (error) {\n      console.error(\"Error updating loan:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Buscar Cliente\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Buscar por nombre o c\\xE9dula\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Buscar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Resultados de la B\\xFAsqueda\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-striped\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Nombre\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Correo Electr\\xF3nico\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Tel\\xE9fono\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"C\\xE9dula\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Direcci\\xF3n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Acciones\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: clients.map(client => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: client.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: client.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: client.phone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: client.idNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: client.address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-warning mr-2\",\n              onClick: () => handleEditClient(client),\n              children: \"Editar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-danger\",\n              onClick: () => handleDeleteClient(client._id),\n              children: \"Eliminar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this)]\n        }, client._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), editClient && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Editar Cliente\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          e.preventDefault();\n          handleUpdateClient();\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Nombre\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            value: editClient.name,\n            onChange: e => setEditClient({\n              ...editClient,\n              name: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Correo Electr\\xF3nico\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            className: \"form-control\",\n            value: editClient.email,\n            onChange: e => setEditClient({\n              ...editClient,\n              email: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Tel\\xE9fono\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            value: editClient.phone,\n            onChange: e => setEditClient({\n              ...editClient,\n              phone: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"C\\xE9dula\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            value: editClient.idNumber,\n            onChange: e => setEditClient({\n              ...editClient,\n              idNumber: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Direcci\\xF3n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            value: editClient.address,\n            onChange: e => setEditClient({\n              ...editClient,\n              address: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-success\",\n          children: \"Actualizar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-secondary ml-2\",\n          onClick: () => setEditClient(null),\n          children: \"Cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Pr\\xE9stamos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-info mb-2\",\n      onClick: fetchLoans,\n      children: \"Cargar Pr\\xE9stamos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-striped\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Cliente\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Monto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Tasa de Inter\\xE9s\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Plazo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Frecuencia\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Estado\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Fecha de Vencimiento\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Acciones\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: loans.map(loan => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: loan.clientId.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: loan.amount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: loan.interestRate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: loan.term\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: loan.frequency\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: loan.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: new Date(loan.dueDate).toLocaleDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-warning mr-2\",\n              onClick: () => handleEditLoan(loan),\n              children: \"Editar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-danger\",\n              onClick: () => handleDeleteLoan(loan._id),\n              children: \"Eliminar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this)]\n        }, loan._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), editLoan && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Editar Pr\\xE9stamo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          e.preventDefault();\n          handleUpdateLoan();\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"ID del Cliente\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            value: editLoan.clientId,\n            onChange: e => setEditLoan({\n              ...editLoan,\n              clientId: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Monto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            className: \"form-control\",\n            value: editLoan.amount,\n            onChange: e => setEditLoan({\n              ...editLoan,\n              amount: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Tasa de Inter\\xE9s\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            className: \"form-control\",\n            value: editLoan.interestRate,\n            onChange: e => setEditLoan({\n              ...editLoan,\n              interestRate: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Plazo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            className: \"form-control\",\n            value: editLoan.term,\n            onChange: e => setEditLoan({\n              ...editLoan,\n              term: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Frecuencia\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            value: editLoan.frequency,\n            onChange: e => setEditLoan({\n              ...editLoan,\n              frequency: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Estado\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            value: editLoan.status,\n            onChange: e => setEditLoan({\n              ...editLoan,\n              status: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Fecha de Vencimiento\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            className: \"form-control\",\n            value: new Date(editLoan.dueDate).toISOString().split('T')[0],\n            onChange: e => setEditLoan({\n              ...editLoan,\n              dueDate: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-success\",\n          children: \"Actualizar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-secondary ml-2\",\n          onClick: () => setEditLoan(null),\n          children: \"Cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Pagos Recientes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-striped\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Cliente\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Monto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Fecha\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: recentPayments.map(payment => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: payment.clientId.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: payment.amount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: new Date(payment.date).toLocaleDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 15\n          }, this)]\n        }, payment._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"6msDt70T6SPqNvmC1nrgdoAm7RM=\");\n_c = Dashboard;\nexport default Dashboard;\n\n/*import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nconst Dashboard = () => {\r\n  const [summary, setSummary] = useState({});\r\n  const [recentPayments, setRecentPayments] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [editClient, setEditClient] = useState(null);\r\n  const [clientForm, setClientForm] = useState({ name: '', email: '', phone: '', idNumber: '', address: '' });\r\n  const [loans, setLoans] = useState([]);\r\n  const [editLoan, setEditLoan] = useState(null);\r\n  const [loanForm, setLoanForm] = useState({ clientId: '', amount: '', interestRate: '', term: '', frequency: '', status: '', dueDate: '' });\r\n\r\n  useEffect(() => {\r\n    const fetchSummary = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/api/reports/summary\");\r\n        setSummary(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching summary:\", error);\r\n      }\r\n    };\r\n\r\n    const fetchRecentPayments = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/api/reports/recent-payments\");\r\n        setRecentPayments(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching recent payments:\", error);\r\n      }\r\n    };\r\n\r\n    fetchSummary();\r\n    fetchRecentPayments();\r\n    fetchLoans();\r\n  }, []);\r\n\r\n  const fetchLoans = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5000/api/loans\");\r\n      const loansWithClientNames = await Promise.all(\r\n        response.data.map(async loan => {\r\n          const clientResponse = await axios.get(`http://localhost:5000/api/clientes/${loan.clientId}`);\r\n          return { ...loan, clientName: clientResponse.data.name };\r\n        })\r\n      );\r\n      setLoans(loansWithClientNames);\r\n    } catch (error) {\r\n      console.error(\"Error fetching loans:\", error);\r\n    }\r\n  };\r\n\r\n  const handleSearch = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.get(`http://localhost:5000/api/clientes/search?query=${searchQuery}`);\r\n      setSearchResults(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching search results:\", error);\r\n    }\r\n  };\r\n\r\n  const handleEdit = (client) => {\r\n    setEditClient(client._id);\r\n    setClientForm({ name: client.name, email: client.email, phone: client.phone, idNumber: client.idNumber, address: client.address });\r\n  };\r\n\r\n  const handleUpdate = async () => {\r\n    try {\r\n      await axios.put(`http://localhost:5000/api/clientes/update/${editClient}`, clientForm);\r\n      setEditClient(null);\r\n      setClientForm({ name: '', email: '', phone: '', idNumber: '', address: '' });\r\n      handleSearch({ preventDefault: () => { } });\r\n    } catch (error) {\r\n      console.error(\"Error updating client:\", error);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (clientId) => {\r\n    if (window.confirm(\"¿Estás seguro de que deseas eliminar este cliente?\")) {\r\n      try {\r\n        await axios.delete(`http://localhost:5000/api/clientes/delete/${clientId}`);\r\n        handleSearch({ preventDefault: () => { } });\r\n      } catch (error) {\r\n        console.error(\"Error deleting client:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleEditLoan = (loan) => {\r\n    setEditLoan(loan._id);\r\n    setLoanForm({\r\n      clientId: loan.clientId,\r\n      amount: loan.amount,\r\n      interestRate: loan.interestRate,\r\n      term: loan.term,\r\n      frequency: loan.frequency,\r\n      status: loan.status,\r\n      dueDate: new Date(loan.dueDate).toISOString().split('T')[0],\r\n    });\r\n  };\r\n\r\n  const handleUpdateLoan = async () => {\r\n    try {\r\n      await axios.put(`http://localhost:5000/api/loans/${editLoan}`, loanForm);\r\n      setEditLoan(null);\r\n      setLoanForm({ clientId: '', amount: '', interestRate: '', term: '', frequency: '', status: '', dueDate: '' });\r\n      fetchLoans();\r\n    } catch (error) {\r\n      console.error(\"Error updating loan:\", error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteLoan = async (loanId) => {\r\n    if (window.confirm(\"¿Estás seguro de que deseas eliminar este préstamo?\")) {\r\n      try {\r\n        await axios.delete(`http://localhost:5000/api/loans/${loanId}`);\r\n        fetchLoans();\r\n      } catch (error) {\r\n        console.error(\"Error deleting loan:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <div className=\"jumbotron text-center\">\r\n        <h1 className=\"display-4\">Dashboard</h1>\r\n        <p className=\"lead\">Resumen de Préstamos y Pagos</p>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card text-white bg-primary mb-3\">\r\n            <div className=\"card-header\">Clientes totales</div>\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title\">{summary.totalClientes || 0}</h5>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card text-white bg-success mb-3\">\r\n            <div className=\"card-header\">Total de Préstamos</div>\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title\">{summary.totalPrestamos || 0}</h5>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card text-white bg-danger mb-3\">\r\n            <div className=\"card-header\">Préstamos en Mora</div>\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title\">{summary.totalMora || 0}</h5>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <h2>Pagos Recientes</h2>\r\n      <table className=\"table table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th>Cliente</th>\r\n            <th>Monto</th>\r\n            <th>Fecha</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {recentPayments.map((payment) => (\r\n            <tr key={payment._id}>\r\n              <td>{payment.client ? payment.client.name : \"Cliente no encontrado\"}</td>\r\n              <td>{payment.amount}</td>\r\n              <td>{payment.date ? new Date(payment.date).toLocaleDateString() : \"Fecha inválida\"}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <h2>Buscar Cliente</h2>\r\n      <form onSubmit={handleSearch}>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Buscar por nombre o cédula\"\r\n            value={searchQuery}\r\n            onChange={(e) => setSearchQuery(e.target.value)}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">Buscar</button>\r\n      </form>\r\n      <h2>Resultados de la Búsqueda</h2>\r\n      <table className=\"table table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th>Nombre</th>\r\n            <th>Correo Electrónico</th>\r\n            <th>Teléfono</th>\r\n            <th>Cédula</th>\r\n            <th>Dirección</th>\r\n            <th>Acciones</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {searchResults.map((cliente) => (\r\n            <tr key={cliente._id}>\r\n              <td>{cliente.name}</td>\r\n              <td>{cliente.email}</td>\r\n              <td>{cliente.phone}</td>\r\n              <td>{cliente.idNumber}</td>\r\n              <td>{cliente.address}</td>\r\n              <td>\r\n                <button className=\"btn btn-warning mr-2\" onClick={() => handleEdit(cliente)}>Editar</button>\r\n                <button className=\"btn btn-danger\" onClick={() => handleDelete(cliente._id)}>Eliminar</button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      {editClient && (\r\n        <div className=\"mt-5\">\r\n          <h2>Editar Cliente</h2>\r\n          <form onSubmit={(e) => { e.preventDefault(); handleUpdate(); }}>\r\n            <div className=\"form-group\">\r\n              <label>Nombre</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={clientForm.name}\r\n                onChange={(e) => setClientForm({ ...clientForm, name: e.target.value })}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Correo Electrónico</label>\r\n              <input\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                value={clientForm.email}\r\n                onChange={(e) => setClientForm({ ...clientForm, email: e.target.value })}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Teléfono</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={clientForm.phone}\r\n                onChange={(e) => setClientForm({ ...clientForm, phone: e.target.value })}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Cédula</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={clientForm.idNumber}\r\n                onChange={(e) => setClientForm({ ...clientForm, idNumber: e.target.value })}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Dirección</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={clientForm.address}\r\n                onChange={(e) => setClientForm({ ...clientForm, address: e.target.value })}\r\n              />\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-success\">Actualizar</button>\r\n            <button type=\"button\" className=\"btn btn-secondary ml-2\" onClick={() => setEditClient(null)}>Cancelar</button>\r\n          </form>\r\n        </div>\r\n      )}\r\n      <h2>Préstamos</h2>\r\n      <button className=\"btn btn-info mb-2\" onClick={fetchLoans}>Cargar Préstamos</button>\r\n      <table className=\"table table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th>Cliente</th>\r\n            <th>Monto</th>\r\n            <th>Tasa de Interés</th>\r\n            <th>Plazo</th>\r\n            <th>Frecuencia</th>\r\n            <th>Estado</th>\r\n            <th>Fecha de Vencimiento</th>\r\n            <th>Acciones</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {loans.map((loan) => (\r\n            <tr key={loan._id}>\r\n              <td>{loan.clientName}</td>\r\n              <td>{loan.amount}</td>\r\n              <td>{loan.interestRate}</td>\r\n              <td>{loan.term}</td>\r\n              <td>{loan.frequency}</td>\r\n              <td>{loan.status}</td>\r\n              <td>{new Date(loan.dueDate).toLocaleDateString()}</td>\r\n              <td>\r\n                <button className=\"btn btn-warning mr-2\" onClick={() => handleEditLoan(loan)}>Editar</button>\r\n                <button className=\"btn btn-danger\" onClick={() => handleDeleteLoan(loan._id)}>Eliminar</button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      {editLoan && (\r\n        <div className=\"mt-5\">\r\n          <h2>Editar Préstamo</h2>\r\n          <form onSubmit={(e) => { e.preventDefault(); handleUpdateLoan(); }}>\r\n            <div className=\"form-group\">\r\n              <label>ID del Cliente</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={loanForm.clientId}\r\n                onChange={(e) => setLoanForm({ ...loanForm, clientId: e.target.value })}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Monto</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                value={loanForm.amount}\r\n                onChange={(e) => setLoanForm({ ...loanForm, amount: e.target.value })}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Tasa de Interés</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                value={loanForm.interestRate}\r\n                onChange={(e) => setLoanForm({ ...loanForm, interestRate: e.target.value })}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Plazo</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                value={loanForm.term}\r\n                onChange={(e) => setLoanForm({ ...loanForm, term: e.target.value })}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Frecuencia</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={loanForm.frequency}\r\n                onChange={(e) => setLoanForm({ ...loanForm, frequency: e.target.value })}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Estado</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={loanForm.status}\r\n                onChange={(e) => setLoanForm({ ...loanForm, status: e.target.value })}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Fecha de Vencimiento</label>\r\n              <input\r\n                type=\"date\"\r\n                className=\"form-control\"\r\n                value={loanForm.dueDate}\r\n                onChange={(e) => setLoanForm({ ...loanForm, dueDate: e.target.value })}\r\n              />\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-success\">Actualizar</button>\r\n            <button type=\"button\" className=\"btn btn-secondary ml-2\" onClick={() => setEditLoan(null)}>Cancelar</button>\r\n          </form>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n*/\n\n/*import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nconst Dashboard = () => {\r\n  const [summary, setSummary] = useState({});\r\n  const [recentPayments, setRecentPayments] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [editClient, setEditClient] = useState(null);\r\n  const [clientForm, setClientForm] = useState({ name: '', email: '', phone: '', idNumber: '', address: '' });\r\n\r\n  const [loans, setLoans] = useState([]);\r\n  const [editLoan, setEditLoan] = useState(null);\r\n  const [loanForm, setLoanForm] = useState({ clientId: '', amount: '', interestRate: '', term: '', frequency: '', status: '', dueDate: '' });\r\n\r\n  useEffect(() => {\r\n    const fetchSummary = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/api/reports/summary\");\r\n        setSummary(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching summary:\", error);\r\n      }\r\n    };\r\n\r\n    const fetchRecentPayments = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/api/reports/recent-payments\");\r\n        setRecentPayments(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching recent payments:\", error);\r\n      }\r\n    };\r\n\r\n    fetchSummary();\r\n    fetchRecentPayments();\r\n    fetchLoans();\r\n  }, []);\r\n\r\n  const fetchLoans = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5000/api/loans\");\r\n      const loansWithClientNames = await Promise.all(\r\n        response.data.map(async loan => {\r\n          const clientResponse = await axios.get(`http://localhost:5000/api/clientes/${loan.clientId}`);\r\n          return { ...loan, clientName: clientResponse.data.name };\r\n        })\r\n      );\r\n      setLoans(loansWithClientNames);\r\n    } catch (error) {\r\n      console.error(\"Error fetching loans:\", error);\r\n    }\r\n  };\r\n\r\n  const handleSearch = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.get(`http://localhost:5000/api/clientes/search?query=${searchQuery}`);\r\n      setSearchResults(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching search results:\", error);\r\n    }\r\n  };\r\n\r\n  const handleEdit = (client) => {\r\n    setEditClient(client._id);\r\n    setClientForm({ name: client.name, email: client.email, phone: client.phone, idNumber: client.idNumber, address: client.address });\r\n  };\r\n\r\n  const handleUpdate = async () => {\r\n    try {\r\n      await axios.put(`http://localhost:5000/api/clientes/update/${editClient}`, clientForm);\r\n      setEditClient(null);\r\n      setClientForm({ name: '', email: '', phone: '', idNumber: '', address: '' });\r\n      handleSearch({ preventDefault: () => { } });\r\n    } catch (error) {\r\n      console.error(\"Error updating client:\", error);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (clientId) => {\r\n    if (window.confirm(\"¿Estás seguro de que deseas eliminar este cliente?\")) {\r\n      try {\r\n        await axios.delete(`http://localhost:5000/api/clientes/delete/${clientId}`);\r\n        handleSearch({ preventDefault: () => { } });\r\n      } catch (error) {\r\n        console.error(\"Error deleting client:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleEditLoan = (loan) => {\r\n    setEditLoan(loan._id);\r\n    setLoanForm({\r\n      clientId: loan.clientId,\r\n      amount: loan.amount,\r\n      interestRate: loan.interestRate,\r\n      term: loan.term,\r\n      frequency: loan.frequency,\r\n      status: loan.status,\r\n      dueDate: new Date(loan.dueDate).toISOString().split('T')[0],\r\n    });\r\n  };\r\n\r\n  const handleUpdateLoan = async () => {\r\n    try {\r\n      await axios.put(`http://localhost:5000/api/loans/${editLoan}`, loanForm);\r\n      setEditLoan(null);\r\n      setLoanForm({ clientId: '', amount: '', interestRate: '', term: '', frequency: '', status: '', dueDate: '' });\r\n      fetchLoans();\r\n    } catch (error) {\r\n      console.error(\"Error updating loan:\", error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteLoan = async (loanId) => {\r\n    if (window.confirm(\"¿Estás seguro de que deseas eliminar este préstamo?\")) {\r\n      try {\r\n        await axios.delete(`http://localhost:5000/api/loans/${loanId}`);\r\n        fetchLoans();\r\n      } catch (error) {\r\n        console.error(\"Error deleting loan:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <div className=\"jumbotron text-center\">\r\n        <h1 className=\"display-4\">Dashboard</h1>\r\n        <p className=\"lead\">Resumen de Préstamos y Pagos</p>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card text-white bg-primary mb-3\">\r\n            <div className=\"card-header\">Clientes totales</div>\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title\">{summary.totalClientes || 0}</h5>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card text-white bg-success mb-3\">\r\n            <div className=\"card-header\">Total de Préstamos</div>\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title\">{summary.totalPrestamos || 0}</h5>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card text-white bg-danger mb-3\">\r\n            <div className=\"card-header\">Préstamos en Mora</div>\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title\">{summary.totalMora || 0}</h5>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <h2>Pagos Recientes</h2>\r\n      <table className=\"table table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th>Cliente</th>\r\n            <th>Monto</th>\r\n            <th>Fecha</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {recentPayments.map((payment) => (\r\n            <tr key={payment._id}>\r\n              <td>{payment.client ? payment.client.name : \"Cliente no encontrado\"}</td>\r\n              <td>{payment.amount}</td>\r\n              <td>{payment.date ? new Date(payment.date).toLocaleDateString() : \"Fecha inválida\"}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <h2>Buscar Cliente</h2>\r\n      <form onSubmit={handleSearch}>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Buscar por nombre o cédula\"\r\n            value={searchQuery}\r\n            onChange={(e) => setSearchQuery(e.target.value)}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">Buscar</button>\r\n      </form>\r\n      <h2>Resultados de la Búsqueda</h2>\r\n      <table className=\"table table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th>Nombre</th>\r\n            <th>Correo Electrónico</th>\r\n            <th>Teléfono</th>\r\n            <th>Cédula</th>\r\n            <th>Dirección</th>\r\n            <th>Acciones</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {searchResults.map((cliente) => (\r\n            <tr key={cliente._id}>\r\n              <td>{cliente.name}</td>\r\n              <td>{cliente.email}</td>\r\n              <td>{cliente.phone}</td>\r\n              <td>{cliente.idNumber}</td>\r\n              <td>{cliente.address}</td>\r\n              <td>\r\n                <button className=\"btn btn-warning mr-2\" onClick={() => handleEdit(cliente)}>Editar</button>\r\n                <button className=\"btn btn-danger\" onClick={() => handleDelete(cliente._id)}>Eliminar</button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      {editClient && (\r\n        <div className=\"mt-5\">\r\n          <h2>Editar Cliente</h2>\r\n          <form onSubmit={(e) => { e.preventDefault(); handleUpdate(); }}>\r\n            <div className=\"form-group\">\r\n              <label>Nombre</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={clientForm.name}\r\n                onChange={(e) => setClientForm({ ...clientForm, name: e.target.value })} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Correo Electrónico</label>\r\n              <input\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                value={clientForm.email}\r\n                onChange={(e) => setClientForm({ ...clientForm, email: e.target.value })} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Teléfono</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={clientForm.phone}\r\n                onChange={(e) => setClientForm({ ...clientForm, phone: e.target.value })} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Cédula</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={clientForm.idNumber}\r\n                onChange={(e) => setClientForm({ ...clientForm, idNumber: e.target.value })} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Dirección</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={clientForm.address}\r\n                onChange={(e) => setClientForm({ ...clientForm, address: e.target.value })} />\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-success\">Actualizar</button>\r\n            <button type=\"button\" className=\"btn btn-secondary ml-2\" onClick={() => setEditClient(null)}>Cancelar</button>\r\n          </form>\r\n        </div>\r\n      )}\r\n      <h2>Préstamos</h2>\r\n      <button className=\"btn btn-info mb-2\" onClick={fetchLoans}>Cargar Préstamos</button>\r\n      <table className=\"table table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th>Cliente</th>\r\n            <th>Monto</th>\r\n            <th>Tasa de Interés</th>\r\n            <th>Plazo</th>\r\n            <th>Frecuencia</th>\r\n            <th>Estado</th>\r\n            <th>Fecha de Vencimiento</th>\r\n            <th>Acciones</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {loans.map((loan) => (\r\n            <tr key={loan._id}>\r\n              <td>{loan.clientName}</td>\r\n              <td>{loan.amount}</td>\r\n              <td>{loan.interestRate}</td>\r\n              <td>{loan.term}</td>\r\n              <td>{loan.frequency}</td>\r\n              <td>{loan.status}</td>\r\n              <td>{new Date(loan.dueDate).toLocaleDateString()}</td>\r\n              <td>\r\n                <button className=\"btn btn-warning mr-2\" onClick={() => handleEditLoan(loan)}>Editar</button>\r\n                <button className=\"btn btn-danger\" onClick={() => handleDeleteLoan(loan._id)}>Eliminar</button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      {editLoan && (\r\n        <div className=\"mt-5\">\r\n          <h2>Editar Préstamo</h2>\r\n          <form onSubmit={(e) => { e.preventDefault(); handleUpdateLoan(); }}>\r\n            <div className=\"form-group\">\r\n              <label>ID del Cliente</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={loanForm.clientId}\r\n                onChange={(e) => setLoanForm({ ...loanForm, clientId: e.target.value })} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Monto</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                value={loanForm.amount}\r\n                onChange={(e) => setLoanForm({ ...loanForm, amount: e.target.value })} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Tasa de Interés</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                value={loanForm.interestRate}\r\n                onChange={(e) => setLoanForm({ ...loanForm, interestRate: e.target.value })} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Plazo</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                value={loanForm.term}\r\n                onChange={(e) => setLoanForm({ ...loanForm, term: e.target.value })} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Frecuencia</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={loanForm.frequency}\r\n                onChange={(e) => setLoanForm({ ...loanForm, frequency: e.target.value })} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Estado</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={loanForm.status}\r\n                onChange={(e) => setLoanForm({ ...loanForm, status: e.target.value })} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Fecha de Vencimiento</label>\r\n              <input\r\n                type=\"date\"\r\n                className=\"form-control\"\r\n                value={loanForm.dueDate}\r\n                onChange={(e) => setLoanForm({ ...loanForm, dueDate: e.target.value })} />\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-success\">Actualizar</button>\r\n            <button type=\"button\" className=\"btn btn-secondary ml-2\" onClick={() => setEditLoan(null)}>Cancelar</button>\r\n          </form>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard; \r\n*/\n//**************************************************************************************\n\n/*\r\n// Dashboard.js\r\nimport axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nconst Dashboard = () => {\r\n  const [summary, setSummary] = useState({});\r\n  const [recentPayments, setRecentPayments] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [editClient, setEditClient] = useState(null);\r\n  const [clientForm, setClientForm] = useState({ name: '', email: '', phone: '', idNumber: '', address: '' });\r\n\r\n  const [loans, setLoans] = useState([]);\r\n  const [editLoan, setEditLoan] = useState(null);\r\n  const [loanForm, setLoanForm] = useState({ clientId: '', amount: '', interestRate: '', term: '', frequency: '', status: '', dueDate: '' });\r\n\r\n  useEffect(() => {\r\n    const fetchSummary = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/api/reports/summary\");\r\n        setSummary(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching summary:\", error);\r\n      }\r\n    };\r\n\r\n    const fetchRecentPayments = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/api/reports/recent-payments\");\r\n        setRecentPayments(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching recent payments:\", error);\r\n      }\r\n    };\r\n\r\n    fetchSummary();\r\n    fetchRecentPayments();\r\n  }, []);\r\n\r\n  const handleSearch = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.get(`http://localhost:5000/api/clientes/search?query=${searchQuery}`);\r\n      setSearchResults(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching search results:\", error);\r\n    }\r\n  };\r\n\r\n  const handleEdit = (client) => {\r\n    setEditClient(client._id);\r\n    setClientForm({ name: client.name, email: client.email, phone: client.phone, idNumber: client.idNumber, address: client.address });\r\n  };\r\n\r\n  const handleUpdate = async () => {\r\n    try {\r\n      await axios.put(`http://localhost:5000/api/clientes/update/${editClient}`, clientForm);\r\n      setEditClient(null);\r\n      setClientForm({ name: '', email: '', phone: '', idNumber: '', address: '' });\r\n      handleSearch({ preventDefault: () => { } });\r\n    } catch (error) {\r\n      console.error(\"Error updating client:\", error);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (clientId) => {\r\n    if (window.confirm(\"¿Estás seguro de que deseas eliminar este cliente?\")) {\r\n      try {\r\n        await axios.delete(`http://localhost:5000/api/clientes/delete/${clientId}`);\r\n        handleSearch({ preventDefault: () => { } });\r\n      } catch (error) {\r\n        console.error(\"Error deleting client:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const fetchLoans = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5000/api/loans\");\r\n      setLoans(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching loans:\", error);\r\n    }\r\n  };\r\n\r\n  const handleEditLoan = (loan) => {\r\n    setEditLoan(loan._id);\r\n    setLoanForm({\r\n      clientId: loan.clientId,\r\n      amount: loan.amount,\r\n      interestRate: loan.interestRate,\r\n      term: loan.term,\r\n      frequency: loan.frequency,\r\n      status: loan.status,\r\n      dueDate: new Date(loan.dueDate).toISOString().split('T')[0],\r\n    });\r\n  };\r\n\r\n  const handleUpdateLoan = async () => {\r\n    try {\r\n      await axios.put(`http://localhost:5000/api/loans/update/${editLoan}`, loanForm);\r\n      setEditLoan(null);\r\n      setLoanForm({ clientId: '', amount: '', interestRate: '', term: '', frequency: '', status: '', dueDate: '' });\r\n      fetchLoans();\r\n    } catch (error) {\r\n      console.error(\"Error updating loan:\", error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteLoan = async (loanId) => {\r\n    if (window.confirm(\"¿Estás seguro de que deseas eliminar este préstamo?\")) {\r\n      try {\r\n        await axios.delete(`http://localhost:5000/api/loans/delete/${loanId}`);\r\n        fetchLoans();\r\n      } catch (error) {\r\n        console.error(\"Error deleting loan:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <div className=\"jumbotron text-center\">\r\n        <h1 className=\"display-4\">Dashboard</h1>\r\n        <p className=\"lead\">Resumen de Préstamos y Pagos</p>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card text-white bg-primary mb-3\">\r\n            <div className=\"card-header\">Clientes totales</div>\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title\">{summary.totalClientes || 0}</h5>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card text-white bg-success mb-3\">\r\n            <div className=\"card-header\">Total de Préstamos</div>\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title\">{summary.totalPrestamos || 0}</h5>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card text-white bg-danger mb-3\">\r\n            <div className=\"card-header\">Préstamos en Mora</div>\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title\">{summary.totalMora || 0}</h5>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <h2>Pagos Recientes</h2>\r\n      <table className=\"table table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th>Cliente</th>\r\n            <th>Monto</th>\r\n            <th>Fecha</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {recentPayments.map((payment) => (\r\n            <tr key={payment._id}>\r\n              <td>{payment.client ? payment.client.name : \"Cliente no encontrado\"}</td>\r\n              <td>{payment.amount}</td>\r\n              <td>{payment.date ? new Date(payment.date).toLocaleDateString() : \"Fecha inválida\"}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <h2>Buscar Cliente</h2>\r\n      <form onSubmit={handleSearch}>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Buscar por nombre o cédula\"\r\n            value={searchQuery}\r\n            onChange={(e) => setSearchQuery(e.target.value)}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">Buscar</button>\r\n      </form>\r\n      <h2>Resultados de la Búsqueda</h2>\r\n      <table className=\"table table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th>Nombre</th>\r\n            <th>Correo Electrónico</th>\r\n            <th>Teléfono</th>\r\n            <th>Cédula</th>\r\n            <th>Dirección</th>\r\n            <th>Acciones</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {searchResults.map((cliente) => (\r\n            <tr key={cliente._id}>\r\n              <td>{cliente.name}</td>\r\n              <td>{cliente.email}</td>\r\n              <td>{cliente.phone}</td>\r\n              <td>{cliente.idNumber}</td>\r\n              <td>{cliente.address}</td>\r\n              <td>\r\n                <button className=\"btn btn-warning mr-2\" onClick={() => handleEdit(cliente)}>Editar</button>\r\n                <button className=\"btn btn-danger\" onClick={() => handleDelete(cliente._id)}>Eliminar</button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      {editClient && (\r\n        <div className=\"mt-5\">\r\n          <h2>Editar Cliente</h2>\r\n          <form onSubmit={(e) => { e.preventDefault(); handleUpdate(); }}>\r\n            <div className=\"form-group\">\r\n              <label>Nombre</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={clientForm.name}\r\n                onChange={(e) => setClientForm({ ...clientForm, name: e.target.value })}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Correo Electrónico</label>\r\n              <input\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                value={clientForm.email}\r\n                onChange={(e) => setClientForm({ ...clientForm, email: e.target.value })}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Teléfono</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={clientForm.phone}\r\n                onChange={(e) => setClientForm({ ...clientForm, phone: e.target.value })}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Cédula</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={clientForm.idNumber}\r\n                onChange={(e) => setClientForm({ ...clientForm, idNumber: e.target.value })}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Dirección</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={clientForm.address}\r\n                onChange={(e) => setClientForm({ ...clientForm, address: e.target.value })}\r\n              />\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-success\">Actualizar</button>\r\n            <button type=\"button\" className=\"btn btn-secondary ml-2\" onClick={() => setEditClient(null)}>Cancelar</button>\r\n          </form>\r\n        </div>\r\n      )}\r\n      <h2>Préstamos</h2>\r\n      <button className=\"btn btn-info mb-2\" onClick={fetchLoans}>Cargar Préstamos</button>\r\n      <table className=\"table table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th>Cliente</th>\r\n            <th>Monto</th>\r\n            <th>Tasa de Interés</th>\r\n            <th>Plazo</th>\r\n            <th>Frecuencia</th>\r\n            <th>Estado</th>\r\n            <th>Fecha de Vencimiento</th>\r\n            <th>Acciones</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {loans.map((loan) => (\r\n            <tr key={loan._id}>\r\n              <td>{loan.clientId}</td>\r\n              <td>{loan.amount}</td>\r\n              <td>{loan.interestRate}</td>\r\n              <td>{loan.term}</td>\r\n              <td>{loan.frequency}</td>\r\n              <td>{loan.status}</td>\r\n              <td>{new Date(loan.dueDate).toLocaleDateString()}</td>\r\n              <td>\r\n                <button className=\"btn btn-warning mr-2\" onClick={() => handleEditLoan(loan)}>Editar</button>\r\n                <button className=\"btn btn-danger\" onClick={() => handleDeleteLoan(loan._id)}>Eliminar</button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      {editLoan && (\r\n        <div className=\"mt-5\">\r\n          <h2>Editar Préstamo</h2>\r\n          <form onSubmit={(e) => { e.preventDefault(); handleUpdateLoan(); }}>\r\n            <div className=\"form-group\">\r\n              <label>ID del Cliente</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={loanForm.clientId}\r\n                onChange={(e) => setLoanForm({ ...loanForm, clientId: e.target.value })}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Monto</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                value={loanForm.amount}\r\n                onChange={(e) => setLoanForm({ ...loanForm, amount: e.target.value })}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Tasa de Interés</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                value={loanForm.interestRate}\r\n                onChange={(e) => setLoanForm({ ...loanForm, interestRate: e.target.value })}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Plazo</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                value={loanForm.term}\r\n                onChange={(e) => setLoanForm({ ...loanForm, term: e.target.value })}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Frecuencia</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={loanForm.frequency}\r\n                onChange={(e) => setLoanForm({ ...loanForm, frequency: e.target.value })}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Estado</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={loanForm.status}\r\n                onChange={(e) => setLoanForm({ ...loanForm, status: e.target.value })}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Fecha de Vencimiento</label>\r\n              <input\r\n                type=\"date\"\r\n                className=\"form-control\"\r\n                value={loanForm.dueDate}\r\n                onChange={(e) => setLoanForm({ ...loanForm, dueDate: e.target.value })}\r\n              />\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-success\">Actualizar</button>\r\n            <button type=\"button\" className=\"btn btn-secondary ml-2\" onClick={() => setEditLoan(null)}>Cancelar</button>\r\n          </form>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n*/\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Dashboard","_s","clients","setClients","loans","setLoans","recentPayments","setRecentPayments","editClient","setEditClient","editLoan","setEditLoan","fetchClients","fetchLoans","fetchRecentPayments","response","get","data","error","console","handleEditClient","client","handleEditLoan","loan","handleDeleteLoan","loanId","window","confirm","delete","handleUpdateClient","put","_id","handleUpdateLoan","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","className","map","name","email","phone","idNumber","address","onClick","handleDeleteClient","onSubmit","e","preventDefault","value","onChange","target","clientId","amount","interestRate","term","frequency","status","Date","dueDate","toLocaleDateString","toISOString","split","payment","date","_c","$RefreshReg$"],"sources":["D:/Usuario/wilme/Escritorio/Gestion_Loans_Clean/loan-app-ui/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Dashboard = () => {\r\n  const [clients, setClients] = useState([]);\r\n  const [loans, setLoans] = useState([]);\r\n  const [recentPayments, setRecentPayments] = useState([]);\r\n  const [editClient, setEditClient] = useState(null);\r\n  const [editLoan, setEditLoan] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchClients();\r\n    fetchLoans();\r\n    fetchRecentPayments();\r\n  }, []);\r\n\r\n  const fetchClients = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/api/clients');\r\n      setClients(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching clients:\", error);\r\n    }\r\n  };\r\n\r\n  const fetchLoans = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/api/loans');\r\n      setLoans(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching loans:\", error);\r\n    }\r\n  };\r\n\r\n  const fetchRecentPayments = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/api/payments/recent');\r\n      setRecentPayments(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching recent payments:\", error);\r\n    }\r\n  };\r\n\r\n  const handleEditClient = (client) => {\r\n    setEditClient(client);\r\n  };\r\n\r\n  const handleEditLoan = (loan) => {\r\n    setEditLoan(loan);\r\n  };\r\n\r\n  const handleDeleteLoan = async (loanId) => {\r\n    if (window.confirm(\"¿Estás seguro de que deseas eliminar este préstamo?\")) {\r\n      try {\r\n        await axios.delete(`http://localhost:5000/api/loans/${loanId}`);\r\n        fetchLoans();\r\n      } catch (error) {\r\n        console.error(\"Error deleting loan:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleUpdateClient = async () => {\r\n    try {\r\n      await axios.put(`http://localhost:5000/api/clients/${editClient._id}`, editClient);\r\n      fetchClients();\r\n      setEditClient(null);\r\n    } catch (error) {\r\n      console.error(\"Error updating client:\", error);\r\n    }\r\n  };\r\n\r\n  const handleUpdateLoan = async () => {\r\n    try {\r\n      await axios.put(`http://localhost:5000/api/loans/${editLoan._id}`, editLoan);\r\n      fetchLoans();\r\n      setEditLoan(null);\r\n    } catch (error) {\r\n      console.error(\"Error updating loan:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Buscar Cliente</h2>\r\n      <input type=\"text\" placeholder=\"Buscar por nombre o cédula\" />\r\n      <button>Buscar</button>\r\n\r\n      <h2>Resultados de la Búsqueda</h2>\r\n      <table className=\"table table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th>Nombre</th>\r\n            <th>Correo Electrónico</th>\r\n            <th>Teléfono</th>\r\n            <th>Cédula</th>\r\n            <th>Dirección</th>\r\n            <th>Acciones</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {clients.map((client) => (\r\n            <tr key={client._id}>\r\n              <td>{client.name}</td>\r\n              <td>{client.email}</td>\r\n              <td>{client.phone}</td>\r\n              <td>{client.idNumber}</td>\r\n              <td>{client.address}</td>\r\n              <td>\r\n                <button className=\"btn btn-warning mr-2\" onClick={() => handleEditClient(client)}>Editar</button>\r\n                <button className=\"btn btn-danger\" onClick={() => handleDeleteClient(client._id)}>Eliminar</button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n\r\n      {editClient && (\r\n        <div className=\"mt-5\">\r\n          <h2>Editar Cliente</h2>\r\n          <form onSubmit={(e) => { e.preventDefault(); handleUpdateClient(); }}>\r\n            <div className=\"form-group\">\r\n              <label>Nombre</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={editClient.name}\r\n                onChange={(e) => setEditClient({ ...editClient, name: e.target.value })} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Correo Electrónico</label>\r\n              <input\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                value={editClient.email}\r\n                onChange={(e) => setEditClient({ ...editClient, email: e.target.value })} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Teléfono</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={editClient.phone}\r\n                onChange={(e) => setEditClient({ ...editClient, phone: e.target.value })} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Cédula</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={editClient.idNumber}\r\n                onChange={(e) => setEditClient({ ...editClient, idNumber: e.target.value })} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Dirección</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={editClient.address}\r\n                onChange={(e) => setEditClient({ ...editClient, address: e.target.value })} />\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-success\">Actualizar</button>\r\n            <button type=\"button\" className=\"btn btn-secondary ml-2\" onClick={() => setEditClient(null)}>Cancelar</button>\r\n          </form>\r\n        </div>\r\n      )}\r\n\r\n      <h2>Préstamos</h2>\r\n      <button className=\"btn btn-info mb-2\" onClick={fetchLoans}>Cargar Préstamos</button>\r\n      <table className=\"table table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th>Cliente</th>\r\n            <th>Monto</th>\r\n            <th>Tasa de Interés</th>\r\n            <th>Plazo</th>\r\n            <th>Frecuencia</th>\r\n            <th>Estado</th>\r\n            <th>Fecha de Vencimiento</th>\r\n            <th>Acciones</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {loans.map((loan) => (\r\n            <tr key={loan._id}>\r\n              <td>{loan.clientId.name}</td>\r\n              <td>{loan.amount}</td>\r\n              <td>{loan.interestRate}</td>\r\n              <td>{loan.term}</td>\r\n              <td>{loan.frequency}</td>\r\n              <td>{loan.status}</td>\r\n              <td>{new Date(loan.dueDate).toLocaleDateString()}</td>\r\n              <td>\r\n                <button className=\"btn btn-warning mr-2\" onClick={() => handleEditLoan(loan)}>Editar</button>\r\n                <button className=\"btn btn-danger\" onClick={() => handleDeleteLoan(loan._id)}>Eliminar</button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n\r\n      {editLoan && (\r\n        <div className=\"mt-5\">\r\n          <h2>Editar Préstamo</h2>\r\n          <form onSubmit={(e) => { e.preventDefault(); handleUpdateLoan(); }}>\r\n            <div className=\"form-group\">\r\n              <label>ID del Cliente</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={editLoan.clientId}\r\n                onChange={(e) => setEditLoan({ ...editLoan, clientId: e.target.value })} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Monto</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                value={editLoan.amount}\r\n                onChange={(e) => setEditLoan({ ...editLoan, amount: e.target.value })} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Tasa de Interés</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                value={editLoan.interestRate}\r\n                onChange={(e) => setEditLoan({ ...editLoan, interestRate: e.target.value })} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Plazo</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                value={editLoan.term}\r\n                onChange={(e) => setEditLoan({ ...editLoan, term: e.target.value })} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Frecuencia</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={editLoan.frequency}\r\n                onChange={(e) => setEditLoan({ ...editLoan, frequency: e.target.value })} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Estado</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={editLoan.status}\r\n                onChange={(e) => setEditLoan({ ...editLoan, status: e.target.value })} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Fecha de Vencimiento</label>\r\n              <input\r\n                type=\"date\"\r\n                className=\"form-control\"\r\n                value={new Date(editLoan.dueDate).toISOString().split('T')[0]}\r\n                onChange={(e) => setEditLoan({ ...editLoan, dueDate: e.target.value })} />\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-success\">Actualizar</button>\r\n            <button type=\"button\" className=\"btn btn-secondary ml-2\" onClick={() => setEditLoan(null)}>Cancelar</button>\r\n          </form>\r\n        </div>\r\n      )}\r\n\r\n      <h2>Pagos Recientes</h2>\r\n      <table className=\"table table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th>Cliente</th>\r\n            <th>Monto</th>\r\n            <th>Fecha</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {recentPayments.map((payment) => (\r\n            <tr key={payment._id}>\r\n              <td>{payment.clientId.name}</td>\r\n              <td>{payment.amount}</td>\r\n              <td>{new Date(payment.date).toLocaleDateString()}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n\r\n\r\n\r\n\r\n/*import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nconst Dashboard = () => {\r\n  const [summary, setSummary] = useState({});\r\n  const [recentPayments, setRecentPayments] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [editClient, setEditClient] = useState(null);\r\n  const [clientForm, setClientForm] = useState({ name: '', email: '', phone: '', idNumber: '', address: '' });\r\n  const [loans, setLoans] = useState([]);\r\n  const [editLoan, setEditLoan] = useState(null);\r\n  const [loanForm, setLoanForm] = useState({ clientId: '', amount: '', interestRate: '', term: '', frequency: '', status: '', dueDate: '' });\r\n\r\n  useEffect(() => {\r\n    const fetchSummary = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/api/reports/summary\");\r\n        setSummary(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching summary:\", error);\r\n      }\r\n    };\r\n\r\n    const fetchRecentPayments = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/api/reports/recent-payments\");\r\n        setRecentPayments(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching recent payments:\", error);\r\n      }\r\n    };\r\n\r\n    fetchSummary();\r\n    fetchRecentPayments();\r\n    fetchLoans();\r\n  }, []);\r\n\r\n  const fetchLoans = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5000/api/loans\");\r\n      const loansWithClientNames = await Promise.all(\r\n        response.data.map(async loan => {\r\n          const clientResponse = await axios.get(`http://localhost:5000/api/clientes/${loan.clientId}`);\r\n          return { ...loan, clientName: clientResponse.data.name };\r\n        })\r\n      );\r\n      setLoans(loansWithClientNames);\r\n    } catch (error) {\r\n      console.error(\"Error fetching loans:\", error);\r\n    }\r\n  };\r\n\r\n  const handleSearch = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.get(`http://localhost:5000/api/clientes/search?query=${searchQuery}`);\r\n      setSearchResults(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching search results:\", error);\r\n    }\r\n  };\r\n\r\n  const handleEdit = (client) => {\r\n    setEditClient(client._id);\r\n    setClientForm({ name: client.name, email: client.email, phone: client.phone, idNumber: client.idNumber, address: client.address });\r\n  };\r\n\r\n  const handleUpdate = async () => {\r\n    try {\r\n      await axios.put(`http://localhost:5000/api/clientes/update/${editClient}`, clientForm);\r\n      setEditClient(null);\r\n      setClientForm({ name: '', email: '', phone: '', idNumber: '', address: '' });\r\n      handleSearch({ preventDefault: () => { } });\r\n    } catch (error) {\r\n      console.error(\"Error updating client:\", error);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (clientId) => {\r\n    if (window.confirm(\"¿Estás seguro de que deseas eliminar este cliente?\")) {\r\n      try {\r\n        await axios.delete(`http://localhost:5000/api/clientes/delete/${clientId}`);\r\n        handleSearch({ preventDefault: () => { } });\r\n      } catch (error) {\r\n        console.error(\"Error deleting client:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleEditLoan = (loan) => {\r\n    setEditLoan(loan._id);\r\n    setLoanForm({\r\n      clientId: loan.clientId,\r\n      amount: loan.amount,\r\n      interestRate: loan.interestRate,\r\n      term: loan.term,\r\n      frequency: loan.frequency,\r\n      status: loan.status,\r\n      dueDate: new Date(loan.dueDate).toISOString().split('T')[0],\r\n    });\r\n  };\r\n\r\n  const handleUpdateLoan = async () => {\r\n    try {\r\n      await axios.put(`http://localhost:5000/api/loans/${editLoan}`, loanForm);\r\n      setEditLoan(null);\r\n      setLoanForm({ clientId: '', amount: '', interestRate: '', term: '', frequency: '', status: '', dueDate: '' });\r\n      fetchLoans();\r\n    } catch (error) {\r\n      console.error(\"Error updating loan:\", error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteLoan = async (loanId) => {\r\n    if (window.confirm(\"¿Estás seguro de que deseas eliminar este préstamo?\")) {\r\n      try {\r\n        await axios.delete(`http://localhost:5000/api/loans/${loanId}`);\r\n        fetchLoans();\r\n      } catch (error) {\r\n        console.error(\"Error deleting loan:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <div className=\"jumbotron text-center\">\r\n        <h1 className=\"display-4\">Dashboard</h1>\r\n        <p className=\"lead\">Resumen de Préstamos y Pagos</p>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card text-white bg-primary mb-3\">\r\n            <div className=\"card-header\">Clientes totales</div>\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title\">{summary.totalClientes || 0}</h5>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card text-white bg-success mb-3\">\r\n            <div className=\"card-header\">Total de Préstamos</div>\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title\">{summary.totalPrestamos || 0}</h5>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card text-white bg-danger mb-3\">\r\n            <div className=\"card-header\">Préstamos en Mora</div>\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title\">{summary.totalMora || 0}</h5>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <h2>Pagos Recientes</h2>\r\n      <table className=\"table table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th>Cliente</th>\r\n            <th>Monto</th>\r\n            <th>Fecha</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {recentPayments.map((payment) => (\r\n            <tr key={payment._id}>\r\n              <td>{payment.client ? payment.client.name : \"Cliente no encontrado\"}</td>\r\n              <td>{payment.amount}</td>\r\n              <td>{payment.date ? new Date(payment.date).toLocaleDateString() : \"Fecha inválida\"}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <h2>Buscar Cliente</h2>\r\n      <form onSubmit={handleSearch}>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Buscar por nombre o cédula\"\r\n            value={searchQuery}\r\n            onChange={(e) => setSearchQuery(e.target.value)}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">Buscar</button>\r\n      </form>\r\n      <h2>Resultados de la Búsqueda</h2>\r\n      <table className=\"table table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th>Nombre</th>\r\n            <th>Correo Electrónico</th>\r\n            <th>Teléfono</th>\r\n            <th>Cédula</th>\r\n            <th>Dirección</th>\r\n            <th>Acciones</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {searchResults.map((cliente) => (\r\n            <tr key={cliente._id}>\r\n              <td>{cliente.name}</td>\r\n              <td>{cliente.email}</td>\r\n              <td>{cliente.phone}</td>\r\n              <td>{cliente.idNumber}</td>\r\n              <td>{cliente.address}</td>\r\n              <td>\r\n                <button className=\"btn btn-warning mr-2\" onClick={() => handleEdit(cliente)}>Editar</button>\r\n                <button className=\"btn btn-danger\" onClick={() => handleDelete(cliente._id)}>Eliminar</button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      {editClient && (\r\n        <div className=\"mt-5\">\r\n          <h2>Editar Cliente</h2>\r\n          <form onSubmit={(e) => { e.preventDefault(); handleUpdate(); }}>\r\n            <div className=\"form-group\">\r\n              <label>Nombre</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={clientForm.name}\r\n                onChange={(e) => setClientForm({ ...clientForm, name: e.target.value })}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Correo Electrónico</label>\r\n              <input\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                value={clientForm.email}\r\n                onChange={(e) => setClientForm({ ...clientForm, email: e.target.value })}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Teléfono</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={clientForm.phone}\r\n                onChange={(e) => setClientForm({ ...clientForm, phone: e.target.value })}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Cédula</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={clientForm.idNumber}\r\n                onChange={(e) => setClientForm({ ...clientForm, idNumber: e.target.value })}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Dirección</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={clientForm.address}\r\n                onChange={(e) => setClientForm({ ...clientForm, address: e.target.value })}\r\n              />\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-success\">Actualizar</button>\r\n            <button type=\"button\" className=\"btn btn-secondary ml-2\" onClick={() => setEditClient(null)}>Cancelar</button>\r\n          </form>\r\n        </div>\r\n      )}\r\n      <h2>Préstamos</h2>\r\n      <button className=\"btn btn-info mb-2\" onClick={fetchLoans}>Cargar Préstamos</button>\r\n      <table className=\"table table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th>Cliente</th>\r\n            <th>Monto</th>\r\n            <th>Tasa de Interés</th>\r\n            <th>Plazo</th>\r\n            <th>Frecuencia</th>\r\n            <th>Estado</th>\r\n            <th>Fecha de Vencimiento</th>\r\n            <th>Acciones</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {loans.map((loan) => (\r\n            <tr key={loan._id}>\r\n              <td>{loan.clientName}</td>\r\n              <td>{loan.amount}</td>\r\n              <td>{loan.interestRate}</td>\r\n              <td>{loan.term}</td>\r\n              <td>{loan.frequency}</td>\r\n              <td>{loan.status}</td>\r\n              <td>{new Date(loan.dueDate).toLocaleDateString()}</td>\r\n              <td>\r\n                <button className=\"btn btn-warning mr-2\" onClick={() => handleEditLoan(loan)}>Editar</button>\r\n                <button className=\"btn btn-danger\" onClick={() => handleDeleteLoan(loan._id)}>Eliminar</button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      {editLoan && (\r\n        <div className=\"mt-5\">\r\n          <h2>Editar Préstamo</h2>\r\n          <form onSubmit={(e) => { e.preventDefault(); handleUpdateLoan(); }}>\r\n            <div className=\"form-group\">\r\n              <label>ID del Cliente</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={loanForm.clientId}\r\n                onChange={(e) => setLoanForm({ ...loanForm, clientId: e.target.value })}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Monto</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                value={loanForm.amount}\r\n                onChange={(e) => setLoanForm({ ...loanForm, amount: e.target.value })}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Tasa de Interés</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                value={loanForm.interestRate}\r\n                onChange={(e) => setLoanForm({ ...loanForm, interestRate: e.target.value })}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Plazo</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                value={loanForm.term}\r\n                onChange={(e) => setLoanForm({ ...loanForm, term: e.target.value })}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Frecuencia</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={loanForm.frequency}\r\n                onChange={(e) => setLoanForm({ ...loanForm, frequency: e.target.value })}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Estado</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={loanForm.status}\r\n                onChange={(e) => setLoanForm({ ...loanForm, status: e.target.value })}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Fecha de Vencimiento</label>\r\n              <input\r\n                type=\"date\"\r\n                className=\"form-control\"\r\n                value={loanForm.dueDate}\r\n                onChange={(e) => setLoanForm({ ...loanForm, dueDate: e.target.value })}\r\n              />\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-success\">Actualizar</button>\r\n            <button type=\"button\" className=\"btn btn-secondary ml-2\" onClick={() => setEditLoan(null)}>Cancelar</button>\r\n          </form>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n*/\r\n\r\n/*import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nconst Dashboard = () => {\r\n  const [summary, setSummary] = useState({});\r\n  const [recentPayments, setRecentPayments] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [editClient, setEditClient] = useState(null);\r\n  const [clientForm, setClientForm] = useState({ name: '', email: '', phone: '', idNumber: '', address: '' });\r\n\r\n  const [loans, setLoans] = useState([]);\r\n  const [editLoan, setEditLoan] = useState(null);\r\n  const [loanForm, setLoanForm] = useState({ clientId: '', amount: '', interestRate: '', term: '', frequency: '', status: '', dueDate: '' });\r\n\r\n  useEffect(() => {\r\n    const fetchSummary = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/api/reports/summary\");\r\n        setSummary(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching summary:\", error);\r\n      }\r\n    };\r\n\r\n    const fetchRecentPayments = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/api/reports/recent-payments\");\r\n        setRecentPayments(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching recent payments:\", error);\r\n      }\r\n    };\r\n\r\n    fetchSummary();\r\n    fetchRecentPayments();\r\n    fetchLoans();\r\n  }, []);\r\n\r\n  const fetchLoans = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5000/api/loans\");\r\n      const loansWithClientNames = await Promise.all(\r\n        response.data.map(async loan => {\r\n          const clientResponse = await axios.get(`http://localhost:5000/api/clientes/${loan.clientId}`);\r\n          return { ...loan, clientName: clientResponse.data.name };\r\n        })\r\n      );\r\n      setLoans(loansWithClientNames);\r\n    } catch (error) {\r\n      console.error(\"Error fetching loans:\", error);\r\n    }\r\n  };\r\n\r\n  const handleSearch = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.get(`http://localhost:5000/api/clientes/search?query=${searchQuery}`);\r\n      setSearchResults(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching search results:\", error);\r\n    }\r\n  };\r\n\r\n  const handleEdit = (client) => {\r\n    setEditClient(client._id);\r\n    setClientForm({ name: client.name, email: client.email, phone: client.phone, idNumber: client.idNumber, address: client.address });\r\n  };\r\n\r\n  const handleUpdate = async () => {\r\n    try {\r\n      await axios.put(`http://localhost:5000/api/clientes/update/${editClient}`, clientForm);\r\n      setEditClient(null);\r\n      setClientForm({ name: '', email: '', phone: '', idNumber: '', address: '' });\r\n      handleSearch({ preventDefault: () => { } });\r\n    } catch (error) {\r\n      console.error(\"Error updating client:\", error);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (clientId) => {\r\n    if (window.confirm(\"¿Estás seguro de que deseas eliminar este cliente?\")) {\r\n      try {\r\n        await axios.delete(`http://localhost:5000/api/clientes/delete/${clientId}`);\r\n        handleSearch({ preventDefault: () => { } });\r\n      } catch (error) {\r\n        console.error(\"Error deleting client:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleEditLoan = (loan) => {\r\n    setEditLoan(loan._id);\r\n    setLoanForm({\r\n      clientId: loan.clientId,\r\n      amount: loan.amount,\r\n      interestRate: loan.interestRate,\r\n      term: loan.term,\r\n      frequency: loan.frequency,\r\n      status: loan.status,\r\n      dueDate: new Date(loan.dueDate).toISOString().split('T')[0],\r\n    });\r\n  };\r\n\r\n  const handleUpdateLoan = async () => {\r\n    try {\r\n      await axios.put(`http://localhost:5000/api/loans/${editLoan}`, loanForm);\r\n      setEditLoan(null);\r\n      setLoanForm({ clientId: '', amount: '', interestRate: '', term: '', frequency: '', status: '', dueDate: '' });\r\n      fetchLoans();\r\n    } catch (error) {\r\n      console.error(\"Error updating loan:\", error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteLoan = async (loanId) => {\r\n    if (window.confirm(\"¿Estás seguro de que deseas eliminar este préstamo?\")) {\r\n      try {\r\n        await axios.delete(`http://localhost:5000/api/loans/${loanId}`);\r\n        fetchLoans();\r\n      } catch (error) {\r\n        console.error(\"Error deleting loan:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <div className=\"jumbotron text-center\">\r\n        <h1 className=\"display-4\">Dashboard</h1>\r\n        <p className=\"lead\">Resumen de Préstamos y Pagos</p>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card text-white bg-primary mb-3\">\r\n            <div className=\"card-header\">Clientes totales</div>\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title\">{summary.totalClientes || 0}</h5>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card text-white bg-success mb-3\">\r\n            <div className=\"card-header\">Total de Préstamos</div>\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title\">{summary.totalPrestamos || 0}</h5>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card text-white bg-danger mb-3\">\r\n            <div className=\"card-header\">Préstamos en Mora</div>\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title\">{summary.totalMora || 0}</h5>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <h2>Pagos Recientes</h2>\r\n      <table className=\"table table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th>Cliente</th>\r\n            <th>Monto</th>\r\n            <th>Fecha</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {recentPayments.map((payment) => (\r\n            <tr key={payment._id}>\r\n              <td>{payment.client ? payment.client.name : \"Cliente no encontrado\"}</td>\r\n              <td>{payment.amount}</td>\r\n              <td>{payment.date ? new Date(payment.date).toLocaleDateString() : \"Fecha inválida\"}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <h2>Buscar Cliente</h2>\r\n      <form onSubmit={handleSearch}>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Buscar por nombre o cédula\"\r\n            value={searchQuery}\r\n            onChange={(e) => setSearchQuery(e.target.value)}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">Buscar</button>\r\n      </form>\r\n      <h2>Resultados de la Búsqueda</h2>\r\n      <table className=\"table table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th>Nombre</th>\r\n            <th>Correo Electrónico</th>\r\n            <th>Teléfono</th>\r\n            <th>Cédula</th>\r\n            <th>Dirección</th>\r\n            <th>Acciones</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {searchResults.map((cliente) => (\r\n            <tr key={cliente._id}>\r\n              <td>{cliente.name}</td>\r\n              <td>{cliente.email}</td>\r\n              <td>{cliente.phone}</td>\r\n              <td>{cliente.idNumber}</td>\r\n              <td>{cliente.address}</td>\r\n              <td>\r\n                <button className=\"btn btn-warning mr-2\" onClick={() => handleEdit(cliente)}>Editar</button>\r\n                <button className=\"btn btn-danger\" onClick={() => handleDelete(cliente._id)}>Eliminar</button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      {editClient && (\r\n        <div className=\"mt-5\">\r\n          <h2>Editar Cliente</h2>\r\n          <form onSubmit={(e) => { e.preventDefault(); handleUpdate(); }}>\r\n            <div className=\"form-group\">\r\n              <label>Nombre</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={clientForm.name}\r\n                onChange={(e) => setClientForm({ ...clientForm, name: e.target.value })} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Correo Electrónico</label>\r\n              <input\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                value={clientForm.email}\r\n                onChange={(e) => setClientForm({ ...clientForm, email: e.target.value })} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Teléfono</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={clientForm.phone}\r\n                onChange={(e) => setClientForm({ ...clientForm, phone: e.target.value })} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Cédula</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={clientForm.idNumber}\r\n                onChange={(e) => setClientForm({ ...clientForm, idNumber: e.target.value })} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Dirección</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={clientForm.address}\r\n                onChange={(e) => setClientForm({ ...clientForm, address: e.target.value })} />\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-success\">Actualizar</button>\r\n            <button type=\"button\" className=\"btn btn-secondary ml-2\" onClick={() => setEditClient(null)}>Cancelar</button>\r\n          </form>\r\n        </div>\r\n      )}\r\n      <h2>Préstamos</h2>\r\n      <button className=\"btn btn-info mb-2\" onClick={fetchLoans}>Cargar Préstamos</button>\r\n      <table className=\"table table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th>Cliente</th>\r\n            <th>Monto</th>\r\n            <th>Tasa de Interés</th>\r\n            <th>Plazo</th>\r\n            <th>Frecuencia</th>\r\n            <th>Estado</th>\r\n            <th>Fecha de Vencimiento</th>\r\n            <th>Acciones</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {loans.map((loan) => (\r\n            <tr key={loan._id}>\r\n              <td>{loan.clientName}</td>\r\n              <td>{loan.amount}</td>\r\n              <td>{loan.interestRate}</td>\r\n              <td>{loan.term}</td>\r\n              <td>{loan.frequency}</td>\r\n              <td>{loan.status}</td>\r\n              <td>{new Date(loan.dueDate).toLocaleDateString()}</td>\r\n              <td>\r\n                <button className=\"btn btn-warning mr-2\" onClick={() => handleEditLoan(loan)}>Editar</button>\r\n                <button className=\"btn btn-danger\" onClick={() => handleDeleteLoan(loan._id)}>Eliminar</button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      {editLoan && (\r\n        <div className=\"mt-5\">\r\n          <h2>Editar Préstamo</h2>\r\n          <form onSubmit={(e) => { e.preventDefault(); handleUpdateLoan(); }}>\r\n            <div className=\"form-group\">\r\n              <label>ID del Cliente</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={loanForm.clientId}\r\n                onChange={(e) => setLoanForm({ ...loanForm, clientId: e.target.value })} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Monto</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                value={loanForm.amount}\r\n                onChange={(e) => setLoanForm({ ...loanForm, amount: e.target.value })} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Tasa de Interés</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                value={loanForm.interestRate}\r\n                onChange={(e) => setLoanForm({ ...loanForm, interestRate: e.target.value })} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Plazo</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                value={loanForm.term}\r\n                onChange={(e) => setLoanForm({ ...loanForm, term: e.target.value })} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Frecuencia</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={loanForm.frequency}\r\n                onChange={(e) => setLoanForm({ ...loanForm, frequency: e.target.value })} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Estado</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={loanForm.status}\r\n                onChange={(e) => setLoanForm({ ...loanForm, status: e.target.value })} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Fecha de Vencimiento</label>\r\n              <input\r\n                type=\"date\"\r\n                className=\"form-control\"\r\n                value={loanForm.dueDate}\r\n                onChange={(e) => setLoanForm({ ...loanForm, dueDate: e.target.value })} />\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-success\">Actualizar</button>\r\n            <button type=\"button\" className=\"btn btn-secondary ml-2\" onClick={() => setEditLoan(null)}>Cancelar</button>\r\n          </form>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard; \r\n*/\r\n//**************************************************************************************\r\n\r\n/*\r\n// Dashboard.js\r\nimport axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nconst Dashboard = () => {\r\n  const [summary, setSummary] = useState({});\r\n  const [recentPayments, setRecentPayments] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [editClient, setEditClient] = useState(null);\r\n  const [clientForm, setClientForm] = useState({ name: '', email: '', phone: '', idNumber: '', address: '' });\r\n\r\n  const [loans, setLoans] = useState([]);\r\n  const [editLoan, setEditLoan] = useState(null);\r\n  const [loanForm, setLoanForm] = useState({ clientId: '', amount: '', interestRate: '', term: '', frequency: '', status: '', dueDate: '' });\r\n\r\n  useEffect(() => {\r\n    const fetchSummary = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/api/reports/summary\");\r\n        setSummary(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching summary:\", error);\r\n      }\r\n    };\r\n\r\n    const fetchRecentPayments = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/api/reports/recent-payments\");\r\n        setRecentPayments(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching recent payments:\", error);\r\n      }\r\n    };\r\n\r\n    fetchSummary();\r\n    fetchRecentPayments();\r\n  }, []);\r\n\r\n  const handleSearch = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.get(`http://localhost:5000/api/clientes/search?query=${searchQuery}`);\r\n      setSearchResults(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching search results:\", error);\r\n    }\r\n  };\r\n\r\n  const handleEdit = (client) => {\r\n    setEditClient(client._id);\r\n    setClientForm({ name: client.name, email: client.email, phone: client.phone, idNumber: client.idNumber, address: client.address });\r\n  };\r\n\r\n  const handleUpdate = async () => {\r\n    try {\r\n      await axios.put(`http://localhost:5000/api/clientes/update/${editClient}`, clientForm);\r\n      setEditClient(null);\r\n      setClientForm({ name: '', email: '', phone: '', idNumber: '', address: '' });\r\n      handleSearch({ preventDefault: () => { } });\r\n    } catch (error) {\r\n      console.error(\"Error updating client:\", error);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (clientId) => {\r\n    if (window.confirm(\"¿Estás seguro de que deseas eliminar este cliente?\")) {\r\n      try {\r\n        await axios.delete(`http://localhost:5000/api/clientes/delete/${clientId}`);\r\n        handleSearch({ preventDefault: () => { } });\r\n      } catch (error) {\r\n        console.error(\"Error deleting client:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const fetchLoans = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5000/api/loans\");\r\n      setLoans(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching loans:\", error);\r\n    }\r\n  };\r\n\r\n  const handleEditLoan = (loan) => {\r\n    setEditLoan(loan._id);\r\n    setLoanForm({\r\n      clientId: loan.clientId,\r\n      amount: loan.amount,\r\n      interestRate: loan.interestRate,\r\n      term: loan.term,\r\n      frequency: loan.frequency,\r\n      status: loan.status,\r\n      dueDate: new Date(loan.dueDate).toISOString().split('T')[0],\r\n    });\r\n  };\r\n\r\n  const handleUpdateLoan = async () => {\r\n    try {\r\n      await axios.put(`http://localhost:5000/api/loans/update/${editLoan}`, loanForm);\r\n      setEditLoan(null);\r\n      setLoanForm({ clientId: '', amount: '', interestRate: '', term: '', frequency: '', status: '', dueDate: '' });\r\n      fetchLoans();\r\n    } catch (error) {\r\n      console.error(\"Error updating loan:\", error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteLoan = async (loanId) => {\r\n    if (window.confirm(\"¿Estás seguro de que deseas eliminar este préstamo?\")) {\r\n      try {\r\n        await axios.delete(`http://localhost:5000/api/loans/delete/${loanId}`);\r\n        fetchLoans();\r\n      } catch (error) {\r\n        console.error(\"Error deleting loan:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <div className=\"jumbotron text-center\">\r\n        <h1 className=\"display-4\">Dashboard</h1>\r\n        <p className=\"lead\">Resumen de Préstamos y Pagos</p>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card text-white bg-primary mb-3\">\r\n            <div className=\"card-header\">Clientes totales</div>\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title\">{summary.totalClientes || 0}</h5>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card text-white bg-success mb-3\">\r\n            <div className=\"card-header\">Total de Préstamos</div>\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title\">{summary.totalPrestamos || 0}</h5>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card text-white bg-danger mb-3\">\r\n            <div className=\"card-header\">Préstamos en Mora</div>\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title\">{summary.totalMora || 0}</h5>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <h2>Pagos Recientes</h2>\r\n      <table className=\"table table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th>Cliente</th>\r\n            <th>Monto</th>\r\n            <th>Fecha</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {recentPayments.map((payment) => (\r\n            <tr key={payment._id}>\r\n              <td>{payment.client ? payment.client.name : \"Cliente no encontrado\"}</td>\r\n              <td>{payment.amount}</td>\r\n              <td>{payment.date ? new Date(payment.date).toLocaleDateString() : \"Fecha inválida\"}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <h2>Buscar Cliente</h2>\r\n      <form onSubmit={handleSearch}>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Buscar por nombre o cédula\"\r\n            value={searchQuery}\r\n            onChange={(e) => setSearchQuery(e.target.value)}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">Buscar</button>\r\n      </form>\r\n      <h2>Resultados de la Búsqueda</h2>\r\n      <table className=\"table table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th>Nombre</th>\r\n            <th>Correo Electrónico</th>\r\n            <th>Teléfono</th>\r\n            <th>Cédula</th>\r\n            <th>Dirección</th>\r\n            <th>Acciones</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {searchResults.map((cliente) => (\r\n            <tr key={cliente._id}>\r\n              <td>{cliente.name}</td>\r\n              <td>{cliente.email}</td>\r\n              <td>{cliente.phone}</td>\r\n              <td>{cliente.idNumber}</td>\r\n              <td>{cliente.address}</td>\r\n              <td>\r\n                <button className=\"btn btn-warning mr-2\" onClick={() => handleEdit(cliente)}>Editar</button>\r\n                <button className=\"btn btn-danger\" onClick={() => handleDelete(cliente._id)}>Eliminar</button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      {editClient && (\r\n        <div className=\"mt-5\">\r\n          <h2>Editar Cliente</h2>\r\n          <form onSubmit={(e) => { e.preventDefault(); handleUpdate(); }}>\r\n            <div className=\"form-group\">\r\n              <label>Nombre</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={clientForm.name}\r\n                onChange={(e) => setClientForm({ ...clientForm, name: e.target.value })}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Correo Electrónico</label>\r\n              <input\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                value={clientForm.email}\r\n                onChange={(e) => setClientForm({ ...clientForm, email: e.target.value })}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Teléfono</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={clientForm.phone}\r\n                onChange={(e) => setClientForm({ ...clientForm, phone: e.target.value })}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Cédula</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={clientForm.idNumber}\r\n                onChange={(e) => setClientForm({ ...clientForm, idNumber: e.target.value })}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Dirección</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={clientForm.address}\r\n                onChange={(e) => setClientForm({ ...clientForm, address: e.target.value })}\r\n              />\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-success\">Actualizar</button>\r\n            <button type=\"button\" className=\"btn btn-secondary ml-2\" onClick={() => setEditClient(null)}>Cancelar</button>\r\n          </form>\r\n        </div>\r\n      )}\r\n      <h2>Préstamos</h2>\r\n      <button className=\"btn btn-info mb-2\" onClick={fetchLoans}>Cargar Préstamos</button>\r\n      <table className=\"table table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th>Cliente</th>\r\n            <th>Monto</th>\r\n            <th>Tasa de Interés</th>\r\n            <th>Plazo</th>\r\n            <th>Frecuencia</th>\r\n            <th>Estado</th>\r\n            <th>Fecha de Vencimiento</th>\r\n            <th>Acciones</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {loans.map((loan) => (\r\n            <tr key={loan._id}>\r\n              <td>{loan.clientId}</td>\r\n              <td>{loan.amount}</td>\r\n              <td>{loan.interestRate}</td>\r\n              <td>{loan.term}</td>\r\n              <td>{loan.frequency}</td>\r\n              <td>{loan.status}</td>\r\n              <td>{new Date(loan.dueDate).toLocaleDateString()}</td>\r\n              <td>\r\n                <button className=\"btn btn-warning mr-2\" onClick={() => handleEditLoan(loan)}>Editar</button>\r\n                <button className=\"btn btn-danger\" onClick={() => handleDeleteLoan(loan._id)}>Eliminar</button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      {editLoan && (\r\n        <div className=\"mt-5\">\r\n          <h2>Editar Préstamo</h2>\r\n          <form onSubmit={(e) => { e.preventDefault(); handleUpdateLoan(); }}>\r\n            <div className=\"form-group\">\r\n              <label>ID del Cliente</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={loanForm.clientId}\r\n                onChange={(e) => setLoanForm({ ...loanForm, clientId: e.target.value })}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Monto</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                value={loanForm.amount}\r\n                onChange={(e) => setLoanForm({ ...loanForm, amount: e.target.value })}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Tasa de Interés</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                value={loanForm.interestRate}\r\n                onChange={(e) => setLoanForm({ ...loanForm, interestRate: e.target.value })}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Plazo</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                value={loanForm.term}\r\n                onChange={(e) => setLoanForm({ ...loanForm, term: e.target.value })}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Frecuencia</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={loanForm.frequency}\r\n                onChange={(e) => setLoanForm({ ...loanForm, frequency: e.target.value })}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Estado</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={loanForm.status}\r\n                onChange={(e) => setLoanForm({ ...loanForm, status: e.target.value })}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Fecha de Vencimiento</label>\r\n              <input\r\n                type=\"date\"\r\n                className=\"form-control\"\r\n                value={loanForm.dueDate}\r\n                onChange={(e) => setLoanForm({ ...loanForm, dueDate: e.target.value })}\r\n              />\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-success\">Actualizar</button>\r\n            <button type=\"button\" className=\"btn btn-secondary ml-2\" onClick={() => setEditLoan(null)}>Cancelar</button>\r\n          </form>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n*/"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}