{"ast":null,"code":"/*import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Loans = () => {\r\n  const [loans, setLoans] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchLoans = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/api/loans');\r\n        setLoans(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching loans:', error);\r\n      }\r\n    };\r\n\r\n    fetchLoans();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Préstamos</h2>\r\n      <table className=\"table table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th>Cliente</th>\r\n            <th>Monto</th>\r\n            <th>Tasa de Interés</th>\r\n            <th>Plazo</th>\r\n            <th>Frecuencia</th>\r\n            <th>Estado</th>\r\n            <th>Fecha de Vencimiento</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {loans.map((loan) => (\r\n            <tr key={loan._id}>\r\n              <td>{loan.clientId ? loan.clientId.name : 'Cliente no encontrado'}</td>\r\n              <td>{loan.amount}</td>\r\n              <td>{loan.interestRate}</td>\r\n              <td>{loan.term}</td>\r\n              <td>{loan.frequency}</td>\r\n              <td>{loan.status}</td>\r\n              <td>{new Date(loan.dueDate).toLocaleDateString()}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loans;\r\n*/","map":{"version":3,"names":[],"sources":["D:/Usuario/wilme/Escritorio/Gestion_Loans_Clean/loan-app-ui/src/components/Loans.js"],"sourcesContent":["/*import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Loans = () => {\r\n  const [loans, setLoans] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchLoans = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/api/loans');\r\n        setLoans(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching loans:', error);\r\n      }\r\n    };\r\n\r\n    fetchLoans();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Préstamos</h2>\r\n      <table className=\"table table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th>Cliente</th>\r\n            <th>Monto</th>\r\n            <th>Tasa de Interés</th>\r\n            <th>Plazo</th>\r\n            <th>Frecuencia</th>\r\n            <th>Estado</th>\r\n            <th>Fecha de Vencimiento</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {loans.map((loan) => (\r\n            <tr key={loan._id}>\r\n              <td>{loan.clientId ? loan.clientId.name : 'Cliente no encontrado'}</td>\r\n              <td>{loan.amount}</td>\r\n              <td>{loan.interestRate}</td>\r\n              <td>{loan.term}</td>\r\n              <td>{loan.frequency}</td>\r\n              <td>{loan.status}</td>\r\n              <td>{new Date(loan.dueDate).toLocaleDateString()}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loans;\r\n*/"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}