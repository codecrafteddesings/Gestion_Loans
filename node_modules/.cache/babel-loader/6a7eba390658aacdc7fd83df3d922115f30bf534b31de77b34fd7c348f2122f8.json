{"ast":null,"code":"\n\n/*import React from 'react';\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nconst Register = () => (\r\n  <div className=\"container mt-5\">\r\n    <h2 className=\"mb-4\">Registro</h2>\r\n    <Formik\r\n      initialValues={{\r\n        username: '',\r\n        email: '',\r\n        password: '',\r\n      }}\r\n      validationSchema={Yup.object({\r\n        username: Yup.string()\r\n          .max(15, 'Must be 15 characters or less')\r\n          .required('Required'),\r\n        email: Yup.string().email('Invalid email address').required('Required'),\r\n        password: Yup.string()\r\n          .min(6, 'Must be 6 characters or more')\r\n          .required('Required'),\r\n      })}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n          alert(JSON.stringify(values, null, 2));\r\n          setSubmitting(false);\r\n        }, 400);\r\n      }}\r\n    >\r\n      <Form>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"username\" className=\"form-label\">Username</label>\r\n          <Field name=\"username\" type=\"text\" className=\"form-control\" />\r\n          <ErrorMessage name=\"username\" component=\"div\" className=\"text-danger\" />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"email\" className=\"form-label\">Email</label>\r\n          <Field name=\"email\" type=\"email\" className=\"form-control\" />\r\n          <ErrorMessage name=\"email\" component=\"div\" className=\"text-danger\" />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"password\" className=\"form-label\">Password</label>\r\n          <Field name=\"password\" type=\"password\" className=\"form-control\" />\r\n          <ErrorMessage name=\"password\" component=\"div\" className=\"text-danger\" />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n      </Form>\r\n    </Formik>\r\n  </div>\r\n);\r\n\r\nexport default Register;\r\n\r\n\r\n\r\n/*import React from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nconst RegisterSchema = Yup.object().shape({\r\n  name: Yup.string().required('Required'),\r\n  email: Yup.string().email('Invalid email').required('Required'),\r\n  password: Yup.string().min(6, 'Too Short!').required('Required'),\r\n});\r\n\r\nfunction Register() {\r\n  return (\r\n    <div>\r\n      <h2>Register</h2>\r\n      <Formik\r\n        initialValues={{\r\n          name: '',\r\n          email: '',\r\n          password: '',\r\n        }}\r\n        validationSchema={RegisterSchema}\r\n        onSubmit={(values) => {\r\n          // handle form submission\r\n          console.log(values);\r\n        }}\r\n      >\r\n        {({ isSubmitting }) => (\r\n          <Form>\r\n            <div>\r\n              <label>Name</label>\r\n              <Field type=\"text\" name=\"name\" />\r\n              <ErrorMessage name=\"name\" component=\"div\" />\r\n            </div>\r\n            <div>\r\n              <label>Email</label>\r\n              <Field type=\"email\" name=\"email\" />\r\n              <ErrorMessage name=\"email\" component=\"div\" />\r\n            </div>\r\n            <div>\r\n              <label>Password</label>\r\n              <Field type=\"password\" name=\"password\" />\r\n              <ErrorMessage name=\"password\" component=\"div\" />\r\n            </div>\r\n            <button type=\"submit\" disabled={isSubmitting}>\r\n              Submit\r\n            </button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n*/","map":{"version":3,"names":[],"sources":["D:/Usuario/wilme/Escritorio/Nueva carpeta/loan-app-ui/src/components/Register.js"],"sourcesContent":["\r\n\r\n/*import React from 'react';\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nconst Register = () => (\r\n  <div className=\"container mt-5\">\r\n    <h2 className=\"mb-4\">Registro</h2>\r\n    <Formik\r\n      initialValues={{\r\n        username: '',\r\n        email: '',\r\n        password: '',\r\n      }}\r\n      validationSchema={Yup.object({\r\n        username: Yup.string()\r\n          .max(15, 'Must be 15 characters or less')\r\n          .required('Required'),\r\n        email: Yup.string().email('Invalid email address').required('Required'),\r\n        password: Yup.string()\r\n          .min(6, 'Must be 6 characters or more')\r\n          .required('Required'),\r\n      })}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n          alert(JSON.stringify(values, null, 2));\r\n          setSubmitting(false);\r\n        }, 400);\r\n      }}\r\n    >\r\n      <Form>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"username\" className=\"form-label\">Username</label>\r\n          <Field name=\"username\" type=\"text\" className=\"form-control\" />\r\n          <ErrorMessage name=\"username\" component=\"div\" className=\"text-danger\" />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"email\" className=\"form-label\">Email</label>\r\n          <Field name=\"email\" type=\"email\" className=\"form-control\" />\r\n          <ErrorMessage name=\"email\" component=\"div\" className=\"text-danger\" />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"password\" className=\"form-label\">Password</label>\r\n          <Field name=\"password\" type=\"password\" className=\"form-control\" />\r\n          <ErrorMessage name=\"password\" component=\"div\" className=\"text-danger\" />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n      </Form>\r\n    </Formik>\r\n  </div>\r\n);\r\n\r\nexport default Register;\r\n\r\n\r\n\r\n/*import React from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nconst RegisterSchema = Yup.object().shape({\r\n  name: Yup.string().required('Required'),\r\n  email: Yup.string().email('Invalid email').required('Required'),\r\n  password: Yup.string().min(6, 'Too Short!').required('Required'),\r\n});\r\n\r\nfunction Register() {\r\n  return (\r\n    <div>\r\n      <h2>Register</h2>\r\n      <Formik\r\n        initialValues={{\r\n          name: '',\r\n          email: '',\r\n          password: '',\r\n        }}\r\n        validationSchema={RegisterSchema}\r\n        onSubmit={(values) => {\r\n          // handle form submission\r\n          console.log(values);\r\n        }}\r\n      >\r\n        {({ isSubmitting }) => (\r\n          <Form>\r\n            <div>\r\n              <label>Name</label>\r\n              <Field type=\"text\" name=\"name\" />\r\n              <ErrorMessage name=\"name\" component=\"div\" />\r\n            </div>\r\n            <div>\r\n              <label>Email</label>\r\n              <Field type=\"email\" name=\"email\" />\r\n              <ErrorMessage name=\"email\" component=\"div\" />\r\n            </div>\r\n            <div>\r\n              <label>Password</label>\r\n              <Field type=\"password\" name=\"password\" />\r\n              <ErrorMessage name=\"password\" component=\"div\" />\r\n            </div>\r\n            <button type=\"submit\" disabled={isSubmitting}>\r\n              Submit\r\n            </button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n*/"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}