{"ast":null,"code":"var _jsxFileName = \"D:\\\\Usuario\\\\wilme\\\\Escritorio\\\\Nueva carpeta\\\\loan-app\\\\loan-app-ui\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Button } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const navigate = useNavigate();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: () => navigate('/register'),\n      children: \"Go to Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\n\n/*import React from 'react';\r\nimport { Container, Row, Col, Card, Button } from 'react-bootstrap';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Dashboard = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const navigateToUsers = () => {\r\n    navigate('/users');\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Row className=\"my-4\">\r\n        <Col>\r\n          <Card>\r\n            <Card.Body>\r\n              <Card.Title>Gestión de Préstamos</Card.Title>\r\n              <Card.Text>\r\n                Aquí puedes gestionar todos los préstamos.\r\n              </Card.Text>\r\n              <Button variant=\"primary\">Ir a Préstamos</Button>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        <Col>\r\n          <Card>\r\n            <Card.Body>\r\n              <Card.Title>Gestión de Usuarios</Card.Title>\r\n              <Card.Text>\r\n                Aquí puedes gestionar todos los usuarios.\r\n              </Card.Text>\r\n              <Button variant=\"primary\" onClick={navigateToUsers}>Ir a Usuarios</Button>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n*/\n\n/*import React from 'react';\r\nimport { Container, Row, Col, Card, Button } from 'react-bootstrap';\r\n\r\nconst Dashboard = () => {\r\n  return (\r\n    <Container>\r\n      <Row className=\"my-4\">\r\n        <Col>\r\n          <Card>\r\n            <Card.Body>\r\n              <Card.Title>Gestión de Préstamos</Card.Title>\r\n              <Card.Text>\r\n                Aquí puedes gestionar todos los préstamos.\r\n              </Card.Text>\r\n              <Button variant=\"primary\">Ir a Préstamos</Button>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        <Col>\r\n          <Card>\r\n            <Card.Body>\r\n              <Card.Title>Gestión de Usuarios</Card.Title>\r\n              <Card.Text>\r\n                Aquí puedes gestionar todos los usuarios.\r\n              </Card.Text>\r\n              <Button variant=\"primary\">Ir a Usuarios</Button>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Dashboard; */\n\n// src/components/Dashboard.js\n/*import React, { useState, useEffect, useCallback } from 'react';\r\nimport { Chart } from 'chart.js';\r\n\r\nconst Dashboard = () => {\r\n    const [loans, setLoans] = useState([]);\r\n    const [payments, setPayments] = useState([]);\r\n    const [statistics, setStatistics] = useState({});\r\n    const [token, setToken] = useState('');\r\n\r\n    const fetchData = useCallback(async () => {\r\n        const headers = { 'x-auth-token': token };\r\n\r\n        try {\r\n            const responseLoans = await fetch('/api/reports/loans', { headers });\r\n            const loansData = await responseLoans.json();\r\n            setLoans(loansData);\r\n\r\n            const responsePayments = await fetch('/api/reports/payments', { headers });\r\n            const paymentsData = await responsePayments.json();\r\n            setPayments(paymentsData);\r\n\r\n            const responseStatistics = await fetch('/api/reports/statistics', { headers });\r\n            const statisticsData = await responseStatistics.json();\r\n            setStatistics(statisticsData);\r\n\r\n            createCharts(loansData, paymentsData);\r\n        } catch (error) {\r\n            console.error('Error fetching data:', error);\r\n        }\r\n    }, [token]);\r\n\r\n    useEffect(() => {\r\n        if (token) {\r\n            fetchData();\r\n        }\r\n    }, [token, fetchData]);\r\n\r\n    const createCharts = (loansData, paymentsData) => {\r\n        const loansChartCtx = document.getElementById('loansChart').getContext('2d');\r\n        const paymentsChartCtx = document.getElementById('paymentsChart').getContext('2d');\r\n\r\n        new Chart(loansChartCtx, {\r\n            type: 'bar',\r\n            data: {\r\n                labels: loansData.map(loan => loan.borrower.name),\r\n                datasets: [{\r\n                    label: 'Loan Amount',\r\n                    data: loansData.map(loan => loan.amount),\r\n                    backgroundColor: 'rgba(75, 192, 192, 0.2)',\r\n                    borderColor: 'rgba(75, 192, 192, 1)',\r\n                    borderWidth: 1\r\n                }]\r\n            },\r\n            options: {\r\n                scales: {\r\n                    y: {\r\n                        beginAtZero: true\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        new Chart(paymentsChartCtx, {\r\n            type: 'line',\r\n            data: {\r\n                labels: paymentsData.map(payment => new Date(payment.paymentDate).toLocaleDateString()),\r\n                datasets: [{\r\n                    label: 'Payment Amount',\r\n                    data: paymentsData.map(payment => payment.amount),\r\n                    backgroundColor: 'rgba(153, 102, 255, 0.2)',\r\n                    borderColor: 'rgba(153, 102, 255, 1)',\r\n                    borderWidth: 1\r\n                }]\r\n            },\r\n            options: {\r\n                scales: {\r\n                    y: {\r\n                        beginAtZero: true\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1>Dashboard</h1>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Enter JWT Token\"\r\n                value={token}\r\n                onChange={(e) => setToken(e.target.value)}\r\n                style={{ width: '300px', padding: '10px' }}\r\n            />\r\n            <button onClick={fetchData}>Fetch Data</button>\r\n            <canvas id=\"loansChart\" width=\"400\" height=\"200\"></canvas>\r\n            <canvas id=\"paymentsChart\" width=\"400\" height=\"200\"></canvas>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dashboard;*/\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","Button","useNavigate","jsxDEV","_jsxDEV","Dashboard","_s","navigate","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","color","onClick","_c","$RefreshReg$"],"sources":["D:/Usuario/wilme/Escritorio/Nueva carpeta/loan-app/loan-app-ui/src/components/Dashboard.js"],"sourcesContent":["import React from 'react';\r\nimport { Button } from '@mui/material';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Dashboard = () => {\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <div>\r\n      <h1>Dashboard</h1>\r\n      <Button variant=\"contained\" color=\"primary\" onClick={() => navigate('/register')}>\r\n        Go to Register\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n\r\n\r\n\r\n/*import React from 'react';\r\nimport { Container, Row, Col, Card, Button } from 'react-bootstrap';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Dashboard = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const navigateToUsers = () => {\r\n    navigate('/users');\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Row className=\"my-4\">\r\n        <Col>\r\n          <Card>\r\n            <Card.Body>\r\n              <Card.Title>Gestión de Préstamos</Card.Title>\r\n              <Card.Text>\r\n                Aquí puedes gestionar todos los préstamos.\r\n              </Card.Text>\r\n              <Button variant=\"primary\">Ir a Préstamos</Button>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        <Col>\r\n          <Card>\r\n            <Card.Body>\r\n              <Card.Title>Gestión de Usuarios</Card.Title>\r\n              <Card.Text>\r\n                Aquí puedes gestionar todos los usuarios.\r\n              </Card.Text>\r\n              <Button variant=\"primary\" onClick={navigateToUsers}>Ir a Usuarios</Button>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n*/\r\n\r\n\r\n/*import React from 'react';\r\nimport { Container, Row, Col, Card, Button } from 'react-bootstrap';\r\n\r\nconst Dashboard = () => {\r\n  return (\r\n    <Container>\r\n      <Row className=\"my-4\">\r\n        <Col>\r\n          <Card>\r\n            <Card.Body>\r\n              <Card.Title>Gestión de Préstamos</Card.Title>\r\n              <Card.Text>\r\n                Aquí puedes gestionar todos los préstamos.\r\n              </Card.Text>\r\n              <Button variant=\"primary\">Ir a Préstamos</Button>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        <Col>\r\n          <Card>\r\n            <Card.Body>\r\n              <Card.Title>Gestión de Usuarios</Card.Title>\r\n              <Card.Text>\r\n                Aquí puedes gestionar todos los usuarios.\r\n              </Card.Text>\r\n              <Button variant=\"primary\">Ir a Usuarios</Button>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Dashboard; */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// src/components/Dashboard.js\r\n/*import React, { useState, useEffect, useCallback } from 'react';\r\nimport { Chart } from 'chart.js';\r\n\r\nconst Dashboard = () => {\r\n    const [loans, setLoans] = useState([]);\r\n    const [payments, setPayments] = useState([]);\r\n    const [statistics, setStatistics] = useState({});\r\n    const [token, setToken] = useState('');\r\n\r\n    const fetchData = useCallback(async () => {\r\n        const headers = { 'x-auth-token': token };\r\n\r\n        try {\r\n            const responseLoans = await fetch('/api/reports/loans', { headers });\r\n            const loansData = await responseLoans.json();\r\n            setLoans(loansData);\r\n\r\n            const responsePayments = await fetch('/api/reports/payments', { headers });\r\n            const paymentsData = await responsePayments.json();\r\n            setPayments(paymentsData);\r\n\r\n            const responseStatistics = await fetch('/api/reports/statistics', { headers });\r\n            const statisticsData = await responseStatistics.json();\r\n            setStatistics(statisticsData);\r\n\r\n            createCharts(loansData, paymentsData);\r\n        } catch (error) {\r\n            console.error('Error fetching data:', error);\r\n        }\r\n    }, [token]);\r\n\r\n    useEffect(() => {\r\n        if (token) {\r\n            fetchData();\r\n        }\r\n    }, [token, fetchData]);\r\n\r\n    const createCharts = (loansData, paymentsData) => {\r\n        const loansChartCtx = document.getElementById('loansChart').getContext('2d');\r\n        const paymentsChartCtx = document.getElementById('paymentsChart').getContext('2d');\r\n\r\n        new Chart(loansChartCtx, {\r\n            type: 'bar',\r\n            data: {\r\n                labels: loansData.map(loan => loan.borrower.name),\r\n                datasets: [{\r\n                    label: 'Loan Amount',\r\n                    data: loansData.map(loan => loan.amount),\r\n                    backgroundColor: 'rgba(75, 192, 192, 0.2)',\r\n                    borderColor: 'rgba(75, 192, 192, 1)',\r\n                    borderWidth: 1\r\n                }]\r\n            },\r\n            options: {\r\n                scales: {\r\n                    y: {\r\n                        beginAtZero: true\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        new Chart(paymentsChartCtx, {\r\n            type: 'line',\r\n            data: {\r\n                labels: paymentsData.map(payment => new Date(payment.paymentDate).toLocaleDateString()),\r\n                datasets: [{\r\n                    label: 'Payment Amount',\r\n                    data: paymentsData.map(payment => payment.amount),\r\n                    backgroundColor: 'rgba(153, 102, 255, 0.2)',\r\n                    borderColor: 'rgba(153, 102, 255, 1)',\r\n                    borderWidth: 1\r\n                }]\r\n            },\r\n            options: {\r\n                scales: {\r\n                    y: {\r\n                        beginAtZero: true\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1>Dashboard</h1>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Enter JWT Token\"\r\n                value={token}\r\n                onChange={(e) => setToken(e.target.value)}\r\n                style={{ width: '300px', padding: '10px' }}\r\n            />\r\n            <button onClick={fetchData}>Fetch Data</button>\r\n            <canvas id=\"loansChart\" width=\"400\" height=\"200\"></canvas>\r\n            <canvas id=\"paymentsChart\" width=\"400\" height=\"200\"></canvas>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dashboard;*/\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,eAAe;AACtC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAE9B,oBACEE,OAAA;IAAAI,QAAA,gBACEJ,OAAA;MAAAI,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBR,OAAA,CAACH,MAAM;MAACY,OAAO,EAAC,WAAW;MAACC,KAAK,EAAC,SAAS;MAACC,OAAO,EAAEA,CAAA,KAAMR,QAAQ,CAAC,WAAW,CAAE;MAAAC,QAAA,EAAC;IAElF;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACN,EAAA,CAXID,SAAS;EAAA,QACIH,WAAW;AAAA;AAAAc,EAAA,GADxBX,SAAS;AAaf,eAAeA,SAAS;;AAIxrGA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}