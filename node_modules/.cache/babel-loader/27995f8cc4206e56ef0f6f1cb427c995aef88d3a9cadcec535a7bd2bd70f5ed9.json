{"ast":null,"code":"var _jsxFileName = \"D:\\\\Usuario\\\\wilme\\\\Escritorio\\\\Nueva carpeta\\\\loan-app-ui\\\\src\\\\components\\\\Register.js\";\nimport React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  const initialValues = {\n    username: '',\n    email: '',\n    password: ''\n  };\n  const validationSchema = Yup.object({\n    username: Yup.string().required('Requerido'),\n    email: Yup.string().email('Email inválido').required('Requerido'),\n    password: Yup.string().min(6, 'Debe tener al menos 6 caracteres').required('Requerido')\n  });\n  const onSubmit = values => {\n    console.log('Formulario enviado', values);\n    // Aquí puedes agregar la lógica para enviar el formulario\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Registro\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      validationSchema: validationSchema,\n      onSubmit: onSubmit,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            className: \"form-label\",\n            children: \"Nombre de usuario\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            type: \"text\",\n            id: \"username\",\n            name: \"username\",\n            className: \"form-control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"username\",\n            component: \"div\",\n            className: \"text-danger\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            className: \"form-label\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            type: \"email\",\n            id: \"email\",\n            name: \"email\",\n            className: \"form-control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"email\",\n            component: \"div\",\n            className: \"text-danger\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            className: \"form-label\",\n            children: \"Contrase\\xF1a\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            type: \"password\",\n            id: \"password\",\n            name: \"password\",\n            className: \"form-control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"password\",\n            component: \"div\",\n            className: \"text-danger\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          children: \"Registrarse\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_c = Register;\nexport default Register;\n\n/*import React from 'react';\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nconst Register = () => (\r\n  <div className=\"container mt-5\">\r\n    <h2 className=\"mb-4\">Registro</h2>\r\n    <Formik\r\n      initialValues={{\r\n        username: '',\r\n        email: '',\r\n        password: '',\r\n      }}\r\n      validationSchema={Yup.object({\r\n        username: Yup.string()\r\n          .max(15, 'Must be 15 characters or less')\r\n          .required('Required'),\r\n        email: Yup.string().email('Invalid email address').required('Required'),\r\n        password: Yup.string()\r\n          .min(6, 'Must be 6 characters or more')\r\n          .required('Required'),\r\n      })}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n          alert(JSON.stringify(values, null, 2));\r\n          setSubmitting(false);\r\n        }, 400);\r\n      }}\r\n    >\r\n      <Form>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"username\" className=\"form-label\">Username</label>\r\n          <Field name=\"username\" type=\"text\" className=\"form-control\" />\r\n          <ErrorMessage name=\"username\" component=\"div\" className=\"text-danger\" />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"email\" className=\"form-label\">Email</label>\r\n          <Field name=\"email\" type=\"email\" className=\"form-control\" />\r\n          <ErrorMessage name=\"email\" component=\"div\" className=\"text-danger\" />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"password\" className=\"form-label\">Password</label>\r\n          <Field name=\"password\" type=\"password\" className=\"form-control\" />\r\n          <ErrorMessage name=\"password\" component=\"div\" className=\"text-danger\" />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n      </Form>\r\n    </Formik>\r\n  </div>\r\n);\r\n\r\nexport default Register;*/\n\n/*import React from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nconst RegisterSchema = Yup.object().shape({\r\n  name: Yup.string().required('Required'),\r\n  email: Yup.string().email('Invalid email').required('Required'),\r\n  password: Yup.string().min(6, 'Too Short!').required('Required'),\r\n});\r\n\r\nfunction Register() {\r\n  return (\r\n    <div>\r\n      <h2>Register</h2>\r\n      <Formik\r\n        initialValues={{\r\n          name: '',\r\n          email: '',\r\n          password: '',\r\n        }}\r\n        validationSchema={RegisterSchema}\r\n        onSubmit={(values) => {\r\n          // handle form submission\r\n          console.log(values);\r\n        }}\r\n      >\r\n        {({ isSubmitting }) => (\r\n          <Form>\r\n            <div>\r\n              <label>Name</label>\r\n              <Field type=\"text\" name=\"name\" />\r\n              <ErrorMessage name=\"name\" component=\"div\" />\r\n            </div>\r\n            <div>\r\n              <label>Email</label>\r\n              <Field type=\"email\" name=\"email\" />\r\n              <ErrorMessage name=\"email\" component=\"div\" />\r\n            </div>\r\n            <div>\r\n              <label>Password</label>\r\n              <Field type=\"password\" name=\"password\" />\r\n              <ErrorMessage name=\"password\" component=\"div\" />\r\n            </div>\r\n            <button type=\"submit\" disabled={isSubmitting}>\r\n              Submit\r\n            </button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n*/\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","Formik","Form","Field","ErrorMessage","Yup","jsxDEV","_jsxDEV","Register","initialValues","username","email","password","validationSchema","object","string","required","min","onSubmit","values","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","name","component","_c","$RefreshReg$"],"sources":["D:/Usuario/wilme/Escritorio/Nueva carpeta/loan-app-ui/src/components/Register.js"],"sourcesContent":["import React from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nconst Register = () => {\r\n  const initialValues = {\r\n    username: '',\r\n    email: '',\r\n    password: '',\r\n  };\r\n\r\n  const validationSchema = Yup.object({\r\n    username: Yup.string().required('Requerido'),\r\n    email: Yup.string().email('Email inválido').required('Requerido'),\r\n    password: Yup.string().min(6, 'Debe tener al menos 6 caracteres').required('Requerido'),\r\n  });\r\n\r\n  const onSubmit = (values) => {\r\n    console.log('Formulario enviado', values);\r\n    // Aquí puedes agregar la lógica para enviar el formulario\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h1>Registro</h1>\r\n      <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\r\n        <Form>\r\n          <div className=\"mb-3\">\r\n            <label htmlFor=\"username\" className=\"form-label\">Nombre de usuario</label>\r\n            <Field type=\"text\" id=\"username\" name=\"username\" className=\"form-control\" />\r\n            <ErrorMessage name=\"username\" component=\"div\" className=\"text-danger\" />\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label htmlFor=\"email\" className=\"form-label\">Email</label>\r\n            <Field type=\"email\" id=\"email\" name=\"email\" className=\"form-control\" />\r\n            <ErrorMessage name=\"email\" component=\"div\" className=\"text-danger\" />\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label htmlFor=\"password\" className=\"form-label\">Contraseña</label>\r\n            <Field type=\"password\" id=\"password\" name=\"password\" className=\"form-control\" />\r\n            <ErrorMessage name=\"password\" component=\"div\" className=\"text-danger\" />\r\n          </div>\r\n          <button type=\"submit\" className=\"btn btn-primary\">Registrarse</button>\r\n        </Form>\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n\r\n\r\n/*import React from 'react';\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nconst Register = () => (\r\n  <div className=\"container mt-5\">\r\n    <h2 className=\"mb-4\">Registro</h2>\r\n    <Formik\r\n      initialValues={{\r\n        username: '',\r\n        email: '',\r\n        password: '',\r\n      }}\r\n      validationSchema={Yup.object({\r\n        username: Yup.string()\r\n          .max(15, 'Must be 15 characters or less')\r\n          .required('Required'),\r\n        email: Yup.string().email('Invalid email address').required('Required'),\r\n        password: Yup.string()\r\n          .min(6, 'Must be 6 characters or more')\r\n          .required('Required'),\r\n      })}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n          alert(JSON.stringify(values, null, 2));\r\n          setSubmitting(false);\r\n        }, 400);\r\n      }}\r\n    >\r\n      <Form>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"username\" className=\"form-label\">Username</label>\r\n          <Field name=\"username\" type=\"text\" className=\"form-control\" />\r\n          <ErrorMessage name=\"username\" component=\"div\" className=\"text-danger\" />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"email\" className=\"form-label\">Email</label>\r\n          <Field name=\"email\" type=\"email\" className=\"form-control\" />\r\n          <ErrorMessage name=\"email\" component=\"div\" className=\"text-danger\" />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"password\" className=\"form-label\">Password</label>\r\n          <Field name=\"password\" type=\"password\" className=\"form-control\" />\r\n          <ErrorMessage name=\"password\" component=\"div\" className=\"text-danger\" />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n      </Form>\r\n    </Formik>\r\n  </div>\r\n);\r\n\r\nexport default Register;*/\r\n\r\n\r\n\r\n/*import React from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nconst RegisterSchema = Yup.object().shape({\r\n  name: Yup.string().required('Required'),\r\n  email: Yup.string().email('Invalid email').required('Required'),\r\n  password: Yup.string().min(6, 'Too Short!').required('Required'),\r\n});\r\n\r\nfunction Register() {\r\n  return (\r\n    <div>\r\n      <h2>Register</h2>\r\n      <Formik\r\n        initialValues={{\r\n          name: '',\r\n          email: '',\r\n          password: '',\r\n        }}\r\n        validationSchema={RegisterSchema}\r\n        onSubmit={(values) => {\r\n          // handle form submission\r\n          console.log(values);\r\n        }}\r\n      >\r\n        {({ isSubmitting }) => (\r\n          <Form>\r\n            <div>\r\n              <label>Name</label>\r\n              <Field type=\"text\" name=\"name\" />\r\n              <ErrorMessage name=\"name\" component=\"div\" />\r\n            </div>\r\n            <div>\r\n              <label>Email</label>\r\n              <Field type=\"email\" name=\"email\" />\r\n              <ErrorMessage name=\"email\" component=\"div\" />\r\n            </div>\r\n            <div>\r\n              <label>Password</label>\r\n              <Field type=\"password\" name=\"password\" />\r\n              <ErrorMessage name=\"password\" component=\"div\" />\r\n            </div>\r\n            <button type=\"submit\" disabled={isSubmitting}>\r\n              Submit\r\n            </button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n*/"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}