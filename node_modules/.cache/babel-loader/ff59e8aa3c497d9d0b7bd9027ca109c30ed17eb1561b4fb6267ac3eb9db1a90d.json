{"ast":null,"code":"/*import axios from 'axios';\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nconst Payments = () => {\r\n    const [form, setForm] = useState({\r\n        loanId: '',\r\n        amount: '',\r\n    });\r\n    const [loans, setLoans] = useState([]);\r\n    const [message, setMessage] = useState('');\r\n\r\n    useEffect(() => {\r\n        const fetchLoans = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:5000/api/loans');\r\n                setLoans(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching loans:', error);\r\n            }\r\n        };\r\n\r\n        fetchLoans();\r\n    }, []);\r\n\r\n    const handleChange = (e) => {\r\n        setForm({\r\n            ...form,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const response = await axios.post('http://localhost:5000/api/payments', form);\r\n            setMessage('Pago registrado con éxito.');\r\n        } catch (error) {\r\n            setMessage('Error al registrar el pago.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <h1>Registro de Pagos</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"loanId\" className=\"form-label\">Préstamo</label>\r\n                    <select\r\n                        className=\"form-control\"\r\n                        id=\"loanId\"\r\n                        name=\"loanId\"\r\n                        value={form.loanId}\r\n                        onChange={handleChange}\r\n                        required\r\n                    >\r\n                        <option value=\"\">Seleccione un préstamo</option>\r\n                        {loans.map(loan => (\r\n                            <option key={loan._id} value={loan._id}>\r\n                                {loan.clientId.name} - {loan.amount} ({loan.clientId.email})\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"amount\" className=\"form-label\">Monto</label>\r\n                    <input\r\n                        type=\"number\"\r\n                        className=\"form-control\"\r\n                        id=\"amount\"\r\n                        name=\"amount\"\r\n                        value={form.amount}\r\n                        onChange={handleChange}\r\n                        required\r\n                    />\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary\">Registrar Pago</button>\r\n                {message && <p>{message}</p>}\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Payments;\r\n*/\n\n/*\r\nimport axios from 'axios';\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nconst Payments = () => {\r\n    const [form, setForm] = useState({\r\n        loanId: '',\r\n        amount: '',\r\n    });\r\n    const [loans, setLoans] = useState([]);\r\n    const [message, setMessage] = useState('');\r\n\r\n    useEffect(() => {\r\n        const fetchLoans = async () => {\r\n            try {\r\n                const response = await axios.get(`http://localhost:5000/api/loans`);\r\n                setLoans(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching loans:', error);\r\n            }\r\n        };\r\n\r\n        fetchLoans();\r\n    }, []);\r\n\r\n    const handleChange = (e) => {\r\n        setForm({\r\n            ...form,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const response = await axios.post(`http://localhost:5000/api/payments`, form);\r\n            setMessage('Pago registrado con éxito.');\r\n        } catch (error) {\r\n            setMessage('Error al registrar el pago.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <h1>Registro de Pagos</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"loanId\" className=\"form-label\">Préstamo</label>\r\n                    <select\r\n                        className=\"form-control\"\r\n                        id=\"loanId\"\r\n                        name=\"loanId\"\r\n                        value={form.loanId}\r\n                        onChange={handleChange}\r\n                        required\r\n                    >\r\n                        <option value=\"\">Seleccione un préstamo</option>\r\n                        {loans.map(loan => (\r\n                            <option key={loan._id} value={loan._id}>\r\n                                {loan.clientId} - {loan.amount}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"amount\" className=\"form-label\">Monto</label>\r\n                    <input\r\n                        type=\"number\"\r\n                        className=\"form-control\"\r\n                        id=\"amount\"\r\n                        name=\"amount\"\r\n                        value={form.amount}\r\n                        onChange={handleChange}\r\n                        required\r\n                    />\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary\">Registrar Pago</button>\r\n                {message && <p>{message}</p>}\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Payments;*/","map":{"version":3,"names":[],"sources":["D:/Usuario/wilme/Escritorio/Gestion_Loans/loan-app-ui/src/components/Payments.js"],"sourcesContent":["/*import axios from 'axios';\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nconst Payments = () => {\r\n    const [form, setForm] = useState({\r\n        loanId: '',\r\n        amount: '',\r\n    });\r\n    const [loans, setLoans] = useState([]);\r\n    const [message, setMessage] = useState('');\r\n\r\n    useEffect(() => {\r\n        const fetchLoans = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:5000/api/loans');\r\n                setLoans(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching loans:', error);\r\n            }\r\n        };\r\n\r\n        fetchLoans();\r\n    }, []);\r\n\r\n    const handleChange = (e) => {\r\n        setForm({\r\n            ...form,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const response = await axios.post('http://localhost:5000/api/payments', form);\r\n            setMessage('Pago registrado con éxito.');\r\n        } catch (error) {\r\n            setMessage('Error al registrar el pago.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <h1>Registro de Pagos</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"loanId\" className=\"form-label\">Préstamo</label>\r\n                    <select\r\n                        className=\"form-control\"\r\n                        id=\"loanId\"\r\n                        name=\"loanId\"\r\n                        value={form.loanId}\r\n                        onChange={handleChange}\r\n                        required\r\n                    >\r\n                        <option value=\"\">Seleccione un préstamo</option>\r\n                        {loans.map(loan => (\r\n                            <option key={loan._id} value={loan._id}>\r\n                                {loan.clientId.name} - {loan.amount} ({loan.clientId.email})\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"amount\" className=\"form-label\">Monto</label>\r\n                    <input\r\n                        type=\"number\"\r\n                        className=\"form-control\"\r\n                        id=\"amount\"\r\n                        name=\"amount\"\r\n                        value={form.amount}\r\n                        onChange={handleChange}\r\n                        required\r\n                    />\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary\">Registrar Pago</button>\r\n                {message && <p>{message}</p>}\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Payments;\r\n*/\r\n\r\n\r\n\r\n/*\r\nimport axios from 'axios';\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nconst Payments = () => {\r\n    const [form, setForm] = useState({\r\n        loanId: '',\r\n        amount: '',\r\n    });\r\n    const [loans, setLoans] = useState([]);\r\n    const [message, setMessage] = useState('');\r\n\r\n    useEffect(() => {\r\n        const fetchLoans = async () => {\r\n            try {\r\n                const response = await axios.get(`http://localhost:5000/api/loans`);\r\n                setLoans(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching loans:', error);\r\n            }\r\n        };\r\n\r\n        fetchLoans();\r\n    }, []);\r\n\r\n    const handleChange = (e) => {\r\n        setForm({\r\n            ...form,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const response = await axios.post(`http://localhost:5000/api/payments`, form);\r\n            setMessage('Pago registrado con éxito.');\r\n        } catch (error) {\r\n            setMessage('Error al registrar el pago.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <h1>Registro de Pagos</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"loanId\" className=\"form-label\">Préstamo</label>\r\n                    <select\r\n                        className=\"form-control\"\r\n                        id=\"loanId\"\r\n                        name=\"loanId\"\r\n                        value={form.loanId}\r\n                        onChange={handleChange}\r\n                        required\r\n                    >\r\n                        <option value=\"\">Seleccione un préstamo</option>\r\n                        {loans.map(loan => (\r\n                            <option key={loan._id} value={loan._id}>\r\n                                {loan.clientId} - {loan.amount}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"amount\" className=\"form-label\">Monto</label>\r\n                    <input\r\n                        type=\"number\"\r\n                        className=\"form-control\"\r\n                        id=\"amount\"\r\n                        name=\"amount\"\r\n                        value={form.amount}\r\n                        onChange={handleChange}\r\n                        required\r\n                    />\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary\">Registrar Pago</button>\r\n                {message && <p>{message}</p>}\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Payments;*/\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}