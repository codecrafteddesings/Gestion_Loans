{"ast":null,"code":"/*import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst LoanRequest = () => {\r\n  const [form, setForm] = useState({\r\n    name: '',\r\n    amount: '',\r\n    term: '',\r\n  });\r\n  const [message, setMessage] = useState('');\r\n\r\n  const handleChange = (e) => {\r\n    setForm({\r\n      ...form,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await axios.post(`${process.env.REACT_APP_API_URL}/loans`, form);\r\n      setMessage('Solicitud de préstamo enviada con éxito.');\r\n    } catch (error) {\r\n      setMessage('Error al enviar la solicitud de préstamo.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h1>Solicitud de Préstamo</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"name\" className=\"form-label\">Nombre</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"name\"\r\n            name=\"name\"\r\n            value={form.name}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"amount\" className=\"form-label\">Cantidad</label>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control\"\r\n            id=\"amount\"\r\n            name=\"amount\"\r\n            value={form.amount}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"term\" className=\"form-label\">Plazo (meses)</label>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control\"\r\n            id=\"term\"\r\n            name=\"term\"\r\n            value={form.term}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">Enviar Solicitud</button>\r\n      </form>\r\n      {message && <div className=\"mt-3 alert alert-info\">{message}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoanRequest;*/\n\n/*import React from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nconst LoanRequest = () => {\r\n  return (\r\n    <div className=\"loan-request-container\">\r\n      <h2>Solicitud de Préstamo</h2>\r\n      <Formik\r\n        initialValues={{ amount: '', term: '', purpose: '' }}\r\n        validationSchema={Yup.object({\r\n          amount: Yup.number().required('Required'),\r\n          term: Yup.string().required('Required'),\r\n          purpose: Yup.string().required('Required')\r\n        })}\r\n        onSubmit={(values, { setSubmitting }) => {\r\n          setTimeout(() => {\r\n            console.log(values);\r\n            setSubmitting(false);\r\n          }, 400);\r\n        }}\r\n      >\r\n        {({ isSubmitting }) => (\r\n          <Form>\r\n            <div>\r\n              <label htmlFor=\"amount\">Monto</label>\r\n              <Field name=\"amount\" type=\"text\" />\r\n              <ErrorMessage name=\"amount\" component=\"div\" />\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"term\">Plazo</label>\r\n              <Field name=\"term\" type=\"text\" />\r\n              <ErrorMessage name=\"term\" component=\"div\" />\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"purpose\">Propósito</label>\r\n              <Field name=\"purpose\" type=\"text\" />\r\n              <ErrorMessage name=\"purpose\" component=\"div\" />\r\n            </div>\r\n            <button type=\"submit\" disabled={isSubmitting}>Solicitar Préstamo</button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoanRequest; */","map":{"version":3,"names":[],"sources":["D:/Usuario/wilme/Escritorio/Nueva carpeta/loan-app-ui/src/components/LoanRequest.js"],"sourcesContent":["/*import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst LoanRequest = () => {\r\n  const [form, setForm] = useState({\r\n    name: '',\r\n    amount: '',\r\n    term: '',\r\n  });\r\n  const [message, setMessage] = useState('');\r\n\r\n  const handleChange = (e) => {\r\n    setForm({\r\n      ...form,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await axios.post(`${process.env.REACT_APP_API_URL}/loans`, form);\r\n      setMessage('Solicitud de préstamo enviada con éxito.');\r\n    } catch (error) {\r\n      setMessage('Error al enviar la solicitud de préstamo.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h1>Solicitud de Préstamo</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"name\" className=\"form-label\">Nombre</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"name\"\r\n            name=\"name\"\r\n            value={form.name}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"amount\" className=\"form-label\">Cantidad</label>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control\"\r\n            id=\"amount\"\r\n            name=\"amount\"\r\n            value={form.amount}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"term\" className=\"form-label\">Plazo (meses)</label>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control\"\r\n            id=\"term\"\r\n            name=\"term\"\r\n            value={form.term}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">Enviar Solicitud</button>\r\n      </form>\r\n      {message && <div className=\"mt-3 alert alert-info\">{message}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoanRequest;*/\r\n\r\n\r\n/*import React from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nconst LoanRequest = () => {\r\n  return (\r\n    <div className=\"loan-request-container\">\r\n      <h2>Solicitud de Préstamo</h2>\r\n      <Formik\r\n        initialValues={{ amount: '', term: '', purpose: '' }}\r\n        validationSchema={Yup.object({\r\n          amount: Yup.number().required('Required'),\r\n          term: Yup.string().required('Required'),\r\n          purpose: Yup.string().required('Required')\r\n        })}\r\n        onSubmit={(values, { setSubmitting }) => {\r\n          setTimeout(() => {\r\n            console.log(values);\r\n            setSubmitting(false);\r\n          }, 400);\r\n        }}\r\n      >\r\n        {({ isSubmitting }) => (\r\n          <Form>\r\n            <div>\r\n              <label htmlFor=\"amount\">Monto</label>\r\n              <Field name=\"amount\" type=\"text\" />\r\n              <ErrorMessage name=\"amount\" component=\"div\" />\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"term\">Plazo</label>\r\n              <Field name=\"term\" type=\"text\" />\r\n              <ErrorMessage name=\"term\" component=\"div\" />\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"purpose\">Propósito</label>\r\n              <Field name=\"purpose\" type=\"text\" />\r\n              <ErrorMessage name=\"purpose\" component=\"div\" />\r\n            </div>\r\n            <button type=\"submit\" disabled={isSubmitting}>Solicitar Préstamo</button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoanRequest; */"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}