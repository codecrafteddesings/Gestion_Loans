{"ast":null,"code":"/*import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nconst LoanRequest = () => {\r\n  const [form, setForm] = useState({\r\n    clientId: \"\",\r\n    amount: \"\",\r\n    interestRate: \"\",\r\n    term: \"\",\r\n    frequency: \"daily\",\r\n  });\r\n  const [clientes, setClientes] = useState([]);\r\n  const [filteredClientes, setFilteredClientes] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const fetchClientes = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:5000/api/clientes`);\r\n        setClientes(response.data);\r\n        setFilteredClientes(response.data); // Initially, show all clients\r\n      } catch (error) {\r\n        console.error(\"Error fetching clients:\", error);\r\n      }\r\n    };\r\n\r\n    fetchClientes();\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    setForm({\r\n      ...form,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSearchChange = (e) => {\r\n    const query = e.target.value;\r\n    setSearchQuery(query);\r\n    if (query) {\r\n      setFilteredClientes(\r\n        clientes.filter((cliente) =>\r\n          cliente.name.toLowerCase().includes(query.toLowerCase())\r\n        )\r\n      );\r\n    } else {\r\n      setFilteredClientes(clientes);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.post(\r\n        `http://localhost:5000/api/loans/request`,\r\n        form\r\n      );\r\n      setMessage(\"Préstamo solicitado con éxito.\");\r\n    } catch (error) {\r\n      setMessage(\"Error al solicitar el préstamo.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <div className=\"jumbotron text-center\">\r\n        <h1 className=\"display-4\">Solicitud de Préstamo</h1>\r\n        <p className=\"lead\">\r\n          Complete el formulario para solicitar un préstamo\r\n        </p>\r\n      </div>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"search\" className=\"form-label\">\r\n            Buscar Cliente\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"search\"\r\n            placeholder=\"Buscar por nombre o correo electrónico\"\r\n            value={searchQuery}\r\n            onChange={handleSearchChange}\r\n          />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"clientId\" className=\"form-label\">\r\n            Cliente\r\n          </label>\r\n          <select\r\n            className=\"form-control\"\r\n            id=\"clientId\"\r\n            name=\"clientId\"\r\n            value={form.clientId}\r\n            onChange={handleChange}\r\n            required\r\n          >\r\n            <option value=\"\">Seleccione un cliente</option>\r\n            {filteredClientes.map((cliente) => (\r\n              <option key={cliente._id} value={cliente._id}>\r\n                {cliente.name} ({cliente.email})\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"amount\" className=\"form-label\">\r\n            Monto\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control\"\r\n            id=\"amount\"\r\n            name=\"amount\"\r\n            value={form.amount}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"interestRate\" className=\"form-label\">\r\n            Tasa de Interés (%)\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control\"\r\n            id=\"interestRate\"\r\n            name=\"interestRate\"\r\n            value={form.interestRate}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"term\" className=\"form-label\">\r\n            Término (días, Semanas, Quincenal, Meses)\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control\"\r\n            id=\"term\"\r\n            name=\"term\"\r\n            value={form.term}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"frequency\" className=\"form-label\">\r\n            Frecuencia\r\n          </label>\r\n          <select\r\n            className=\"form-control\"\r\n            id=\"frequency\"\r\n            name=\"frequency\"\r\n            value={form.frequency}\r\n            onChange={handleChange}\r\n            required\r\n          >\r\n            <option value=\"daily\">Diario</option>\r\n            <option value=\"weekly\">Semanal</option>\r\n            <option value=\"biweekly\">Quincenal</option>\r\n            <option value=\"monthly\">Mensual</option>\r\n          </select>\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Solicitar Préstamo\r\n        </button>\r\n        {message && <p>{message}</p>}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoanRequest; */","map":{"version":3,"names":[],"sources":["D:/Usuario/wilme/Escritorio/Gestion_Loans_Clean/loan-app-ui/src/components/LoanRequest.js"],"sourcesContent":["/*import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nconst LoanRequest = () => {\r\n  const [form, setForm] = useState({\r\n    clientId: \"\",\r\n    amount: \"\",\r\n    interestRate: \"\",\r\n    term: \"\",\r\n    frequency: \"daily\",\r\n  });\r\n  const [clientes, setClientes] = useState([]);\r\n  const [filteredClientes, setFilteredClientes] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const fetchClientes = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:5000/api/clientes`);\r\n        setClientes(response.data);\r\n        setFilteredClientes(response.data); // Initially, show all clients\r\n      } catch (error) {\r\n        console.error(\"Error fetching clients:\", error);\r\n      }\r\n    };\r\n\r\n    fetchClientes();\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    setForm({\r\n      ...form,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSearchChange = (e) => {\r\n    const query = e.target.value;\r\n    setSearchQuery(query);\r\n    if (query) {\r\n      setFilteredClientes(\r\n        clientes.filter((cliente) =>\r\n          cliente.name.toLowerCase().includes(query.toLowerCase())\r\n        )\r\n      );\r\n    } else {\r\n      setFilteredClientes(clientes);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.post(\r\n        `http://localhost:5000/api/loans/request`,\r\n        form\r\n      );\r\n      setMessage(\"Préstamo solicitado con éxito.\");\r\n    } catch (error) {\r\n      setMessage(\"Error al solicitar el préstamo.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <div className=\"jumbotron text-center\">\r\n        <h1 className=\"display-4\">Solicitud de Préstamo</h1>\r\n        <p className=\"lead\">\r\n          Complete el formulario para solicitar un préstamo\r\n        </p>\r\n      </div>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"search\" className=\"form-label\">\r\n            Buscar Cliente\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"search\"\r\n            placeholder=\"Buscar por nombre o correo electrónico\"\r\n            value={searchQuery}\r\n            onChange={handleSearchChange}\r\n          />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"clientId\" className=\"form-label\">\r\n            Cliente\r\n          </label>\r\n          <select\r\n            className=\"form-control\"\r\n            id=\"clientId\"\r\n            name=\"clientId\"\r\n            value={form.clientId}\r\n            onChange={handleChange}\r\n            required\r\n          >\r\n            <option value=\"\">Seleccione un cliente</option>\r\n            {filteredClientes.map((cliente) => (\r\n              <option key={cliente._id} value={cliente._id}>\r\n                {cliente.name} ({cliente.email})\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"amount\" className=\"form-label\">\r\n            Monto\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control\"\r\n            id=\"amount\"\r\n            name=\"amount\"\r\n            value={form.amount}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"interestRate\" className=\"form-label\">\r\n            Tasa de Interés (%)\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control\"\r\n            id=\"interestRate\"\r\n            name=\"interestRate\"\r\n            value={form.interestRate}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"term\" className=\"form-label\">\r\n            Término (días, Semanas, Quincenal, Meses)\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control\"\r\n            id=\"term\"\r\n            name=\"term\"\r\n            value={form.term}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"frequency\" className=\"form-label\">\r\n            Frecuencia\r\n          </label>\r\n          <select\r\n            className=\"form-control\"\r\n            id=\"frequency\"\r\n            name=\"frequency\"\r\n            value={form.frequency}\r\n            onChange={handleChange}\r\n            required\r\n          >\r\n            <option value=\"daily\">Diario</option>\r\n            <option value=\"weekly\">Semanal</option>\r\n            <option value=\"biweekly\">Quincenal</option>\r\n            <option value=\"monthly\">Mensual</option>\r\n          </select>\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Solicitar Préstamo\r\n        </button>\r\n        {message && <p>{message}</p>}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoanRequest; */"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}