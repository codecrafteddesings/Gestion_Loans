{"ast":null,"code":"var _jsxFileName = \"D:\\\\Usuario\\\\wilme\\\\Escritorio\\\\Gestion_Loans\\\\loan-app-ui\\\\src\\\\components\\\\Payments.js\",\n  _s = $RefreshSig$();\n/*import axios from 'axios';\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nconst Payments = () => {\r\n    const [form, setForm] = useState({\r\n        loanId: '',\r\n        amount: '',\r\n    });\r\n    const [loans, setLoans] = useState([]);\r\n    const [message, setMessage] = useState('');\r\n\r\n    useEffect(() => {\r\n        const fetchLoans = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:5000/api/loans');\r\n                setLoans(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching loans:', error);\r\n            }\r\n        };\r\n\r\n        fetchLoans();\r\n    }, []);\r\n\r\n    const handleChange = (e) => {\r\n        setForm({\r\n            ...form,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const response = await axios.post('http://localhost:5000/api/payments', form);\r\n            setMessage('Pago registrado con éxito.');\r\n        } catch (error) {\r\n            setMessage('Error al registrar el pago.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <h1>Registro de Pagos</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"loanId\" className=\"form-label\">Préstamo</label>\r\n                    <select\r\n                        className=\"form-control\"\r\n                        id=\"loanId\"\r\n                        name=\"loanId\"\r\n                        value={form.loanId}\r\n                        onChange={handleChange}\r\n                        required\r\n                    >\r\n                        <option value=\"\">Seleccione un préstamo</option>\r\n                        {loans.map(loan => (\r\n                            <option key={loan._id} value={loan._id}>\r\n                                {loan.clientId.name} - {loan.amount} ({loan.clientId.email})\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"amount\" className=\"form-label\">Monto</label>\r\n                    <input\r\n                        type=\"number\"\r\n                        className=\"form-control\"\r\n                        id=\"amount\"\r\n                        name=\"amount\"\r\n                        value={form.amount}\r\n                        onChange={handleChange}\r\n                        required\r\n                    />\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary\">Registrar Pago</button>\r\n                {message && <p>{message}</p>}\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Payments;\r\n*/\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Payments = () => {\n  _s();\n  const [form, setForm] = useState({\n    loanId: '',\n    amount: ''\n  });\n  const [loans, setLoans] = useState([]);\n  const [message, setMessage] = useState('');\n  useEffect(() => {\n    const fetchLoans = async () => {\n      try {\n        const response = await axios.get(`${process.env.REACT_APP_API_URL}/loans`);\n        setLoans(response.data);\n      } catch (error) {\n        console.error('Error fetching loans:', error);\n      }\n    };\n    fetchLoans();\n  }, []);\n  const handleChange = e => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post(`${process.env.REACT_APP_API_URL}/payments`, form);\n      setMessage('Pago registrado con éxito.');\n    } catch (error) {\n      setMessage('Error al registrar el pago.');\n    }\n  };\n  const getClientName = loanId => {\n    const loan = loans.find(loan => loan._id === loanId);\n    return loan && loan.clientId ? `${loan.clientId.name} (${loan.clientId.email})` : 'Cliente no definido';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Registro de Pagos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"loanId\",\n          className: \"form-label\",\n          children: \"Pr\\xE9stamo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"form-control\",\n          id: \"loanId\",\n          name: \"loanId\",\n          value: form.loanId,\n          onChange: handleChange,\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Seleccione un pr\\xE9stamo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 25\n          }, this), loans.map(loan => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: loan._id,\n            children: loan.clientId && loan.clientId.name ? `${loan.clientId.name} - ${loan.amount} (${loan.clientId.email})` : `Préstamo ID: ${loan._id}`\n          }, loan._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this), form.loanId && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Cliente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: getClientName(form.loanId)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"amount\",\n          className: \"form-label\",\n          children: \"Monto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          className: \"form-control\",\n          id: \"amount\",\n          name: \"amount\",\n          value: form.amount,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Registrar Pago\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 9\n  }, this);\n};\n_s(Payments, \"WCAILiqBWWpXZCe6IOJ7M/iKQ5Q=\");\n_c = Payments;\nexport default Payments;\nvar _c;\n$RefreshReg$(_c, \"Payments\");","map":{"version":3,"names":["axios","React","useState","useEffect","jsxDEV","_jsxDEV","Payments","_s","form","setForm","loanId","amount","loans","setLoans","message","setMessage","fetchLoans","response","get","process","env","REACT_APP_API_URL","data","error","console","handleChange","e","target","name","value","handleSubmit","preventDefault","post","getClientName","loan","find","_id","clientId","email","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","onChange","required","map","type","_c","$RefreshReg$"],"sources":["D:/Usuario/wilme/Escritorio/Gestion_Loans/loan-app-ui/src/components/Payments.js"],"sourcesContent":["/*import axios from 'axios';\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nconst Payments = () => {\r\n    const [form, setForm] = useState({\r\n        loanId: '',\r\n        amount: '',\r\n    });\r\n    const [loans, setLoans] = useState([]);\r\n    const [message, setMessage] = useState('');\r\n\r\n    useEffect(() => {\r\n        const fetchLoans = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:5000/api/loans');\r\n                setLoans(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching loans:', error);\r\n            }\r\n        };\r\n\r\n        fetchLoans();\r\n    }, []);\r\n\r\n    const handleChange = (e) => {\r\n        setForm({\r\n            ...form,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const response = await axios.post('http://localhost:5000/api/payments', form);\r\n            setMessage('Pago registrado con éxito.');\r\n        } catch (error) {\r\n            setMessage('Error al registrar el pago.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <h1>Registro de Pagos</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"loanId\" className=\"form-label\">Préstamo</label>\r\n                    <select\r\n                        className=\"form-control\"\r\n                        id=\"loanId\"\r\n                        name=\"loanId\"\r\n                        value={form.loanId}\r\n                        onChange={handleChange}\r\n                        required\r\n                    >\r\n                        <option value=\"\">Seleccione un préstamo</option>\r\n                        {loans.map(loan => (\r\n                            <option key={loan._id} value={loan._id}>\r\n                                {loan.clientId.name} - {loan.amount} ({loan.clientId.email})\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"amount\" className=\"form-label\">Monto</label>\r\n                    <input\r\n                        type=\"number\"\r\n                        className=\"form-control\"\r\n                        id=\"amount\"\r\n                        name=\"amount\"\r\n                        value={form.amount}\r\n                        onChange={handleChange}\r\n                        required\r\n                    />\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary\">Registrar Pago</button>\r\n                {message && <p>{message}</p>}\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Payments;\r\n*/\r\nimport axios from 'axios';\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nconst Payments = () => {\r\n    const [form, setForm] = useState({\r\n        loanId: '',\r\n        amount: '',\r\n    });\r\n    const [loans, setLoans] = useState([]);\r\n    const [message, setMessage] = useState('');\r\n\r\n    useEffect(() => {\r\n        const fetchLoans = async () => {\r\n            try {\r\n                const response = await axios.get(`${process.env.REACT_APP_API_URL}/loans`);\r\n                setLoans(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching loans:', error);\r\n            }\r\n        };\r\n\r\n        fetchLoans();\r\n    }, []);\r\n\r\n    const handleChange = (e) => {\r\n        setForm({\r\n            ...form,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const response = await axios.post(`${process.env.REACT_APP_API_URL}/payments`, form);\r\n            setMessage('Pago registrado con éxito.');\r\n        } catch (error) {\r\n            setMessage('Error al registrar el pago.');\r\n        }\r\n    };\r\n\r\n    const getClientName = (loanId) => {\r\n        const loan = loans.find(loan => loan._id === loanId);\r\n        return loan && loan.clientId ? `${loan.clientId.name} (${loan.clientId.email})` : 'Cliente no definido';\r\n    };\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <h1>Registro de Pagos</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"loanId\" className=\"form-label\">Préstamo</label>\r\n                    <select\r\n                        className=\"form-control\"\r\n                        id=\"loanId\"\r\n                        name=\"loanId\"\r\n                        value={form.loanId}\r\n                        onChange={handleChange}\r\n                        required\r\n                    >\r\n                        <option value=\"\">Seleccione un préstamo</option>\r\n                        {loans.map(loan => (\r\n                            <option key={loan._id} value={loan._id}>\r\n                                {loan.clientId && loan.clientId.name ? `${loan.clientId.name} - ${loan.amount} (${loan.clientId.email})` : `Préstamo ID: ${loan._id}`}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n                {form.loanId && (\r\n                    <div className=\"mb-3\">\r\n                        <label>Cliente</label>\r\n                        <p>{getClientName(form.loanId)}</p>\r\n                    </div>\r\n                )}\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"amount\" className=\"form-label\">Monto</label>\r\n                    <input\r\n                        type=\"number\"\r\n                        className=\"form-control\"\r\n                        id=\"amount\"\r\n                        name=\"amount\"\r\n                        value={form.amount}\r\n                        onChange={handleChange}\r\n                        required\r\n                    />\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary\">Registrar Pago</button>\r\n                {message && <p>{message}</p>}\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Payments;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}